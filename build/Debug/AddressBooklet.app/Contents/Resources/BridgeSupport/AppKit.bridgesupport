<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/AudioToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/AudioUnit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreData.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework'/>
<depends_on path='/System/Library/Frameworks/CoreAudio.framework'/>
<depends_on path='/System/Library/Frameworks/DiskArbitration.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<struct name='NSEdgeInsets' type64='{_NSEdgeInsets=&quot;top&quot;d&quot;left&quot;d&quot;bottom&quot;d&quot;right&quot;d}' type='{_NSEdgeInsets=&quot;top&quot;f&quot;left&quot;f&quot;bottom&quot;f&quot;right&quot;f}'/>
<opaque name='NSModalSession' type='^{_NSModalSession=}'/>
<opaque name='NSOpenGLContextAuxiliary' type='^{_CGLContextObject=}'/>
<opaque name='NSOpenGLPixelFormatAuxiliary' type='^{_CGLPixelFormatObject=}'/>
<opaque name='NSScreenAuxiliaryOpaque' type='^{NSScreenAuxiliary=}'/>
<opaque name='_NSProgressIndicatorThreadInfo' type='^{__NSProgressIndicatorThreadInfo=}'/>
<opaque name='_NSThreadPrivate' type='^{NSThreadPrivate=}'/>
<constant name='NSAbortModalException' type='@'/>
<constant name='NSAbortPrintingException' type='@'/>
<constant name='NSAccessibilityAllowedValuesAttribute' type='@'/>
<constant name='NSAccessibilityApplicationActivatedNotification' type='@'/>
<constant name='NSAccessibilityApplicationDeactivatedNotification' type='@'/>
<constant name='NSAccessibilityApplicationHiddenNotification' type='@'/>
<constant name='NSAccessibilityApplicationRole' type='@'/>
<constant name='NSAccessibilityApplicationShownNotification' type='@'/>
<constant name='NSAccessibilityAscendingSortDirectionValue' type='@'/>
<constant name='NSAccessibilityAttachmentTextAttribute' type='@'/>
<constant name='NSAccessibilityAttributedStringForRangeParameterizedAttribute' type='@'/>
<constant name='NSAccessibilityAutocorrectedTextAttribute' type='@'/>
<constant name='NSAccessibilityBackgroundColorTextAttribute' type='@'/>
<constant name='NSAccessibilityBoundsForRangeParameterizedAttribute' type='@'/>
<constant name='NSAccessibilityBrowserRole' type='@'/>
<constant name='NSAccessibilityBusyIndicatorRole' type='@'/>
<constant name='NSAccessibilityButtonRole' type='@'/>
<constant name='NSAccessibilityCancelAction' type='@'/>
<constant name='NSAccessibilityCancelButtonAttribute' type='@'/>
<constant name='NSAccessibilityCellForColumnAndRowParameterizedAttribute' type='@'/>
<constant name='NSAccessibilityCellRole' type='@'/>
<constant name='NSAccessibilityCenterTabStopMarkerTypeValue' type='@'/>
<constant name='NSAccessibilityCentimetersUnitValue' type='@'/>
<constant name='NSAccessibilityCheckBoxRole' type='@'/>
<constant name='NSAccessibilityChildrenAttribute' type='@'/>
<constant name='NSAccessibilityClearButtonAttribute' type='@'/>
<constant name='NSAccessibilityCloseButtonAttribute' type='@'/>
<constant name='NSAccessibilityCloseButtonSubrole' type='@'/>
<constant name='NSAccessibilityColorWellRole' type='@'/>
<constant name='NSAccessibilityColumnCountAttribute' type='@'/>
<constant name='NSAccessibilityColumnHeaderUIElementsAttribute' type='@'/>
<constant name='NSAccessibilityColumnIndexRangeAttribute' type='@'/>
<constant name='NSAccessibilityColumnRole' type='@'/>
<constant name='NSAccessibilityColumnTitlesAttribute' type='@'/>
<constant name='NSAccessibilityColumnsAttribute' type='@'/>
<constant name='NSAccessibilityComboBoxRole' type='@'/>
<constant name='NSAccessibilityConfirmAction' type='@'/>
<constant name='NSAccessibilityContentListSubrole' type='@'/>
<constant name='NSAccessibilityContentsAttribute' type='@'/>
<constant name='NSAccessibilityCreatedNotification' type='@'/>
<constant name='NSAccessibilityCriticalValueAttribute' type='@'/>
<constant name='NSAccessibilityDecimalTabStopMarkerTypeValue' type='@'/>
<constant name='NSAccessibilityDecrementAction' type='@'/>
<constant name='NSAccessibilityDecrementArrowSubrole' type='@'/>
<constant name='NSAccessibilityDecrementButtonAttribute' type='@'/>
<constant name='NSAccessibilityDecrementPageSubrole' type='@'/>
<constant name='NSAccessibilityDefaultButtonAttribute' type='@'/>
<constant name='NSAccessibilityDefinitionListSubrole' type='@'/>
<constant name='NSAccessibilityDeleteAction' type='@'/>
<constant name='NSAccessibilityDescendingSortDirectionValue' type='@'/>
<constant name='NSAccessibilityDescriptionAttribute' type='@'/>
<constant name='NSAccessibilityDialogSubrole' type='@'/>
<constant name='NSAccessibilityDisclosedByRowAttribute' type='@'/>
<constant name='NSAccessibilityDisclosedRowsAttribute' type='@'/>
<constant name='NSAccessibilityDisclosingAttribute' type='@'/>
<constant name='NSAccessibilityDisclosureLevelAttribute' type='@'/>
<constant name='NSAccessibilityDisclosureTriangleRole' type='@'/>
<constant name='NSAccessibilityDocumentAttribute' type='@'/>
<constant name='NSAccessibilityDrawerCreatedNotification' type='@'/>
<constant name='NSAccessibilityDrawerRole' type='@'/>
<constant name='NSAccessibilityEditedAttribute' type='@'/>
<constant name='NSAccessibilityEnabledAttribute' type='@'/>
<constant name='NSAccessibilityErrorCodeExceptionInfo' type='@'/>
<constant name='NSAccessibilityException' type='@'/>
<constant name='NSAccessibilityExpandedAttribute' type='@'/>
<constant name='NSAccessibilityFilenameAttribute' type='@'/>
<constant name='NSAccessibilityFirstLineIndentMarkerTypeValue' type='@'/>
<constant name='NSAccessibilityFloatingWindowSubrole' type='@'/>
<constant name='NSAccessibilityFocusedAttribute' type='@'/>
<constant name='NSAccessibilityFocusedUIElementAttribute' type='@'/>
<constant name='NSAccessibilityFocusedUIElementChangedNotification' type='@'/>
<constant name='NSAccessibilityFocusedWindowAttribute' type='@'/>
<constant name='NSAccessibilityFocusedWindowChangedNotification' type='@'/>
<constant name='NSAccessibilityFontFamilyKey' type='@'/>
<constant name='NSAccessibilityFontNameKey' type='@'/>
<constant name='NSAccessibilityFontSizeKey' type='@'/>
<constant name='NSAccessibilityFontTextAttribute' type='@'/>
<constant name='NSAccessibilityForegroundColorTextAttribute' type='@'/>
<constant name='NSAccessibilityFrontmostAttribute' type='@'/>
<constant name='NSAccessibilityFullScreenButtonAttribute' type='@'/>
<constant name='NSAccessibilityFullScreenButtonSubrole' type='@'/>
<constant name='NSAccessibilityGridRole' type='@'/>
<constant name='NSAccessibilityGroupRole' type='@'/>
<constant name='NSAccessibilityGrowAreaAttribute' type='@'/>
<constant name='NSAccessibilityGrowAreaRole' type='@'/>
<constant name='NSAccessibilityHandleRole' type='@'/>
<constant name='NSAccessibilityHandlesAttribute' type='@'/>
<constant name='NSAccessibilityHeadIndentMarkerTypeValue' type='@'/>
<constant name='NSAccessibilityHeaderAttribute' type='@'/>
<constant name='NSAccessibilityHelpAttribute' type='@'/>
<constant name='NSAccessibilityHelpTagCreatedNotification' type='@'/>
<constant name='NSAccessibilityHelpTagRole' type='@'/>
<constant name='NSAccessibilityHiddenAttribute' type='@'/>
<constant name='NSAccessibilityHorizontalOrientationValue' type='@'/>
<constant name='NSAccessibilityHorizontalScrollBarAttribute' type='@'/>
<constant name='NSAccessibilityHorizontalUnitDescriptionAttribute' type='@'/>
<constant name='NSAccessibilityHorizontalUnitsAttribute' type='@'/>
<constant name='NSAccessibilityIdentifierAttribute' type='@'/>
<constant name='NSAccessibilityImageRole' type='@'/>
<constant name='NSAccessibilityInchesUnitValue' type='@'/>
<constant name='NSAccessibilityIncrementAction' type='@'/>
<constant name='NSAccessibilityIncrementArrowSubrole' type='@'/>
<constant name='NSAccessibilityIncrementButtonAttribute' type='@'/>
<constant name='NSAccessibilityIncrementPageSubrole' type='@'/>
<constant name='NSAccessibilityIncrementorRole' type='@'/>
<constant name='NSAccessibilityIndexAttribute' type='@'/>
<constant name='NSAccessibilityInsertionPointLineNumberAttribute' type='@'/>
<constant name='NSAccessibilityLabelUIElementsAttribute' type='@'/>
<constant name='NSAccessibilityLabelValueAttribute' type='@'/>
<constant name='NSAccessibilityLayoutAreaRole' type='@'/>
<constant name='NSAccessibilityLayoutItemRole' type='@'/>
<constant name='NSAccessibilityLayoutPointForScreenPointParameterizedAttribute' type='@'/>
<constant name='NSAccessibilityLayoutSizeForScreenSizeParameterizedAttribute' type='@'/>
<constant name='NSAccessibilityLeftTabStopMarkerTypeValue' type='@'/>
<constant name='NSAccessibilityLevelIndicatorRole' type='@'/>
<constant name='NSAccessibilityLineForIndexParameterizedAttribute' type='@'/>
<constant name='NSAccessibilityLinkRole' type='@'/>
<constant name='NSAccessibilityLinkTextAttribute' type='@'/>
<constant name='NSAccessibilityLinkedUIElementsAttribute' type='@'/>
<constant name='NSAccessibilityListRole' type='@'/>
<constant name='NSAccessibilityMainAttribute' type='@'/>
<constant name='NSAccessibilityMainWindowAttribute' type='@'/>
<constant name='NSAccessibilityMainWindowChangedNotification' type='@'/>
<constant name='NSAccessibilityMarkerGroupUIElementAttribute' type='@'/>
<constant name='NSAccessibilityMarkerTypeAttribute' type='@'/>
<constant name='NSAccessibilityMarkerTypeDescriptionAttribute' type='@'/>
<constant name='NSAccessibilityMarkerUIElementsAttribute' type='@'/>
<constant name='NSAccessibilityMarkerValuesAttribute' type='@'/>
<constant name='NSAccessibilityMatteContentUIElementAttribute' type='@'/>
<constant name='NSAccessibilityMatteHoleAttribute' type='@'/>
<constant name='NSAccessibilityMatteRole' type='@'/>
<constant name='NSAccessibilityMaxValueAttribute' type='@'/>
<constant name='NSAccessibilityMenuBarAttribute' type='@'/>
<constant name='NSAccessibilityMenuBarRole' type='@'/>
<constant name='NSAccessibilityMenuButtonRole' type='@'/>
<constant name='NSAccessibilityMenuItemRole' type='@'/>
<constant name='NSAccessibilityMenuRole' type='@'/>
<constant name='NSAccessibilityMinValueAttribute' type='@'/>
<constant name='NSAccessibilityMinimizeButtonAttribute' type='@'/>
<constant name='NSAccessibilityMinimizeButtonSubrole' type='@'/>
<constant name='NSAccessibilityMinimizedAttribute' type='@'/>
<constant name='NSAccessibilityMisspelledTextAttribute' type='@'/>
<constant name='NSAccessibilityModalAttribute' type='@'/>
<constant name='NSAccessibilityMovedNotification' type='@'/>
<constant name='NSAccessibilityNextContentsAttribute' type='@'/>
<constant name='NSAccessibilityNumberOfCharactersAttribute' type='@'/>
<constant name='NSAccessibilityOrderedByRowAttribute' type='@'/>
<constant name='NSAccessibilityOrientationAttribute' type='@'/>
<constant name='NSAccessibilityOutlineRole' type='@'/>
<constant name='NSAccessibilityOutlineRowSubrole' type='@'/>
<constant name='NSAccessibilityOverflowButtonAttribute' type='@'/>
<constant name='NSAccessibilityParentAttribute' type='@'/>
<constant name='NSAccessibilityPicasUnitValue' type='@'/>
<constant name='NSAccessibilityPickAction' type='@'/>
<constant name='NSAccessibilityPlaceholderValueAttribute' type='@'/>
<constant name='NSAccessibilityPointsUnitValue' type='@'/>
<constant name='NSAccessibilityPopUpButtonRole' type='@'/>
<constant name='NSAccessibilityPopoverRole' type='@'/>
<constant name='NSAccessibilityPositionAttribute' type='@'/>
<constant name='NSAccessibilityPressAction' type='@'/>
<constant name='NSAccessibilityPreviousContentsAttribute' type='@'/>
<constant name='NSAccessibilityProgressIndicatorRole' type='@'/>
<constant name='NSAccessibilityProxyAttribute' type='@'/>
<constant name='NSAccessibilityRTFForRangeParameterizedAttribute' type='@'/>
<constant name='NSAccessibilityRadioButtonRole' type='@'/>
<constant name='NSAccessibilityRadioGroupRole' type='@'/>
<constant name='NSAccessibilityRaiseAction' type='@'/>
<constant name='NSAccessibilityRangeForIndexParameterizedAttribute' type='@'/>
<constant name='NSAccessibilityRangeForLineParameterizedAttribute' type='@'/>
<constant name='NSAccessibilityRangeForPositionParameterizedAttribute' type='@'/>
<constant name='NSAccessibilityRatingIndicatorSubrole' type='@'/>
<constant name='NSAccessibilityRelevanceIndicatorRole' type='@'/>
<constant name='NSAccessibilityResizedNotification' type='@'/>
<constant name='NSAccessibilityRightTabStopMarkerTypeValue' type='@'/>
<constant name='NSAccessibilityRoleAttribute' type='@'/>
<constant name='NSAccessibilityRoleDescriptionAttribute' type='@'/>
<constant name='NSAccessibilityRowCollapsedNotification' type='@'/>
<constant name='NSAccessibilityRowCountAttribute' type='@'/>
<constant name='NSAccessibilityRowCountChangedNotification' type='@'/>
<constant name='NSAccessibilityRowExpandedNotification' type='@'/>
<constant name='NSAccessibilityRowHeaderUIElementsAttribute' type='@'/>
<constant name='NSAccessibilityRowIndexRangeAttribute' type='@'/>
<constant name='NSAccessibilityRowRole' type='@'/>
<constant name='NSAccessibilityRowsAttribute' type='@'/>
<constant name='NSAccessibilityRulerMarkerRole' type='@'/>
<constant name='NSAccessibilityRulerRole' type='@'/>
<constant name='NSAccessibilityScreenPointForLayoutPointParameterizedAttribute' type='@'/>
<constant name='NSAccessibilityScreenSizeForLayoutSizeParameterizedAttribute' type='@'/>
<constant name='NSAccessibilityScrollAreaRole' type='@'/>
<constant name='NSAccessibilityScrollBarRole' type='@'/>
<constant name='NSAccessibilitySearchButtonAttribute' type='@'/>
<constant name='NSAccessibilitySearchFieldSubrole' type='@'/>
<constant name='NSAccessibilitySearchMenuAttribute' type='@'/>
<constant name='NSAccessibilitySecureTextFieldSubrole' type='@'/>
<constant name='NSAccessibilitySelectedAttribute' type='@'/>
<constant name='NSAccessibilitySelectedCellsAttribute' type='@'/>
<constant name='NSAccessibilitySelectedCellsChangedNotification' type='@'/>
<constant name='NSAccessibilitySelectedChildrenAttribute' type='@'/>
<constant name='NSAccessibilitySelectedChildrenChangedNotification' type='@'/>
<constant name='NSAccessibilitySelectedChildrenMovedNotification' type='@'/>
<constant name='NSAccessibilitySelectedColumnsAttribute' type='@'/>
<constant name='NSAccessibilitySelectedColumnsChangedNotification' type='@'/>
<constant name='NSAccessibilitySelectedRowsAttribute' type='@'/>
<constant name='NSAccessibilitySelectedRowsChangedNotification' type='@'/>
<constant name='NSAccessibilitySelectedTextAttribute' type='@'/>
<constant name='NSAccessibilitySelectedTextChangedNotification' type='@'/>
<constant name='NSAccessibilitySelectedTextRangeAttribute' type='@'/>
<constant name='NSAccessibilitySelectedTextRangesAttribute' type='@'/>
<constant name='NSAccessibilityServesAsTitleForUIElementsAttribute' type='@'/>
<constant name='NSAccessibilityShadowTextAttribute' type='@'/>
<constant name='NSAccessibilitySharedCharacterRangeAttribute' type='@'/>
<constant name='NSAccessibilitySharedTextUIElementsAttribute' type='@'/>
<constant name='NSAccessibilitySheetCreatedNotification' type='@'/>
<constant name='NSAccessibilitySheetRole' type='@'/>
<constant name='NSAccessibilityShowMenuAction' type='@'/>
<constant name='NSAccessibilityShownMenuAttribute' type='@'/>
<constant name='NSAccessibilitySizeAttribute' type='@'/>
<constant name='NSAccessibilitySliderRole' type='@'/>
<constant name='NSAccessibilitySortButtonRole' type='@'/>
<constant name='NSAccessibilitySortButtonSubrole' type='@'/>
<constant name='NSAccessibilitySortDirectionAttribute' type='@'/>
<constant name='NSAccessibilitySplitGroupRole' type='@'/>
<constant name='NSAccessibilitySplitterRole' type='@'/>
<constant name='NSAccessibilitySplittersAttribute' type='@'/>
<constant name='NSAccessibilityStandardWindowSubrole' type='@'/>
<constant name='NSAccessibilityStaticTextRole' type='@'/>
<constant name='NSAccessibilityStrikethroughColorTextAttribute' type='@'/>
<constant name='NSAccessibilityStrikethroughTextAttribute' type='@'/>
<constant name='NSAccessibilityStringForRangeParameterizedAttribute' type='@'/>
<constant name='NSAccessibilityStyleRangeForIndexParameterizedAttribute' type='@'/>
<constant name='NSAccessibilitySubroleAttribute' type='@'/>
<constant name='NSAccessibilitySuperscriptTextAttribute' type='@'/>
<constant name='NSAccessibilitySystemDialogSubrole' type='@'/>
<constant name='NSAccessibilitySystemFloatingWindowSubrole' type='@'/>
<constant name='NSAccessibilitySystemWideRole' type='@'/>
<constant name='NSAccessibilityTabGroupRole' type='@'/>
<constant name='NSAccessibilityTableRole' type='@'/>
<constant name='NSAccessibilityTableRowSubrole' type='@'/>
<constant name='NSAccessibilityTabsAttribute' type='@'/>
<constant name='NSAccessibilityTailIndentMarkerTypeValue' type='@'/>
<constant name='NSAccessibilityTextAreaRole' type='@'/>
<constant name='NSAccessibilityTextAttachmentSubrole' type='@'/>
<constant name='NSAccessibilityTextFieldRole' type='@'/>
<constant name='NSAccessibilityTextLinkSubrole' type='@'/>
<constant name='NSAccessibilityTimelineSubrole' type='@'/>
<constant name='NSAccessibilityTitleAttribute' type='@'/>
<constant name='NSAccessibilityTitleChangedNotification' type='@'/>
<constant name='NSAccessibilityTitleUIElementAttribute' type='@'/>
<constant name='NSAccessibilityToolbarButtonAttribute' type='@'/>
<constant name='NSAccessibilityToolbarButtonSubrole' type='@'/>
<constant name='NSAccessibilityToolbarRole' type='@'/>
<constant name='NSAccessibilityTopLevelUIElementAttribute' type='@'/>
<constant name='NSAccessibilityUIElementDestroyedNotification' type='@'/>
<constant name='NSAccessibilityURLAttribute' type='@'/>
<constant name='NSAccessibilityUnderlineColorTextAttribute' type='@'/>
<constant name='NSAccessibilityUnderlineTextAttribute' type='@'/>
<constant name='NSAccessibilityUnitDescriptionAttribute' type='@'/>
<constant name='NSAccessibilityUnitsAttribute' type='@'/>
<constant name='NSAccessibilityUnitsChangedNotification' type='@'/>
<constant name='NSAccessibilityUnknownMarkerTypeValue' type='@'/>
<constant name='NSAccessibilityUnknownOrientationValue' type='@'/>
<constant name='NSAccessibilityUnknownRole' type='@'/>
<constant name='NSAccessibilityUnknownSortDirectionValue' type='@'/>
<constant name='NSAccessibilityUnknownSubrole' type='@'/>
<constant name='NSAccessibilityUnknownUnitValue' type='@'/>
<constant name='NSAccessibilityValueAttribute' type='@'/>
<constant name='NSAccessibilityValueChangedNotification' type='@'/>
<constant name='NSAccessibilityValueDescriptionAttribute' type='@'/>
<constant name='NSAccessibilityValueIndicatorRole' type='@'/>
<constant name='NSAccessibilityVerticalOrientationValue' type='@'/>
<constant name='NSAccessibilityVerticalScrollBarAttribute' type='@'/>
<constant name='NSAccessibilityVerticalUnitDescriptionAttribute' type='@'/>
<constant name='NSAccessibilityVerticalUnitsAttribute' type='@'/>
<constant name='NSAccessibilityVisibleCellsAttribute' type='@'/>
<constant name='NSAccessibilityVisibleCharacterRangeAttribute' type='@'/>
<constant name='NSAccessibilityVisibleChildrenAttribute' type='@'/>
<constant name='NSAccessibilityVisibleColumnsAttribute' type='@'/>
<constant name='NSAccessibilityVisibleNameKey' type='@'/>
<constant name='NSAccessibilityVisibleRowsAttribute' type='@'/>
<constant name='NSAccessibilityWarningValueAttribute' type='@'/>
<constant name='NSAccessibilityWindowAttribute' type='@'/>
<constant name='NSAccessibilityWindowCreatedNotification' type='@'/>
<constant name='NSAccessibilityWindowDeminiaturizedNotification' type='@'/>
<constant name='NSAccessibilityWindowMiniaturizedNotification' type='@'/>
<constant name='NSAccessibilityWindowMovedNotification' type='@'/>
<constant name='NSAccessibilityWindowResizedNotification' type='@'/>
<constant name='NSAccessibilityWindowRole' type='@'/>
<constant name='NSAccessibilityWindowsAttribute' type='@'/>
<constant name='NSAccessibilityZoomButtonAttribute' type='@'/>
<constant name='NSAccessibilityZoomButtonSubrole' type='@'/>
<constant name='NSAlignmentBinding' type='@'/>
<constant name='NSAllRomanInputSourcesLocaleIdentifier' type='@'/>
<constant name='NSAllowsEditingMultipleValuesSelectionBindingOption' type='@'/>
<constant name='NSAllowsNullArgumentBindingOption' type='@'/>
<constant name='NSAlternateImageBinding' type='@'/>
<constant name='NSAlternateTitleBinding' type='@'/>
<constant name='NSAlwaysPresentsApplicationModalAlertsBindingOption' type='@'/>
<constant name='NSAnimateBinding' type='@'/>
<constant name='NSAnimationDelayBinding' type='@'/>
<constant name='NSAnimationProgressMark' type='@'/>
<constant name='NSAnimationProgressMarkNotification' type='@'/>
<constant name='NSAnimationTriggerOrderIn' type='@'/>
<constant name='NSAnimationTriggerOrderOut' type='@'/>
<constant name='NSAntialiasThresholdChangedNotification' type='@'/>
<constant name='NSApp' type='@'/>
<constant name='NSAppKitIgnoredException' type='@'/>
<constant name='NSAppKitVersionNumber' type='d'/>
<constant name='NSAppKitVirtualMemoryException' type='@'/>
<constant name='NSApplicationDidBecomeActiveNotification' type='@'/>
<constant name='NSApplicationDidChangeScreenParametersNotification' type='@'/>
<constant name='NSApplicationDidFinishLaunchingNotification' type='@'/>
<constant name='NSApplicationDidFinishRestoringWindowsNotification' type='@'/>
<constant name='NSApplicationDidHideNotification' type='@'/>
<constant name='NSApplicationDidResignActiveNotification' type='@'/>
<constant name='NSApplicationDidUnhideNotification' type='@'/>
<constant name='NSApplicationDidUpdateNotification' type='@'/>
<constant name='NSApplicationFileType' type='@'/>
<constant name='NSApplicationLaunchIsDefaultLaunchKey' type='@'/>
<constant name='NSApplicationLaunchRemoteNotificationKey' type='@'/>
<constant name='NSApplicationWillBecomeActiveNotification' type='@'/>
<constant name='NSApplicationWillFinishLaunchingNotification' type='@'/>
<constant name='NSApplicationWillHideNotification' type='@'/>
<constant name='NSApplicationWillResignActiveNotification' type='@'/>
<constant name='NSApplicationWillTerminateNotification' type='@'/>
<constant name='NSApplicationWillUnhideNotification' type='@'/>
<constant name='NSApplicationWillUpdateNotification' type='@'/>
<constant name='NSArgumentBinding' type='@'/>
<constant name='NSAttachmentAttributeName' type='@'/>
<constant name='NSAttributedStringBinding' type='@'/>
<constant name='NSAuthorDocumentAttribute' type='@'/>
<constant name='NSBackgroundColorAttributeName' type='@'/>
<constant name='NSBackgroundColorDocumentAttribute' type='@'/>
<constant name='NSBadBitmapParametersException' type='@'/>
<constant name='NSBadComparisonException' type='@'/>
<constant name='NSBadRTFColorTableException' type='@'/>
<constant name='NSBadRTFDirectiveException' type='@'/>
<constant name='NSBadRTFFontTableException' type='@'/>
<constant name='NSBadRTFStyleSheetException' type='@'/>
<constant name='NSBaseURLDocumentOption' type='@'/>
<constant name='NSBaselineOffsetAttributeName' type='@'/>
<constant name='NSBlack' type64='d' type='f'/>
<constant name='NSBottomMarginDocumentAttribute' type='@'/>
<constant name='NSBrowserColumnConfigurationDidChangeNotification' type='@'/>
<constant name='NSBrowserIllegalDelegateException' type='@'/>
<constant name='NSCalibratedBlackColorSpace' type='@'/>
<constant name='NSCalibratedRGBColorSpace' type='@'/>
<constant name='NSCalibratedWhiteColorSpace' type='@'/>
<constant name='NSCategoryDocumentAttribute' type='@'/>
<constant name='NSCharacterEncodingDocumentAttribute' type='@'/>
<constant name='NSCharacterEncodingDocumentOption' type='@'/>
<constant name='NSCharacterShapeAttributeName' type='@'/>
<constant name='NSCocoaVersionDocumentAttribute' type='@'/>
<constant name='NSColorListDidChangeNotification' type='@'/>
<constant name='NSColorListIOException' type='@'/>
<constant name='NSColorListNotEditableException' type='@'/>
<constant name='NSColorPanelColorDidChangeNotification' type='@'/>
<constant name='NSColorPboardType' type='@'/>
<constant name='NSComboBoxSelectionDidChangeNotification' type='@'/>
<constant name='NSComboBoxSelectionIsChangingNotification' type='@'/>
<constant name='NSComboBoxWillDismissNotification' type='@'/>
<constant name='NSComboBoxWillPopUpNotification' type='@'/>
<constant name='NSCommentDocumentAttribute' type='@'/>
<constant name='NSCompanyDocumentAttribute' type='@'/>
<constant name='NSConditionallySetsEditableBindingOption' type='@'/>
<constant name='NSConditionallySetsEnabledBindingOption' type='@'/>
<constant name='NSConditionallySetsHiddenBindingOption' type='@'/>
<constant name='NSContentArrayBinding' type='@'/>
<constant name='NSContentArrayForMultipleSelectionBinding' type='@'/>
<constant name='NSContentBinding' type='@'/>
<constant name='NSContentDictionaryBinding' type='@'/>
<constant name='NSContentHeightBinding' type='@'/>
<constant name='NSContentObjectBinding' type='@'/>
<constant name='NSContentObjectsBinding' type='@'/>
<constant name='NSContentPlacementTagBindingOption' type='@'/>
<constant name='NSContentSetBinding' type='@'/>
<constant name='NSContentValuesBinding' type='@'/>
<constant name='NSContentWidthBinding' type='@'/>
<constant name='NSContextHelpModeDidActivateNotification' type='@'/>
<constant name='NSContextHelpModeDidDeactivateNotification' type='@'/>
<constant name='NSContinuouslyUpdatesValueBindingOption' type='@'/>
<constant name='NSControlTextDidBeginEditingNotification' type='@'/>
<constant name='NSControlTextDidChangeNotification' type='@'/>
<constant name='NSControlTextDidEndEditingNotification' type='@'/>
<constant name='NSControlTintDidChangeNotification' type='@'/>
<constant name='NSConvertedDocumentAttribute' type='@'/>
<constant name='NSCopyrightDocumentAttribute' type='@'/>
<constant name='NSCreatesSortDescriptorBindingOption' type='@'/>
<constant name='NSCreationTimeDocumentAttribute' type='@'/>
<constant name='NSCriticalValueBinding' type='@'/>
<constant name='NSCursorAttributeName' type='@'/>
<constant name='NSCustomColorSpace' type='@'/>
<constant name='NSDarkGray' type64='d' type='f'/>
<constant name='NSDataBinding' type='@'/>
<constant name='NSDefaultAttributesDocumentOption' type='@'/>
<constant name='NSDefaultTabIntervalDocumentAttribute' type='@'/>
<constant name='NSDefinitionPresentationTypeDictionaryApplication' type='@'/>
<constant name='NSDefinitionPresentationTypeKey' type='@'/>
<constant name='NSDefinitionPresentationTypeOverlay' type='@'/>
<constant name='NSDeletesObjectsOnRemoveBindingsOption' type='@'/>
<constant name='NSDeviceBitsPerSample' type='@'/>
<constant name='NSDeviceBlackColorSpace' type='@'/>
<constant name='NSDeviceCMYKColorSpace' type='@'/>
<constant name='NSDeviceColorSpaceName' type='@'/>
<constant name='NSDeviceIsPrinter' type='@'/>
<constant name='NSDeviceIsScreen' type='@'/>
<constant name='NSDeviceRGBColorSpace' type='@'/>
<constant name='NSDeviceResolution' type='@'/>
<constant name='NSDeviceSize' type='@'/>
<constant name='NSDeviceWhiteColorSpace' type='@'/>
<constant name='NSDirectoryFileType' type='@'/>
<constant name='NSDisplayNameBindingOption' type='@'/>
<constant name='NSDisplayPatternBindingOption' type='@'/>
<constant name='NSDisplayPatternTitleBinding' type='@'/>
<constant name='NSDisplayPatternValueBinding' type='@'/>
<constant name='NSDocFormatTextDocumentType' type='@'/>
<constant name='NSDocumentEditedBinding' type='@'/>
<constant name='NSDocumentTypeDocumentAttribute' type='@'/>
<constant name='NSDocumentTypeDocumentOption' type='@'/>
<constant name='NSDoubleClickArgumentBinding' type='@'/>
<constant name='NSDoubleClickTargetBinding' type='@'/>
<constant name='NSDragPboard' type='@'/>
<constant name='NSDraggingException' type='@'/>
<constant name='NSDraggingImageComponentIconKey' type='@'/>
<constant name='NSDraggingImageComponentLabelKey' type='@'/>
<constant name='NSDrawerDidCloseNotification' type='@'/>
<constant name='NSDrawerDidOpenNotification' type='@'/>
<constant name='NSDrawerWillCloseNotification' type='@'/>
<constant name='NSDrawerWillOpenNotification' type='@'/>
<constant name='NSEditableBinding' type='@'/>
<constant name='NSEditorDocumentAttribute' type='@'/>
<constant name='NSEnabledBinding' type='@'/>
<constant name='NSEventTrackingRunLoopMode' type='@'/>
<constant name='NSExcludedElementsDocumentAttribute' type='@'/>
<constant name='NSExcludedKeysBinding' type='@'/>
<constant name='NSExpansionAttributeName' type='@'/>
<constant name='NSFileContentsPboardType' type='@'/>
<constant name='NSFileTypeDocumentAttribute' type='@'/>
<constant name='NSFileTypeDocumentOption' type='@'/>
<constant name='NSFilenamesPboardType' type='@'/>
<constant name='NSFilesPromisePboardType' type='@'/>
<constant name='NSFilesystemFileType' type='@'/>
<constant name='NSFilterPredicateBinding' type='@'/>
<constant name='NSFindPanelCaseInsensitiveSearch' type='@'/>
<constant name='NSFindPanelSearchOptionsPboardType' type='@'/>
<constant name='NSFindPanelSubstringMatch' type='@'/>
<constant name='NSFindPboard' type='@'/>
<constant name='NSFontAttributeName' type='@'/>
<constant name='NSFontBinding' type='@'/>
<constant name='NSFontBoldBinding' type='@'/>
<constant name='NSFontCascadeListAttribute' type='@'/>
<constant name='NSFontCharacterSetAttribute' type='@'/>
<constant name='NSFontCollectionActionKey' type='@'/>
<constant name='NSFontCollectionAllFonts' type='@'/>
<constant name='NSFontCollectionDidChangeNotification' type='@'/>
<constant name='NSFontCollectionDisallowAutoActivationOption' type='@'/>
<constant name='NSFontCollectionFavorites' type='@'/>
<constant name='NSFontCollectionIncludeDisabledFontsOption' type='@'/>
<constant name='NSFontCollectionNameKey' type='@'/>
<constant name='NSFontCollectionOldNameKey' type='@'/>
<constant name='NSFontCollectionRecentlyUsed' type='@'/>
<constant name='NSFontCollectionRemoveDuplicatesOption' type='@'/>
<constant name='NSFontCollectionUser' type='@'/>
<constant name='NSFontCollectionVisibilityKey' type='@'/>
<constant name='NSFontCollectionWasHidden' type='@'/>
<constant name='NSFontCollectionWasRenamed' type='@'/>
<constant name='NSFontCollectionWasShown' type='@'/>
<constant name='NSFontColorAttribute' type='@'/>
<constant name='NSFontFaceAttribute' type='@'/>
<constant name='NSFontFamilyAttribute' type='@'/>
<constant name='NSFontFamilyNameBinding' type='@'/>
<constant name='NSFontFeatureSelectorIdentifierKey' type='@'/>
<constant name='NSFontFeatureSettingsAttribute' type='@'/>
<constant name='NSFontFeatureTypeIdentifierKey' type='@'/>
<constant name='NSFontFixedAdvanceAttribute' type='@'/>
<constant name='NSFontIdentityMatrix' type64='^d' type='^f'/>
<constant name='NSFontItalicBinding' type='@'/>
<constant name='NSFontMatrixAttribute' type='@'/>
<constant name='NSFontNameAttribute' type='@'/>
<constant name='NSFontNameBinding' type='@'/>
<constant name='NSFontPboard' type='@'/>
<constant name='NSFontPboardType' type='@'/>
<constant name='NSFontSetChangedNotification' type='@'/>
<constant name='NSFontSizeAttribute' type='@'/>
<constant name='NSFontSizeBinding' type='@'/>
<constant name='NSFontSlantTrait' type='@'/>
<constant name='NSFontSymbolicTrait' type='@'/>
<constant name='NSFontTraitsAttribute' type='@'/>
<constant name='NSFontUnavailableException' type='@'/>
<constant name='NSFontVariationAttribute' type='@'/>
<constant name='NSFontVariationAxisDefaultValueKey' type='@'/>
<constant name='NSFontVariationAxisIdentifierKey' type='@'/>
<constant name='NSFontVariationAxisMaximumValueKey' type='@'/>
<constant name='NSFontVariationAxisMinimumValueKey' type='@'/>
<constant name='NSFontVariationAxisNameKey' type='@'/>
<constant name='NSFontVisibleNameAttribute' type='@'/>
<constant name='NSFontWeightTrait' type='@'/>
<constant name='NSFontWidthTrait' type='@'/>
<constant name='NSForegroundColorAttributeName' type='@'/>
<constant name='NSFullScreenModeAllScreens' type='@'/>
<constant name='NSFullScreenModeApplicationPresentationOptions' type='@'/>
<constant name='NSFullScreenModeSetting' type='@'/>
<constant name='NSFullScreenModeWindowLevel' type='@'/>
<constant name='NSGeneralPboard' type='@'/>
<constant name='NSGlyphInfoAttributeName' type='@'/>
<constant name='NSGraphicsContextDestinationAttributeName' type='@'/>
<constant name='NSGraphicsContextPDFFormat' type='@'/>
<constant name='NSGraphicsContextPSFormat' type='@'/>
<constant name='NSGraphicsContextRepresentationFormatAttributeName' type='@'/>
<constant name='NSHTMLPboardType' type='@'/>
<constant name='NSHTMLTextDocumentType' type='@'/>
<constant name='NSHandlesContentAsCompoundValueBindingOption' type='@'/>
<constant name='NSHeaderTitleBinding' type='@'/>
<constant name='NSHiddenBinding' type='@'/>
<constant name='NSHyphenationFactorDocumentAttribute' type='@'/>
<constant name='NSIllegalSelectorException' type='@'/>
<constant name='NSImageBinding' type='@'/>
<constant name='NSImageCacheException' type='@'/>
<constant name='NSImageColorSyncProfileData' type='@'/>
<constant name='NSImageCompressionFactor' type='@'/>
<constant name='NSImageCompressionMethod' type='@'/>
<constant name='NSImageCurrentFrame' type='@'/>
<constant name='NSImageCurrentFrameDuration' type='@'/>
<constant name='NSImageDitherTransparency' type='@'/>
<constant name='NSImageEXIFData' type='@'/>
<constant name='NSImageFallbackBackgroundColor' type='@'/>
<constant name='NSImageFrameCount' type='@'/>
<constant name='NSImageGamma' type='@'/>
<constant name='NSImageHintCTM' type='@'/>
<constant name='NSImageHintInterpolation' type='@'/>
<constant name='NSImageInterlaced' type='@'/>
<constant name='NSImageLoopCount' type='@'/>
<constant name='NSImageNameActionTemplate' type='@'/>
<constant name='NSImageNameAddTemplate' type='@'/>
<constant name='NSImageNameAdvanced' type='@'/>
<constant name='NSImageNameApplicationIcon' type='@'/>
<constant name='NSImageNameBluetoothTemplate' type='@'/>
<constant name='NSImageNameBonjour' type='@'/>
<constant name='NSImageNameBookmarksTemplate' type='@'/>
<constant name='NSImageNameCaution' type='@'/>
<constant name='NSImageNameColorPanel' type='@'/>
<constant name='NSImageNameColumnViewTemplate' type='@'/>
<constant name='NSImageNameComputer' type='@'/>
<constant name='NSImageNameDotMac' type='@'/>
<constant name='NSImageNameEnterFullScreenTemplate' type='@'/>
<constant name='NSImageNameEveryone' type='@'/>
<constant name='NSImageNameExitFullScreenTemplate' type='@'/>
<constant name='NSImageNameFlowViewTemplate' type='@'/>
<constant name='NSImageNameFolder' type='@'/>
<constant name='NSImageNameFolderBurnable' type='@'/>
<constant name='NSImageNameFolderSmart' type='@'/>
<constant name='NSImageNameFollowLinkFreestandingTemplate' type='@'/>
<constant name='NSImageNameFontPanel' type='@'/>
<constant name='NSImageNameGoLeftTemplate' type='@'/>
<constant name='NSImageNameGoRightTemplate' type='@'/>
<constant name='NSImageNameHomeTemplate' type='@'/>
<constant name='NSImageNameIChatTheaterTemplate' type='@'/>
<constant name='NSImageNameIconViewTemplate' type='@'/>
<constant name='NSImageNameInfo' type='@'/>
<constant name='NSImageNameInvalidDataFreestandingTemplate' type='@'/>
<constant name='NSImageNameLeftFacingTriangleTemplate' type='@'/>
<constant name='NSImageNameListViewTemplate' type='@'/>
<constant name='NSImageNameLockLockedTemplate' type='@'/>
<constant name='NSImageNameLockUnlockedTemplate' type='@'/>
<constant name='NSImageNameMenuMixedStateTemplate' type='@'/>
<constant name='NSImageNameMenuOnStateTemplate' type='@'/>
<constant name='NSImageNameMobileMe' type='@'/>
<constant name='NSImageNameMultipleDocuments' type='@'/>
<constant name='NSImageNameNetwork' type='@'/>
<constant name='NSImageNamePathTemplate' type='@'/>
<constant name='NSImageNamePreferencesGeneral' type='@'/>
<constant name='NSImageNameQuickLookTemplate' type='@'/>
<constant name='NSImageNameRefreshFreestandingTemplate' type='@'/>
<constant name='NSImageNameRefreshTemplate' type='@'/>
<constant name='NSImageNameRemoveTemplate' type='@'/>
<constant name='NSImageNameRevealFreestandingTemplate' type='@'/>
<constant name='NSImageNameRightFacingTriangleTemplate' type='@'/>
<constant name='NSImageNameSlideshowTemplate' type='@'/>
<constant name='NSImageNameSmartBadgeTemplate' type='@'/>
<constant name='NSImageNameStatusAvailable' type='@'/>
<constant name='NSImageNameStatusNone' type='@'/>
<constant name='NSImageNameStatusPartiallyAvailable' type='@'/>
<constant name='NSImageNameStatusUnavailable' type='@'/>
<constant name='NSImageNameStopProgressFreestandingTemplate' type='@'/>
<constant name='NSImageNameStopProgressTemplate' type='@'/>
<constant name='NSImageNameTrashEmpty' type='@'/>
<constant name='NSImageNameTrashFull' type='@'/>
<constant name='NSImageNameUser' type='@'/>
<constant name='NSImageNameUserAccounts' type='@'/>
<constant name='NSImageNameUserGroup' type='@'/>
<constant name='NSImageNameUserGuest' type='@'/>
<constant name='NSImageProgressive' type='@'/>
<constant name='NSImageRGBColorTable' type='@'/>
<constant name='NSImageRepRegistryDidChangeNotification' type='@'/>
<constant name='NSIncludedKeysBinding' type='@'/>
<constant name='NSInitialKeyBinding' type='@'/>
<constant name='NSInitialValueBinding' type='@'/>
<constant name='NSInkTextPboardType' type='@'/>
<constant name='NSInsertsNullPlaceholderBindingOption' type='@'/>
<constant name='NSInterfaceStyleDefault' type='@'/>
<constant name='NSInvokesSeparatelyWithArrayObjectsBindingOption' type='@'/>
<constant name='NSIsIndeterminateBinding' type='@'/>
<constant name='NSKernAttributeName' type='@'/>
<constant name='NSKeywordsDocumentAttribute' type='@'/>
<constant name='NSLabelBinding' type='@'/>
<constant name='NSLeftMarginDocumentAttribute' type='@'/>
<constant name='NSLigatureAttributeName' type='@'/>
<constant name='NSLightGray' type64='d' type='f'/>
<constant name='NSLinkAttributeName' type='@'/>
<constant name='NSLocalizedKeyDictionaryBinding' type='@'/>
<constant name='NSMacSimpleTextDocumentType' type='@'/>
<constant name='NSManagedObjectContextBinding' type='@'/>
<constant name='NSManagerDocumentAttribute' type='@'/>
<constant name='NSMarkedClauseSegmentAttributeName' type='@'/>
<constant name='NSMaxValueBinding' type='@'/>
<constant name='NSMaxWidthBinding' type='@'/>
<constant name='NSMaximumRecentsBinding' type='@'/>
<constant name='NSMenuDidAddItemNotification' type='@'/>
<constant name='NSMenuDidBeginTrackingNotification' type='@'/>
<constant name='NSMenuDidChangeItemNotification' type='@'/>
<constant name='NSMenuDidEndTrackingNotification' type='@'/>
<constant name='NSMenuDidRemoveItemNotification' type='@'/>
<constant name='NSMenuDidSendActionNotification' type='@'/>
<constant name='NSMenuWillSendActionNotification' type='@'/>
<constant name='NSMinValueBinding' type='@'/>
<constant name='NSMinWidthBinding' type='@'/>
<constant name='NSMixedStateImageBinding' type='@'/>
<constant name='NSModalPanelRunLoopMode' type='@'/>
<constant name='NSModificationTimeDocumentAttribute' type='@'/>
<constant name='NSMultipleTextSelectionPboardType' type='@'/>
<constant name='NSMultipleValuesMarker' type='@'/>
<constant name='NSMultipleValuesPlaceholderBindingOption' type='@'/>
<constant name='NSNamedColorSpace' type='@'/>
<constant name='NSNibLoadingException' type='@'/>
<constant name='NSNibOwner' type='@'/>
<constant name='NSNibTopLevelObjects' type='@'/>
<constant name='NSNoSelectionMarker' type='@'/>
<constant name='NSNoSelectionPlaceholderBindingOption' type='@'/>
<constant name='NSNotApplicableMarker' type='@'/>
<constant name='NSNotApplicablePlaceholderBindingOption' type='@'/>
<constant name='NSNullPlaceholderBindingOption' type='@'/>
<constant name='NSObliquenessAttributeName' type='@'/>
<constant name='NSObservedKeyPathKey' type='@'/>
<constant name='NSObservedObjectKey' type='@'/>
<constant name='NSOffStateImageBinding' type='@'/>
<constant name='NSOfficeOpenXMLTextDocumentType' type='@'/>
<constant name='NSOnStateImageBinding' type='@'/>
<constant name='NSOpenDocumentTextDocumentType' type='@'/>
<constant name='NSOptionsKey' type='@'/>
<constant name='NSOutlineViewColumnDidMoveNotification' type='@'/>
<constant name='NSOutlineViewColumnDidResizeNotification' type='@'/>
<constant name='NSOutlineViewItemDidCollapseNotification' type='@'/>
<constant name='NSOutlineViewItemDidExpandNotification' type='@'/>
<constant name='NSOutlineViewItemWillCollapseNotification' type='@'/>
<constant name='NSOutlineViewItemWillExpandNotification' type='@'/>
<constant name='NSOutlineViewSelectionDidChangeNotification' type='@'/>
<constant name='NSOutlineViewSelectionIsChangingNotification' type='@'/>
<constant name='NSPDFPboardType' type='@'/>
<constant name='NSPICTPboardType' type='@'/>
<constant name='NSPPDIncludeNotFoundException' type='@'/>
<constant name='NSPPDIncludeStackOverflowException' type='@'/>
<constant name='NSPPDIncludeStackUnderflowException' type='@'/>
<constant name='NSPPDParseException' type='@'/>
<constant name='NSPaperSizeDocumentAttribute' type='@'/>
<constant name='NSParagraphStyleAttributeName' type='@'/>
<constant name='NSPasteboardCommunicationException' type='@'/>
<constant name='NSPasteboardTypeColor' type='@'/>
<constant name='NSPasteboardTypeFindPanelSearchOptions' type='@'/>
<constant name='NSPasteboardTypeFont' type='@'/>
<constant name='NSPasteboardTypeHTML' type='@'/>
<constant name='NSPasteboardTypeMultipleTextSelection' type='@'/>
<constant name='NSPasteboardTypePDF' type='@'/>
<constant name='NSPasteboardTypePNG' type='@'/>
<constant name='NSPasteboardTypeRTF' type='@'/>
<constant name='NSPasteboardTypeRTFD' type='@'/>
<constant name='NSPasteboardTypeRuler' type='@'/>
<constant name='NSPasteboardTypeSound' type='@'/>
<constant name='NSPasteboardTypeString' type='@'/>
<constant name='NSPasteboardTypeTIFF' type='@'/>
<constant name='NSPasteboardTypeTabularText' type='@'/>
<constant name='NSPasteboardTypeTextFinderOptions' type='@'/>
<constant name='NSPasteboardURLReadingContentsConformToTypesKey' type='@'/>
<constant name='NSPasteboardURLReadingFileURLsOnlyKey' type='@'/>
<constant name='NSPatternColorSpace' type='@'/>
<constant name='NSPlainFileType' type='@'/>
<constant name='NSPlainTextDocumentType' type='@'/>
<constant name='NSPopUpButtonCellWillPopUpNotification' type='@'/>
<constant name='NSPopUpButtonWillPopUpNotification' type='@'/>
<constant name='NSPopoverCloseReasonDetachToWindow' type='@'/>
<constant name='NSPopoverCloseReasonKey' type='@'/>
<constant name='NSPopoverCloseReasonStandard' type='@'/>
<constant name='NSPopoverDidCloseNotification' type='@'/>
<constant name='NSPopoverDidShowNotification' type='@'/>
<constant name='NSPopoverWillCloseNotification' type='@'/>
<constant name='NSPopoverWillShowNotification' type='@'/>
<constant name='NSPositioningRectBinding' type='@'/>
<constant name='NSPostScriptPboardType' type='@'/>
<constant name='NSPredicateBinding' type='@'/>
<constant name='NSPredicateFormatBindingOption' type='@'/>
<constant name='NSPreferredScrollerStyleDidChangeNotification' type='@'/>
<constant name='NSPrefixSpacesDocumentAttribute' type='@'/>
<constant name='NSPrintAllPages' type='@'/>
<constant name='NSPrintAllPresetsJobStyleHint' type='@'/>
<constant name='NSPrintBottomMargin' type='@'/>
<constant name='NSPrintCancelJob' type='@'/>
<constant name='NSPrintCopies' type='@'/>
<constant name='NSPrintDetailedErrorReporting' type='@'/>
<constant name='NSPrintFaxNumber' type='@'/>
<constant name='NSPrintFirstPage' type='@'/>
<constant name='NSPrintFormName' type='@'/>
<constant name='NSPrintHeaderAndFooter' type='@'/>
<constant name='NSPrintHorizontalPagination' type='@'/>
<constant name='NSPrintHorizontallyCentered' type='@'/>
<constant name='NSPrintJobDisposition' type='@'/>
<constant name='NSPrintJobFeatures' type='@'/>
<constant name='NSPrintJobSavingFileNameExtensionHidden' type='@'/>
<constant name='NSPrintJobSavingURL' type='@'/>
<constant name='NSPrintLastPage' type='@'/>
<constant name='NSPrintLeftMargin' type='@'/>
<constant name='NSPrintManualFeed' type='@'/>
<constant name='NSPrintMustCollate' type='@'/>
<constant name='NSPrintNoPresetsJobStyleHint' type='@'/>
<constant name='NSPrintOperationExistsException' type='@'/>
<constant name='NSPrintOrientation' type='@'/>
<constant name='NSPrintPackageException' type='@'/>
<constant name='NSPrintPagesAcross' type='@'/>
<constant name='NSPrintPagesDown' type='@'/>
<constant name='NSPrintPagesPerSheet' type='@'/>
<constant name='NSPrintPanelAccessorySummaryItemDescriptionKey' type='@'/>
<constant name='NSPrintPanelAccessorySummaryItemNameKey' type='@'/>
<constant name='NSPrintPaperFeed' type='@'/>
<constant name='NSPrintPaperName' type='@'/>
<constant name='NSPrintPaperSize' type='@'/>
<constant name='NSPrintPhotoJobStyleHint' type='@'/>
<constant name='NSPrintPreviewJob' type='@'/>
<constant name='NSPrintPrinter' type='@'/>
<constant name='NSPrintPrinterName' type='@'/>
<constant name='NSPrintReversePageOrder' type='@'/>
<constant name='NSPrintRightMargin' type='@'/>
<constant name='NSPrintSaveJob' type='@'/>
<constant name='NSPrintSavePath' type='@'/>
<constant name='NSPrintScalingFactor' type='@'/>
<constant name='NSPrintSelectionOnly' type='@'/>
<constant name='NSPrintSpoolJob' type='@'/>
<constant name='NSPrintTime' type='@'/>
<constant name='NSPrintTopMargin' type='@'/>
<constant name='NSPrintVerticalPagination' type='@'/>
<constant name='NSPrintVerticallyCentered' type='@'/>
<constant name='NSPrintingCommunicationException' type='@'/>
<constant name='NSRTFDPboardType' type='@'/>
<constant name='NSRTFDTextDocumentType' type='@'/>
<constant name='NSRTFPboardType' type='@'/>
<constant name='NSRTFPropertyStackOverflowException' type='@'/>
<constant name='NSRTFTextDocumentType' type='@'/>
<constant name='NSRaisesForNotApplicableKeysBindingOption' type='@'/>
<constant name='NSReadOnlyDocumentAttribute' type='@'/>
<constant name='NSRecentSearchesBinding' type='@'/>
<constant name='NSRepresentedFilenameBinding' type='@'/>
<constant name='NSRightMarginDocumentAttribute' type='@'/>
<constant name='NSRowHeightBinding' type='@'/>
<constant name='NSRuleEditorPredicateComparisonModifier' type='@'/>
<constant name='NSRuleEditorPredicateCompoundType' type='@'/>
<constant name='NSRuleEditorPredicateCustomSelector' type='@'/>
<constant name='NSRuleEditorPredicateLeftExpression' type='@'/>
<constant name='NSRuleEditorPredicateOperatorType' type='@'/>
<constant name='NSRuleEditorPredicateOptions' type='@'/>
<constant name='NSRuleEditorPredicateRightExpression' type='@'/>
<constant name='NSRuleEditorRowsDidChangeNotification' type='@'/>
<constant name='NSRulerPboard' type='@'/>
<constant name='NSRulerPboardType' type='@'/>
<constant name='NSScreenColorSpaceDidChangeNotification' type='@'/>
<constant name='NSSelectedIdentifierBinding' type='@'/>
<constant name='NSSelectedIndexBinding' type='@'/>
<constant name='NSSelectedLabelBinding' type='@'/>
<constant name='NSSelectedObjectBinding' type='@'/>
<constant name='NSSelectedObjectsBinding' type='@'/>
<constant name='NSSelectedTagBinding' type='@'/>
<constant name='NSSelectedValueBinding' type='@'/>
<constant name='NSSelectedValuesBinding' type='@'/>
<constant name='NSSelectionIndexPathsBinding' type='@'/>
<constant name='NSSelectionIndexesBinding' type='@'/>
<constant name='NSSelectorNameBindingOption' type='@'/>
<constant name='NSSelectsAllWhenSettingContentBindingOption' type='@'/>
<constant name='NSShadowAttributeName' type='@'/>
<constant name='NSShellCommandFileType' type='@'/>
<constant name='NSSortDescriptorsBinding' type='@'/>
<constant name='NSSoundPboardType' type='@'/>
<constant name='NSSpeechCharacterModeProperty' type='@'/>
<constant name='NSSpeechCommandDelimiterProperty' type='@'/>
<constant name='NSSpeechCommandPrefix' type='@'/>
<constant name='NSSpeechCommandSuffix' type='@'/>
<constant name='NSSpeechCurrentVoiceProperty' type='@'/>
<constant name='NSSpeechDictionaryAbbreviations' type='@'/>
<constant name='NSSpeechDictionaryEntryPhonemes' type='@'/>
<constant name='NSSpeechDictionaryEntrySpelling' type='@'/>
<constant name='NSSpeechDictionaryLocaleIdentifier' type='@'/>
<constant name='NSSpeechDictionaryModificationDate' type='@'/>
<constant name='NSSpeechDictionaryPronunciations' type='@'/>
<constant name='NSSpeechErrorCount' type='@'/>
<constant name='NSSpeechErrorNewestCharacterOffset' type='@'/>
<constant name='NSSpeechErrorNewestCode' type='@'/>
<constant name='NSSpeechErrorOldestCharacterOffset' type='@'/>
<constant name='NSSpeechErrorOldestCode' type='@'/>
<constant name='NSSpeechErrorsProperty' type='@'/>
<constant name='NSSpeechInputModeProperty' type='@'/>
<constant name='NSSpeechModeLiteral' type='@'/>
<constant name='NSSpeechModeNormal' type='@'/>
<constant name='NSSpeechModePhoneme' type='@'/>
<constant name='NSSpeechModeText' type='@'/>
<constant name='NSSpeechNumberModeProperty' type='@'/>
<constant name='NSSpeechOutputToFileURLProperty' type='@'/>
<constant name='NSSpeechPhonemeInfoExample' type='@'/>
<constant name='NSSpeechPhonemeInfoHiliteEnd' type='@'/>
<constant name='NSSpeechPhonemeInfoHiliteStart' type='@'/>
<constant name='NSSpeechPhonemeInfoOpcode' type='@'/>
<constant name='NSSpeechPhonemeInfoSymbol' type='@'/>
<constant name='NSSpeechPhonemeSymbolsProperty' type='@'/>
<constant name='NSSpeechPitchBaseProperty' type='@'/>
<constant name='NSSpeechPitchModProperty' type='@'/>
<constant name='NSSpeechRateProperty' type='@'/>
<constant name='NSSpeechRecentSyncProperty' type='@'/>
<constant name='NSSpeechResetProperty' type='@'/>
<constant name='NSSpeechStatusNumberOfCharactersLeft' type='@'/>
<constant name='NSSpeechStatusOutputBusy' type='@'/>
<constant name='NSSpeechStatusOutputPaused' type='@'/>
<constant name='NSSpeechStatusPhonemeCode' type='@'/>
<constant name='NSSpeechStatusProperty' type='@'/>
<constant name='NSSpeechSynthesizerInfoIdentifier' type='@'/>
<constant name='NSSpeechSynthesizerInfoProperty' type='@'/>
<constant name='NSSpeechSynthesizerInfoVersion' type='@'/>
<constant name='NSSpeechVolumeProperty' type='@'/>
<constant name='NSSpellCheckerDidChangeAutomaticSpellingCorrectionNotification' type='@'/>
<constant name='NSSpellCheckerDidChangeAutomaticTextReplacementNotification' type='@'/>
<constant name='NSSpellingStateAttributeName' type='@'/>
<constant name='NSSplitViewDidResizeSubviewsNotification' type='@'/>
<constant name='NSSplitViewWillResizeSubviewsNotification' type='@'/>
<constant name='NSStrikethroughColorAttributeName' type='@'/>
<constant name='NSStrikethroughStyleAttributeName' type='@'/>
<constant name='NSStringPboardType' type='@'/>
<constant name='NSStrokeColorAttributeName' type='@'/>
<constant name='NSStrokeWidthAttributeName' type='@'/>
<constant name='NSSubjectDocumentAttribute' type='@'/>
<constant name='NSSuperscriptAttributeName' type='@'/>
<constant name='NSSystemColorsDidChangeNotification' type='@'/>
<constant name='NSTIFFException' type='@'/>
<constant name='NSTIFFPboardType' type='@'/>
<constant name='NSTabColumnTerminatorsAttributeName' type='@'/>
<constant name='NSTableViewColumnDidMoveNotification' type='@'/>
<constant name='NSTableViewColumnDidResizeNotification' type='@'/>
<constant name='NSTableViewRowViewKey' type='@'/>
<constant name='NSTableViewSelectionDidChangeNotification' type='@'/>
<constant name='NSTableViewSelectionIsChangingNotification' type='@'/>
<constant name='NSTabularTextPboardType' type='@'/>
<constant name='NSTargetBinding' type='@'/>
<constant name='NSTextCheckingDocumentAuthorKey' type='@'/>
<constant name='NSTextCheckingDocumentTitleKey' type='@'/>
<constant name='NSTextCheckingDocumentURLKey' type='@'/>
<constant name='NSTextCheckingOrthographyKey' type='@'/>
<constant name='NSTextCheckingQuotesKey' type='@'/>
<constant name='NSTextCheckingReferenceDateKey' type='@'/>
<constant name='NSTextCheckingReferenceTimeZoneKey' type='@'/>
<constant name='NSTextCheckingRegularExpressionsKey' type='@'/>
<constant name='NSTextCheckingReplacementsKey' type='@'/>
<constant name='NSTextColorBinding' type='@'/>
<constant name='NSTextDidBeginEditingNotification' type='@'/>
<constant name='NSTextDidChangeNotification' type='@'/>
<constant name='NSTextDidEndEditingNotification' type='@'/>
<constant name='NSTextEncodingNameDocumentAttribute' type='@'/>
<constant name='NSTextEncodingNameDocumentOption' type='@'/>
<constant name='NSTextFinderCaseInsensitiveKey' type='@'/>
<constant name='NSTextFinderMatchingTypeKey' type='@'/>
<constant name='NSTextInputContextKeyboardSelectionDidChangeNotification' type='@'/>
<constant name='NSTextLayoutSectionOrientation' type='@'/>
<constant name='NSTextLayoutSectionRange' type='@'/>
<constant name='NSTextLayoutSectionsAttribute' type='@'/>
<constant name='NSTextLineTooLongException' type='@'/>
<constant name='NSTextNoSelectionException' type='@'/>
<constant name='NSTextReadException' type='@'/>
<constant name='NSTextSizeMultiplierDocumentOption' type='@'/>
<constant name='NSTextStorageDidProcessEditingNotification' type='@'/>
<constant name='NSTextStorageWillProcessEditingNotification' type='@'/>
<constant name='NSTextViewDidChangeSelectionNotification' type='@'/>
<constant name='NSTextViewDidChangeTypingAttributesNotification' type='@'/>
<constant name='NSTextViewWillChangeNotifyingTextViewNotification' type='@'/>
<constant name='NSTextWriteException' type='@'/>
<constant name='NSTimeoutDocumentOption' type='@'/>
<constant name='NSTitleBinding' type='@'/>
<constant name='NSTitleDocumentAttribute' type='@'/>
<constant name='NSToolTipAttributeName' type='@'/>
<constant name='NSToolTipBinding' type='@'/>
<constant name='NSToolbarCustomizeToolbarItemIdentifier' type='@'/>
<constant name='NSToolbarDidRemoveItemNotification' type='@'/>
<constant name='NSToolbarFlexibleSpaceItemIdentifier' type='@'/>
<constant name='NSToolbarPrintItemIdentifier' type='@'/>
<constant name='NSToolbarSeparatorItemIdentifier' type='@'/>
<constant name='NSToolbarShowColorsItemIdentifier' type='@'/>
<constant name='NSToolbarShowFontsItemIdentifier' type='@'/>
<constant name='NSToolbarSpaceItemIdentifier' type='@'/>
<constant name='NSToolbarWillAddItemNotification' type='@'/>
<constant name='NSTopMarginDocumentAttribute' type='@'/>
<constant name='NSTransparentBinding' type='@'/>
<constant name='NSTypedStreamVersionException' type='@'/>
<constant name='NSURLPboardType' type='@'/>
<constant name='NSUnderlineByWordMask' type64='Q' type='I'/>
<constant name='NSUnderlineColorAttributeName' type='@'/>
<constant name='NSUnderlineStrikethroughMask' type64='Q' type='I'/>
<constant name='NSUnderlineStyleAttributeName' type='@'/>
<constant name='NSVCardPboardType' type='@'/>
<constant name='NSValidatesImmediatelyBindingOption' type='@'/>
<constant name='NSValueBinding' type='@'/>
<constant name='NSValuePathBinding' type='@'/>
<constant name='NSValueTransformerBindingOption' type='@'/>
<constant name='NSValueTransformerNameBindingOption' type='@'/>
<constant name='NSValueURLBinding' type='@'/>
<constant name='NSVerticalGlyphFormAttributeName' type='@'/>
<constant name='NSViewAnimationEffectKey' type='@'/>
<constant name='NSViewAnimationEndFrameKey' type='@'/>
<constant name='NSViewAnimationFadeInEffect' type='@'/>
<constant name='NSViewAnimationFadeOutEffect' type='@'/>
<constant name='NSViewAnimationStartFrameKey' type='@'/>
<constant name='NSViewAnimationTargetKey' type='@'/>
<constant name='NSViewBoundsDidChangeNotification' type='@'/>
<constant name='NSViewDidUpdateTrackingAreasNotification' type='@'/>
<constant name='NSViewFocusDidChangeNotification' type='@'/>
<constant name='NSViewFrameDidChangeNotification' type='@'/>
<constant name='NSViewGlobalFrameDidChangeNotification' type='@'/>
<constant name='NSViewModeDocumentAttribute' type='@'/>
<constant name='NSViewNoInstrinsicMetric' type64='d' type='f'/>
<constant name='NSViewSizeDocumentAttribute' type='@'/>
<constant name='NSViewZoomDocumentAttribute' type='@'/>
<constant name='NSVisibleBinding' type='@'/>
<constant name='NSVoiceAge' type='@'/>
<constant name='NSVoiceDemoText' type='@'/>
<constant name='NSVoiceGender' type='@'/>
<constant name='NSVoiceGenderFemale' type='@'/>
<constant name='NSVoiceGenderMale' type='@'/>
<constant name='NSVoiceGenderNeuter' type='@'/>
<constant name='NSVoiceIdentifier' type='@'/>
<constant name='NSVoiceIndividuallySpokenCharacters' type='@'/>
<constant name='NSVoiceLanguage' type='@'/>
<constant name='NSVoiceLocaleIdentifier' type='@'/>
<constant name='NSVoiceName' type='@'/>
<constant name='NSVoiceSupportedCharacters' type='@'/>
<constant name='NSWarningValueBinding' type='@'/>
<constant name='NSWebArchiveTextDocumentType' type='@'/>
<constant name='NSWebPreferencesDocumentOption' type='@'/>
<constant name='NSWebResourceLoadDelegateDocumentOption' type='@'/>
<constant name='NSWhite' type64='d' type='f'/>
<constant name='NSWidthBinding' type='@'/>
<constant name='NSWindowDidBecomeKeyNotification' type='@'/>
<constant name='NSWindowDidBecomeMainNotification' type='@'/>
<constant name='NSWindowDidChangeScreenNotification' type='@'/>
<constant name='NSWindowDidChangeScreenProfileNotification' type='@'/>
<constant name='NSWindowDidDeminiaturizeNotification' type='@'/>
<constant name='NSWindowDidEndLiveResizeNotification' type='@'/>
<constant name='NSWindowDidEndSheetNotification' type='@'/>
<constant name='NSWindowDidEnterFullScreenNotification' type='@'/>
<constant name='NSWindowDidEnterVersionBrowserNotification' type='@'/>
<constant name='NSWindowDidExitFullScreenNotification' type='@'/>
<constant name='NSWindowDidExitVersionBrowserNotification' type='@'/>
<constant name='NSWindowDidExposeNotification' type='@'/>
<constant name='NSWindowDidMiniaturizeNotification' type='@'/>
<constant name='NSWindowDidMoveNotification' type='@'/>
<constant name='NSWindowDidResignKeyNotification' type='@'/>
<constant name='NSWindowDidResignMainNotification' type='@'/>
<constant name='NSWindowDidResizeNotification' type='@'/>
<constant name='NSWindowDidUpdateNotification' type='@'/>
<constant name='NSWindowServerCommunicationException' type='@'/>
<constant name='NSWindowWillBeginSheetNotification' type='@'/>
<constant name='NSWindowWillCloseNotification' type='@'/>
<constant name='NSWindowWillEnterFullScreenNotification' type='@'/>
<constant name='NSWindowWillEnterVersionBrowserNotification' type='@'/>
<constant name='NSWindowWillExitFullScreenNotification' type='@'/>
<constant name='NSWindowWillExitVersionBrowserNotification' type='@'/>
<constant name='NSWindowWillMiniaturizeNotification' type='@'/>
<constant name='NSWindowWillMoveNotification' type='@'/>
<constant name='NSWindowWillStartLiveResizeNotification' type='@'/>
<constant name='NSWordMLTextDocumentType' type='@'/>
<constant name='NSWordTablesReadException' type='@'/>
<constant name='NSWordTablesWriteException' type='@'/>
<constant name='NSWorkspaceActiveSpaceDidChangeNotification' type='@'/>
<constant name='NSWorkspaceApplicationKey' type='@'/>
<constant name='NSWorkspaceCompressOperation' type='@'/>
<constant name='NSWorkspaceCopyOperation' type='@'/>
<constant name='NSWorkspaceDecompressOperation' type='@'/>
<constant name='NSWorkspaceDecryptOperation' type='@'/>
<constant name='NSWorkspaceDesktopImageAllowClippingKey' type='@'/>
<constant name='NSWorkspaceDesktopImageFillColorKey' type='@'/>
<constant name='NSWorkspaceDesktopImageScalingKey' type='@'/>
<constant name='NSWorkspaceDestroyOperation' type='@'/>
<constant name='NSWorkspaceDidActivateApplicationNotification' type='@'/>
<constant name='NSWorkspaceDidChangeFileLabelsNotification' type='@'/>
<constant name='NSWorkspaceDidDeactivateApplicationNotification' type='@'/>
<constant name='NSWorkspaceDidHideApplicationNotification' type='@'/>
<constant name='NSWorkspaceDidLaunchApplicationNotification' type='@'/>
<constant name='NSWorkspaceDidMountNotification' type='@'/>
<constant name='NSWorkspaceDidPerformFileOperationNotification' type='@'/>
<constant name='NSWorkspaceDidRenameVolumeNotification' type='@'/>
<constant name='NSWorkspaceDidTerminateApplicationNotification' type='@'/>
<constant name='NSWorkspaceDidUnhideApplicationNotification' type='@'/>
<constant name='NSWorkspaceDidUnmountNotification' type='@'/>
<constant name='NSWorkspaceDidWakeNotification' type='@'/>
<constant name='NSWorkspaceDuplicateOperation' type='@'/>
<constant name='NSWorkspaceEncryptOperation' type='@'/>
<constant name='NSWorkspaceLaunchConfigurationAppleEvent' type='@'/>
<constant name='NSWorkspaceLaunchConfigurationArchitecture' type='@'/>
<constant name='NSWorkspaceLaunchConfigurationArguments' type='@'/>
<constant name='NSWorkspaceLaunchConfigurationEnvironment' type='@'/>
<constant name='NSWorkspaceLinkOperation' type='@'/>
<constant name='NSWorkspaceMoveOperation' type='@'/>
<constant name='NSWorkspaceRecycleOperation' type='@'/>
<constant name='NSWorkspaceScreensDidSleepNotification' type='@'/>
<constant name='NSWorkspaceScreensDidWakeNotification' type='@'/>
<constant name='NSWorkspaceSessionDidBecomeActiveNotification' type='@'/>
<constant name='NSWorkspaceSessionDidResignActiveNotification' type='@'/>
<constant name='NSWorkspaceVolumeLocalizedNameKey' type='@'/>
<constant name='NSWorkspaceVolumeOldLocalizedNameKey' type='@'/>
<constant name='NSWorkspaceVolumeOldURLKey' type='@'/>
<constant name='NSWorkspaceVolumeURLKey' type='@'/>
<constant name='NSWorkspaceWillLaunchApplicationNotification' type='@'/>
<constant name='NSWorkspaceWillPowerOffNotification' type='@'/>
<constant name='NSWorkspaceWillSleepNotification' type='@'/>
<constant name='NSWorkspaceWillUnmountNotification' type='@'/>
<constant name='NSWritingDirectionAttributeName' type='@'/>
<enum name='NSAWTEventType' value='16'/>
<enum name='NSAboveBottom' value='4'/>
<enum name='NSAboveTop' value='1'/>
<enum name='NSAddTraitFontAction' value='2'/>
<enum name='NSAdobeCNS1CharacterCollection' value='1'/>
<enum name='NSAdobeGB1CharacterCollection' value='2'/>
<enum name='NSAdobeJapan1CharacterCollection' value='3'/>
<enum name='NSAdobeJapan2CharacterCollection' value='4'/>
<enum name='NSAdobeKorea1CharacterCollection' value='5'/>
<enum name='NSAlertAlternateReturn' value='0'/>
<enum name='NSAlertDefaultReturn' value='1'/>
<enum name='NSAlertErrorReturn' value='-2'/>
<enum name='NSAlertFirstButtonReturn' value='1000'/>
<enum name='NSAlertOtherReturn' value='-1'/>
<enum name='NSAlertSecondButtonReturn' value='1001'/>
<enum name='NSAlertThirdButtonReturn' value='1002'/>
<enum name='NSAllScrollerParts' value='2'/>
<enum name='NSAlphaFirstBitmapFormat' value='1'/>
<enum name='NSAlphaNonpremultipliedBitmapFormat' value='2'/>
<enum name='NSAlphaShiftKeyMask' value='65536'/>
<enum name='NSAlternateKeyMask' value='524288'/>
<enum name='NSAnimationBlocking' value='0'/>
<enum name='NSAnimationEaseIn' value='1'/>
<enum name='NSAnimationEaseInOut' value='0'/>
<enum name='NSAnimationEaseOut' value='2'/>
<enum name='NSAnimationEffectDisappearingItemDefault' value='0'/>
<enum name='NSAnimationEffectPoof' value='10'/>
<enum name='NSAnimationLinear' value='3'/>
<enum name='NSAnimationNonblocking' value='1'/>
<enum name='NSAnimationNonblockingThreaded' value='2'/>
<enum name='NSAnyEventMask' value64='18446744073709551615' value='4294967295'/>
<enum name='NSAnyType' value='0'/>
<enum name='NSAppKitDefined' value='13'/>
<enum name='NSAppKitDefinedMask' value='8192'/>
<enum name='NSAppKitVersionNumber10_0' value='577'/>
<enum name='NSAppKitVersionNumber10_1' value='620'/>
<enum name='NSAppKitVersionNumber10_2' value='663'/>
<enum name='NSAppKitVersionNumber10_2_3' value='663.6'/>
<enum name='NSAppKitVersionNumber10_3' value='743'/>
<enum name='NSAppKitVersionNumber10_3_2' value='743.14'/>
<enum name='NSAppKitVersionNumber10_3_3' value='743.2'/>
<enum name='NSAppKitVersionNumber10_3_5' value='743.24'/>
<enum name='NSAppKitVersionNumber10_3_7' value='743.33'/>
<enum name='NSAppKitVersionNumber10_3_9' value='743.36'/>
<enum name='NSAppKitVersionNumber10_4' value='824'/>
<enum name='NSAppKitVersionNumber10_4_1' value='824.1'/>
<enum name='NSAppKitVersionNumber10_4_3' value='824.23'/>
<enum name='NSAppKitVersionNumber10_4_4' value='824.33'/>
<enum name='NSAppKitVersionNumber10_4_7' value='824.41'/>
<enum name='NSAppKitVersionNumber10_5' value='949'/>
<enum name='NSAppKitVersionNumber10_5_2' value='949.27'/>
<enum name='NSAppKitVersionNumber10_5_3' value='949.33'/>
<enum name='NSAppKitVersionNumber10_6' value='1038'/>
<enum name='NSAppKitVersionNumberWithColumnResizingBrowser' value='685.0'/>
<enum name='NSAppKitVersionNumberWithContinuousScrollingBrowser' value='680.0'/>
<enum name='NSAppKitVersionNumberWithCursorSizeSupport' value='682.0'/>
<enum name='NSAppKitVersionNumberWithCustomSheetPosition' value='686.0'/>
<enum name='NSAppKitVersionNumberWithDeferredWindowDisplaySupport' value='1019.0'/>
<enum name='NSAppKitVersionNumberWithDirectionalTabs' value='631.0'/>
<enum name='NSAppKitVersionNumberWithDockTilePlugInSupport' value='1001.0'/>
<enum name='NSAppKitVersionNumberWithPatternColorLeakFix' value='641.0'/>
<enum name='NSApplicationActivateAllWindows' value='1'/>
<enum name='NSApplicationActivateIgnoringOtherApps' value='2'/>
<enum name='NSApplicationActivatedEventType' value='1'/>
<enum name='NSApplicationActivationPolicyAccessory' value='1'/>
<enum name='NSApplicationActivationPolicyProhibited' value='2'/>
<enum name='NSApplicationActivationPolicyRegular' value='0'/>
<enum name='NSApplicationDeactivatedEventType' value='2'/>
<enum name='NSApplicationDefined' value='15'/>
<enum name='NSApplicationDefinedMask' value='32768'/>
<enum name='NSApplicationDelegateReplyCancel' value='1'/>
<enum name='NSApplicationDelegateReplyFailure' value='2'/>
<enum name='NSApplicationDelegateReplySuccess' value='0'/>
<enum name='NSApplicationPresentationAutoHideDock' value='1'/>
<enum name='NSApplicationPresentationAutoHideMenuBar' value='4'/>
<enum name='NSApplicationPresentationAutoHideToolbar' value='2048'/>
<enum name='NSApplicationPresentationDefault' value='0'/>
<enum name='NSApplicationPresentationDisableAppleMenu' value='16'/>
<enum name='NSApplicationPresentationDisableForceQuit' value='64'/>
<enum name='NSApplicationPresentationDisableHideApplication' value='256'/>
<enum name='NSApplicationPresentationDisableMenuBarTransparency' value='512'/>
<enum name='NSApplicationPresentationDisableProcessSwitching' value='32'/>
<enum name='NSApplicationPresentationDisableSessionTermination' value='128'/>
<enum name='NSApplicationPresentationFullScreen' value='1024'/>
<enum name='NSApplicationPresentationHideDock' value='2'/>
<enum name='NSApplicationPresentationHideMenuBar' value='8'/>
<enum name='NSAscendingPageOrder' value='1'/>
<enum name='NSAtBottom' value='5'/>
<enum name='NSAtTop' value='2'/>
<enum name='NSAttachmentCharacter' value='65532'/>
<enum name='NSAutoPagination' value='0'/>
<enum name='NSAutosaveElsewhereOperation' value='3'/>
<enum name='NSAutosaveInPlaceOperation' value='4'/>
<enum name='NSAutosaveOperation' value='3'/>
<enum name='NSBMPFileType' value='1'/>
<enum name='NSBackTabCharacter' value='25'/>
<enum name='NSBackgroundStyleDark' value='1'/>
<enum name='NSBackgroundStyleLight' value='0'/>
<enum name='NSBackgroundStyleLowered' value='3'/>
<enum name='NSBackgroundStyleRaised' value='2'/>
<enum name='NSBackgroundTab' value='1'/>
<enum name='NSBackingStoreBuffered' value='2'/>
<enum name='NSBackingStoreNonretained' value='1'/>
<enum name='NSBackingStoreRetained' value='0'/>
<enum name='NSBackspaceCharacter' value='8'/>
<enum name='NSBacktabTextMovement' value='18'/>
<enum name='NSBeginFunctionKey' value='63274'/>
<enum name='NSBelowBottom' value='6'/>
<enum name='NSBelowTop' value='3'/>
<enum name='NSBevelLineJoinStyle' value='2'/>
<enum name='NSBezelBorder' value='2'/>
<enum name='NSBlueControlTint' value='1'/>
<enum name='NSBoldFontMask' value='2'/>
<enum name='NSBorderlessWindowMask' value='0'/>
<enum name='NSBottomTabsBezelBorder' value='2'/>
<enum name='NSBoxCustom' value='4'/>
<enum name='NSBoxOldStyle' value='3'/>
<enum name='NSBoxPrimary' value='0'/>
<enum name='NSBoxSecondary' value='1'/>
<enum name='NSBoxSeparator' value='2'/>
<enum name='NSBreakFunctionKey' value='63282'/>
<enum name='NSBrowserAutoColumnResizing' value='1'/>
<enum name='NSBrowserDropAbove' value='1'/>
<enum name='NSBrowserDropOn' value='0'/>
<enum name='NSBrowserNoColumnResizing' value='0'/>
<enum name='NSBrowserUserColumnResizing' value='2'/>
<enum name='NSButtLineCapStyle' value='0'/>
<enum name='NSCMYKColorSpaceModel' value='2'/>
<enum name='NSCMYKModeColorPanel' value='2'/>
<enum name='NSCancelButton' value='0'/>
<enum name='NSCancelTextMovement' value='23'/>
<enum name='NSCarriageReturnCharacter' value='13'/>
<enum name='NSCellAllowsMixedState' value='16'/>
<enum name='NSCellChangesContents' value='14'/>
<enum name='NSCellDisabled' value='0'/>
<enum name='NSCellEditable' value='3'/>
<enum name='NSCellHasImageHorizontal' value='12'/>
<enum name='NSCellHasImageOnLeftOrBottom' value='13'/>
<enum name='NSCellHasOverlappingImage' value='11'/>
<enum name='NSCellHighlighted' value='5'/>
<enum name='NSCellHitContentArea' value='1'/>
<enum name='NSCellHitEditableTextArea' value='2'/>
<enum name='NSCellHitNone' value='0'/>
<enum name='NSCellHitTrackableArea' value='4'/>
<enum name='NSCellIsBordered' value='10'/>
<enum name='NSCellIsInsetButton' value='15'/>
<enum name='NSCellLightsByBackground' value='9'/>
<enum name='NSCellLightsByContents' value='6'/>
<enum name='NSCellLightsByGray' value='7'/>
<enum name='NSCellState' value='1'/>
<enum name='NSCenterTabStopType' value='2'/>
<enum name='NSCenterTextAlignment' value='2'/>
<enum name='NSChangeAutosaved' value='4'/>
<enum name='NSChangeBackgroundCell' value='8'/>
<enum name='NSChangeBackgroundCellMask' value='8'/>
<enum name='NSChangeCleared' value='2'/>
<enum name='NSChangeDiscardable' value='256'/>
<enum name='NSChangeDone' value='0'/>
<enum name='NSChangeGrayCell' value='4'/>
<enum name='NSChangeGrayCellMask' value='4'/>
<enum name='NSChangeReadOtherContents' value='3'/>
<enum name='NSChangeRedone' value='5'/>
<enum name='NSChangeUndone' value='1'/>
<enum name='NSCircularBezelStyle' value='7'/>
<enum name='NSCircularSlider' value='1'/>
<enum name='NSClearControlTint' value='7'/>
<enum name='NSClearDisplayFunctionKey' value='63290'/>
<enum name='NSClearLineFunctionKey' value='63289'/>
<enum name='NSClipPagination' value='2'/>
<enum name='NSClockAndCalendarDatePickerStyle' value='1'/>
<enum name='NSClosableWindowMask' value='2'/>
<enum name='NSClosePathBezierPathElement' value='3'/>
<enum name='NSCollectionViewDropBefore' value='1'/>
<enum name='NSCollectionViewDropOn' value='0'/>
<enum name='NSColorListModeColorPanel' value='5'/>
<enum name='NSColorPanelAllModesMask' value='65535'/>
<enum name='NSColorPanelCMYKModeMask' value='4'/>
<enum name='NSColorPanelColorListModeMask' value='32'/>
<enum name='NSColorPanelCrayonModeMask' value='128'/>
<enum name='NSColorPanelCustomPaletteModeMask' value='16'/>
<enum name='NSColorPanelGrayModeMask' value='1'/>
<enum name='NSColorPanelHSBModeMask' value='8'/>
<enum name='NSColorPanelRGBModeMask' value='2'/>
<enum name='NSColorPanelWheelModeMask' value='64'/>
<enum name='NSColorRenderingIntentAbsoluteColorimetric' value='1'/>
<enum name='NSColorRenderingIntentDefault' value='0'/>
<enum name='NSColorRenderingIntentPerceptual' value='3'/>
<enum name='NSColorRenderingIntentRelativeColorimetric' value='2'/>
<enum name='NSColorRenderingIntentSaturation' value='4'/>
<enum name='NSCommandKeyMask' value='1048576'/>
<enum name='NSCompositeClear' value='0'/>
<enum name='NSCompositeCopy' value='1'/>
<enum name='NSCompositeDestinationAtop' value='9'/>
<enum name='NSCompositeDestinationIn' value='7'/>
<enum name='NSCompositeDestinationOut' value='8'/>
<enum name='NSCompositeDestinationOver' value='6'/>
<enum name='NSCompositeHighlight' value='12'/>
<enum name='NSCompositePlusDarker' value='11'/>
<enum name='NSCompositePlusLighter' value='13'/>
<enum name='NSCompositeSourceAtop' value='5'/>
<enum name='NSCompositeSourceIn' value='3'/>
<enum name='NSCompositeSourceOut' value='4'/>
<enum name='NSCompositeSourceOver' value='2'/>
<enum name='NSCompositeXOR' value='10'/>
<enum name='NSCompressedFontMask' value='512'/>
<enum name='NSCondensedFontMask' value='64'/>
<enum name='NSContentsCellMask' value='1'/>
<enum name='NSContinuousCapacityLevelIndicatorStyle' value='1'/>
<enum name='NSControlGlyph' value='16777215'/>
<enum name='NSControlKeyMask' value='262144'/>
<enum name='NSCorrectionIndicatorTypeDefault' value='0'/>
<enum name='NSCorrectionIndicatorTypeGuesses' value='2'/>
<enum name='NSCorrectionIndicatorTypeReversion' value='1'/>
<enum name='NSCorrectionResponseAccepted' value='1'/>
<enum name='NSCorrectionResponseEdited' value='4'/>
<enum name='NSCorrectionResponseIgnored' value='3'/>
<enum name='NSCorrectionResponseNone' value='0'/>
<enum name='NSCorrectionResponseRejected' value='2'/>
<enum name='NSCorrectionResponseReverted' value='5'/>
<enum name='NSCrayonModeColorPanel' value='7'/>
<enum name='NSCriticalAlertStyle' value='2'/>
<enum name='NSCriticalRequest' value='0'/>
<enum name='NSCursorPointingDevice' value='2'/>
<enum name='NSCursorUpdate' value='17'/>
<enum name='NSCursorUpdateMask' value='131072'/>
<enum name='NSCurveToBezierPathElement' value='2'/>
<enum name='NSCustomPaletteModeColorPanel' value='4'/>
<enum name='NSDecimalTabStopType' value='3'/>
<enum name='NSDefaultControlTint' value='0'/>
<enum name='NSDefaultTokenStyle' value='0'/>
<enum name='NSDeleteCharFunctionKey' value='63294'/>
<enum name='NSDeleteCharacter' value='127'/>
<enum name='NSDeleteFunctionKey' value='63272'/>
<enum name='NSDeleteLineFunctionKey' value='63292'/>
<enum name='NSDescendingPageOrder' value='-1'/>
<enum name='NSDeviceIndependentModifierFlagsMask' value='4294901760'/>
<enum name='NSDeviceNColorSpaceModel' value='4'/>
<enum name='NSDirectSelection' value='0'/>
<enum name='NSDisclosureBezelStyle' value='5'/>
<enum name='NSDiscreteCapacityLevelIndicatorStyle' value='2'/>
<enum name='NSDisplayWindowRunLoopOrdering' value='600000'/>
<enum name='NSDocModalWindowMask' value='64'/>
<enum name='NSDockWindowLevel' value='20'/>
<enum name='NSDoubleType' value='6'/>
<enum name='NSDownArrowFunctionKey' value='63233'/>
<enum name='NSDownTextMovement' value='22'/>
<enum name='NSDragOperationAll' value='15'/>
<enum name='NSDragOperationAll_Obsolete' value='15'/>
<enum name='NSDragOperationCopy' value='1'/>
<enum name='NSDragOperationDelete' value='32'/>
<enum name='NSDragOperationEvery' value64='18446744073709551615' value='4294967295'/>
<enum name='NSDragOperationGeneric' value='4'/>
<enum name='NSDragOperationLink' value='2'/>
<enum name='NSDragOperationMove' value='16'/>
<enum name='NSDragOperationNone' value='0'/>
<enum name='NSDragOperationPrivate' value='8'/>
<enum name='NSDraggingContextOutsideApplication' value='0'/>
<enum name='NSDraggingContextWithinApplication' value='1'/>
<enum name='NSDraggingFormationDefault' value='0'/>
<enum name='NSDraggingFormationList' value='3'/>
<enum name='NSDraggingFormationNone' value='1'/>
<enum name='NSDraggingFormationPile' value='2'/>
<enum name='NSDraggingFormationStack' value='4'/>
<enum name='NSDraggingItemEnumerationClearNonenumeratedImages' value='65536'/>
<enum name='NSDraggingItemEnumerationConcurrent' value='1'/>
<enum name='NSDrawerClosedState' value='0'/>
<enum name='NSDrawerClosingState' value='3'/>
<enum name='NSDrawerOpenState' value='2'/>
<enum name='NSDrawerOpeningState' value='1'/>
<enum name='NSEndFunctionKey' value='63275'/>
<enum name='NSEnterCharacter' value='3'/>
<enum name='NSEraDatePickerElementFlag' value='256'/>
<enum name='NSEraserPointingDevice' value='3'/>
<enum name='NSEvenOddWindingRule' value='1'/>
<enum name='NSEventGestureAxisHorizontal' value='1'/>
<enum name='NSEventGestureAxisNone' value='0'/>
<enum name='NSEventGestureAxisVertical' value='2'/>
<enum name='NSEventMaskBeginGesture' value='524288'/>
<enum name='NSEventMaskEndGesture' value='1048576'/>
<enum name='NSEventMaskGesture' value='536870912'/>
<enum name='NSEventMaskMagnify' value='1073741824'/>
<enum name='NSEventMaskRotate' value='262144'/>
<enum name='NSEventMaskSwipe' value='2147483648'/>
<enum name='NSEventPhaseBegan' value='1'/>
<enum name='NSEventPhaseCancelled' value='16'/>
<enum name='NSEventPhaseChanged' value='4'/>
<enum name='NSEventPhaseEnded' value='8'/>
<enum name='NSEventPhaseNone' value='0'/>
<enum name='NSEventPhaseStationary' value='2'/>
<enum name='NSEventSwipeTrackingClampGestureAmount' value='2'/>
<enum name='NSEventSwipeTrackingLockDirection' value='1'/>
<enum name='NSEventTypeBeginGesture' value='19'/>
<enum name='NSEventTypeEndGesture' value='20'/>
<enum name='NSEventTypeGesture' value='29'/>
<enum name='NSEventTypeMagnify' value='30'/>
<enum name='NSEventTypeRotate' value='18'/>
<enum name='NSEventTypeSwipe' value='31'/>
<enum name='NSExclude10_4ElementsIconCreationOption' value='4'/>
<enum name='NSExcludeQuickDrawElementsIconCreationOption' value='2'/>
<enum name='NSExecuteFunctionKey' value='63298'/>
<enum name='NSExpandedFontMask' value='32'/>
<enum name='NSF10FunctionKey' value='63245'/>
<enum name='NSF11FunctionKey' value='63246'/>
<enum name='NSF12FunctionKey' value='63247'/>
<enum name='NSF13FunctionKey' value='63248'/>
<enum name='NSF14FunctionKey' value='63249'/>
<enum name='NSF15FunctionKey' value='63250'/>
<enum name='NSF16FunctionKey' value='63251'/>
<enum name='NSF17FunctionKey' value='63252'/>
<enum name='NSF18FunctionKey' value='63253'/>
<enum name='NSF19FunctionKey' value='63254'/>
<enum name='NSF1FunctionKey' value='63236'/>
<enum name='NSF20FunctionKey' value='63255'/>
<enum name='NSF21FunctionKey' value='63256'/>
<enum name='NSF22FunctionKey' value='63257'/>
<enum name='NSF23FunctionKey' value='63258'/>
<enum name='NSF24FunctionKey' value='63259'/>
<enum name='NSF25FunctionKey' value='63260'/>
<enum name='NSF26FunctionKey' value='63261'/>
<enum name='NSF27FunctionKey' value='63262'/>
<enum name='NSF28FunctionKey' value='63263'/>
<enum name='NSF29FunctionKey' value='63264'/>
<enum name='NSF2FunctionKey' value='63237'/>
<enum name='NSF30FunctionKey' value='63265'/>
<enum name='NSF31FunctionKey' value='63266'/>
<enum name='NSF32FunctionKey' value='63267'/>
<enum name='NSF33FunctionKey' value='63268'/>
<enum name='NSF34FunctionKey' value='63269'/>
<enum name='NSF35FunctionKey' value='63270'/>
<enum name='NSF3FunctionKey' value='63238'/>
<enum name='NSF4FunctionKey' value='63239'/>
<enum name='NSF5FunctionKey' value='63240'/>
<enum name='NSF6FunctionKey' value='63241'/>
<enum name='NSF7FunctionKey' value='63242'/>
<enum name='NSF8FunctionKey' value='63243'/>
<enum name='NSF9FunctionKey' value='63244'/>
<enum name='NSFPCurrentField' value='134'/>
<enum name='NSFPPreviewButton' value='131'/>
<enum name='NSFPPreviewField' value='128'/>
<enum name='NSFPRevertButton' value='130'/>
<enum name='NSFPSetButton' value='132'/>
<enum name='NSFPSizeField' value='129'/>
<enum name='NSFPSizeTitle' value='133'/>
<enum name='NSFileHandlingPanelCancelButton' value='0'/>
<enum name='NSFileHandlingPanelOKButton' value='1'/>
<enum name='NSFindFunctionKey' value='63301'/>
<enum name='NSFindPanelActionNext' value='2'/>
<enum name='NSFindPanelActionPrevious' value='3'/>
<enum name='NSFindPanelActionReplace' value='5'/>
<enum name='NSFindPanelActionReplaceAll' value='4'/>
<enum name='NSFindPanelActionReplaceAllInSelection' value='8'/>
<enum name='NSFindPanelActionReplaceAndFind' value='6'/>
<enum name='NSFindPanelActionSelectAll' value='9'/>
<enum name='NSFindPanelActionSelectAllInSelection' value='10'/>
<enum name='NSFindPanelActionSetFindString' value='7'/>
<enum name='NSFindPanelActionShowFindPanel' value='1'/>
<enum name='NSFindPanelSubstringMatchTypeContains' value='0'/>
<enum name='NSFindPanelSubstringMatchTypeEndsWith' value='3'/>
<enum name='NSFindPanelSubstringMatchTypeFullWord' value='2'/>
<enum name='NSFindPanelSubstringMatchTypeStartsWith' value='1'/>
<enum name='NSFitPagination' value='1'/>
<enum name='NSFixedPitchFontMask' value='1024'/>
<enum name='NSFlagsChanged' value='12'/>
<enum name='NSFlagsChangedMask' value='4096'/>
<enum name='NSFloatType' value='3'/>
<enum name='NSFloatingPointSamplesBitmapFormat' value='4'/>
<enum name='NSFloatingWindowLevel' value='3'/>
<enum name='NSFocusRingAbove' value='2'/>
<enum name='NSFocusRingBelow' value='1'/>
<enum name='NSFocusRingOnly' value='0'/>
<enum name='NSFocusRingTypeDefault' value='0'/>
<enum name='NSFocusRingTypeExterior' value='2'/>
<enum name='NSFocusRingTypeNone' value='1'/>
<enum name='NSFontAntialiasedIntegerAdvancementsRenderingMode' value='3'/>
<enum name='NSFontAntialiasedRenderingMode' value='1'/>
<enum name='NSFontBoldTrait' value='2'/>
<enum name='NSFontClarendonSerifsClass' value='1073741824'/>
<enum name='NSFontCollectionApplicationOnlyMask' value='1'/>
<enum name='NSFontCollectionVisibilityComputer' value='4'/>
<enum name='NSFontCollectionVisibilityProcess' value='1'/>
<enum name='NSFontCollectionVisibilityUser' value='2'/>
<enum name='NSFontCondensedTrait' value='64'/>
<enum name='NSFontDefaultRenderingMode' value='0'/>
<enum name='NSFontExpandedTrait' value='32'/>
<enum name='NSFontFamilyClassMask' value='4026531840'/>
<enum name='NSFontFreeformSerifsClass' value='1879048192'/>
<enum name='NSFontIntegerAdvancementsRenderingMode' value='2'/>
<enum name='NSFontItalicTrait' value='1'/>
<enum name='NSFontModernSerifsClass' value='805306368'/>
<enum name='NSFontMonoSpaceTrait' value='1024'/>
<enum name='NSFontOldStyleSerifsClass' value='268435456'/>
<enum name='NSFontOrnamentalsClass' value='-1879048192'/>
<enum name='NSFontPanelAllEffectsModeMask' value='1048320'/>
<enum name='NSFontPanelAllModesMask' value='4294967295'/>
<enum name='NSFontPanelCollectionModeMask' value='4'/>
<enum name='NSFontPanelDocumentColorEffectModeMask' value='2048'/>
<enum name='NSFontPanelFaceModeMask' value='1'/>
<enum name='NSFontPanelShadowEffectModeMask' value='4096'/>
<enum name='NSFontPanelSizeModeMask' value='2'/>
<enum name='NSFontPanelStandardModesMask' value='65535'/>
<enum name='NSFontPanelStrikethroughEffectModeMask' value='512'/>
<enum name='NSFontPanelTextColorEffectModeMask' value='1024'/>
<enum name='NSFontPanelUnderlineEffectModeMask' value='256'/>
<enum name='NSFontSansSerifClass' value='-2147483648'/>
<enum name='NSFontScriptsClass' value='-1610612736'/>
<enum name='NSFontSlabSerifsClass' value='1342177280'/>
<enum name='NSFontSymbolicClass' value='-1073741824'/>
<enum name='NSFontTransitionalSerifsClass' value='536870912'/>
<enum name='NSFontUIOptimizedTrait' value='4096'/>
<enum name='NSFontUnknownClass' value='0'/>
<enum name='NSFontVerticalTrait' value='2048'/>
<enum name='NSFormFeedCharacter' value='12'/>
<enum name='NSFullScreenWindowMask' value='16384'/>
<enum name='NSFunctionKeyMask' value='8388608'/>
<enum name='NSGIFFileType' value='2'/>
<enum name='NSGlyphAttributeBidiLevel' value='2'/>
<enum name='NSGlyphAttributeElastic' value='1'/>
<enum name='NSGlyphAttributeInscribe' value='5'/>
<enum name='NSGlyphAttributeSoft' value='0'/>
<enum name='NSGlyphInscribeAbove' value='2'/>
<enum name='NSGlyphInscribeBase' value='0'/>
<enum name='NSGlyphInscribeBelow' value='1'/>
<enum name='NSGlyphInscribeOverBelow' value='4'/>
<enum name='NSGlyphInscribeOverstrike' value='3'/>
<enum name='NSGradientConcaveStrong' value='2'/>
<enum name='NSGradientConcaveWeak' value='1'/>
<enum name='NSGradientConvexStrong' value='4'/>
<enum name='NSGradientConvexWeak' value='3'/>
<enum name='NSGradientDrawsAfterEndingLocation' value='2'/>
<enum name='NSGradientDrawsBeforeStartingLocation' value='1'/>
<enum name='NSGradientNone' value='0'/>
<enum name='NSGraphiteControlTint' value='6'/>
<enum name='NSGrayColorSpaceModel' value='0'/>
<enum name='NSGrayModeColorPanel' value='0'/>
<enum name='NSGrooveBorder' value='3'/>
<enum name='NSHSBModeColorPanel' value='3'/>
<enum name='NSHUDWindowMask' value='8192'/>
<enum name='NSHeavierFontAction' value='5'/>
<enum name='NSHelpButtonBezelStyle' value='9'/>
<enum name='NSHelpFunctionKey' value='63302'/>
<enum name='NSHelpKeyMask' value='4194304'/>
<enum name='NSHighlightModeMatrix' value='1'/>
<enum name='NSHomeFunctionKey' value='63273'/>
<enum name='NSHorizontalRuler' value='0'/>
<enum name='NSHourMinuteDatePickerElementFlag' value='12'/>
<enum name='NSHourMinuteSecondDatePickerElementFlag' value='14'/>
<enum name='NSIdentityMappingCharacterCollection' value='0'/>
<enum name='NSIllegalTextMovement' value='0'/>
<enum name='NSImageAbove' value='5'/>
<enum name='NSImageAlignBottom' value='5'/>
<enum name='NSImageAlignBottomLeft' value='6'/>
<enum name='NSImageAlignBottomRight' value='7'/>
<enum name='NSImageAlignCenter' value='0'/>
<enum name='NSImageAlignLeft' value='4'/>
<enum name='NSImageAlignRight' value='8'/>
<enum name='NSImageAlignTop' value='1'/>
<enum name='NSImageAlignTopLeft' value='2'/>
<enum name='NSImageAlignTopRight' value='3'/>
<enum name='NSImageBelow' value='4'/>
<enum name='NSImageCacheAlways' value='1'/>
<enum name='NSImageCacheBySize' value='2'/>
<enum name='NSImageCacheDefault' value='0'/>
<enum name='NSImageCacheNever' value='3'/>
<enum name='NSImageCellType' value='2'/>
<enum name='NSImageFrameButton' value='4'/>
<enum name='NSImageFrameGrayBezel' value='2'/>
<enum name='NSImageFrameGroove' value='3'/>
<enum name='NSImageFrameNone' value='0'/>
<enum name='NSImageFramePhoto' value='1'/>
<enum name='NSImageInterpolationDefault' value='0'/>
<enum name='NSImageInterpolationHigh' value='3'/>
<enum name='NSImageInterpolationLow' value='2'/>
<enum name='NSImageInterpolationMedium' value='4'/>
<enum name='NSImageInterpolationNone' value='1'/>
<enum name='NSImageLeft' value='2'/>
<enum name='NSImageLoadStatusCancelled' value='1'/>
<enum name='NSImageLoadStatusCompleted' value='0'/>
<enum name='NSImageLoadStatusInvalidData' value='2'/>
<enum name='NSImageLoadStatusReadError' value='4'/>
<enum name='NSImageLoadStatusUnexpectedEOF' value='3'/>
<enum name='NSImageOnly' value='1'/>
<enum name='NSImageOverlaps' value='6'/>
<enum name='NSImageRepLoadStatusCompleted' value='-6'/>
<enum name='NSImageRepLoadStatusInvalidData' value='-4'/>
<enum name='NSImageRepLoadStatusReadingHeader' value='-2'/>
<enum name='NSImageRepLoadStatusUnexpectedEOF' value='-5'/>
<enum name='NSImageRepLoadStatusUnknownType' value='-1'/>
<enum name='NSImageRepLoadStatusWillNeedAllData' value='-3'/>
<enum name='NSImageRepMatchesDevice' value='0'/>
<enum name='NSImageRight' value='3'/>
<enum name='NSImageScaleAxesIndependently' value='1'/>
<enum name='NSImageScaleNone' value='2'/>
<enum name='NSImageScaleProportionallyDown' value='0'/>
<enum name='NSImageScaleProportionallyUpOrDown' value='3'/>
<enum name='NSIndexedColorSpaceModel' value='5'/>
<enum name='NSInformationalAlertStyle' value='1'/>
<enum name='NSInformationalRequest' value='10'/>
<enum name='NSInlineBezelStyle' value='15'/>
<enum name='NSInsertCharFunctionKey' value='63293'/>
<enum name='NSInsertFunctionKey' value='63271'/>
<enum name='NSInsertLineFunctionKey' value='63291'/>
<enum name='NSIntType' value='1'/>
<enum name='NSItalicFontMask' value='1'/>
<enum name='NSJPEG2000FileType' value='5'/>
<enum name='NSJPEGFileType' value='3'/>
<enum name='NSJustifiedTextAlignment' value='3'/>
<enum name='NSKeyDown' value='10'/>
<enum name='NSKeyDownMask' value='1024'/>
<enum name='NSKeyUp' value='11'/>
<enum name='NSKeyUpMask' value='2048'/>
<enum name='NSLABColorSpaceModel' value='3'/>
<enum name='NSLandscapeOrientation' value='1'/>
<enum name='NSLayoutAttributeBaseline' value='11'/>
<enum name='NSLayoutAttributeBottom' value='4'/>
<enum name='NSLayoutAttributeCenterX' value='9'/>
<enum name='NSLayoutAttributeCenterY' value='10'/>
<enum name='NSLayoutAttributeHeight' value='8'/>
<enum name='NSLayoutAttributeLeading' value='5'/>
<enum name='NSLayoutAttributeLeft' value='1'/>
<enum name='NSLayoutAttributeNotAnAttribute' value='0'/>
<enum name='NSLayoutAttributeRight' value='2'/>
<enum name='NSLayoutAttributeTop' value='3'/>
<enum name='NSLayoutAttributeTrailing' value='6'/>
<enum name='NSLayoutAttributeWidth' value='7'/>
<enum name='NSLayoutConstraintOrientationHorizontal' value='0'/>
<enum name='NSLayoutConstraintOrientationVertical' value='1'/>
<enum name='NSLayoutFormatAlignAllBaseline' value='2048'/>
<enum name='NSLayoutFormatAlignAllBottom' value='16'/>
<enum name='NSLayoutFormatAlignAllCenterX' value='512'/>
<enum name='NSLayoutFormatAlignAllCenterY' value='1024'/>
<enum name='NSLayoutFormatAlignAllLeading' value='32'/>
<enum name='NSLayoutFormatAlignAllLeft' value='2'/>
<enum name='NSLayoutFormatAlignAllRight' value='4'/>
<enum name='NSLayoutFormatAlignAllTop' value='8'/>
<enum name='NSLayoutFormatAlignAllTrailing' value='64'/>
<enum name='NSLayoutFormatAlignmentMask' value='65535'/>
<enum name='NSLayoutFormatDirectionLeadingToTrailing' value='0'/>
<enum name='NSLayoutFormatDirectionLeftToRight' value='65536'/>
<enum name='NSLayoutFormatDirectionMask' value='196608'/>
<enum name='NSLayoutFormatDirectionRightToLeft' value='131072'/>
<enum name='NSLayoutPriorityDefaultHigh' value='750'/>
<enum name='NSLayoutPriorityDefaultLow' value='250'/>
<enum name='NSLayoutPriorityDragThatCanResizeWindow' value='510'/>
<enum name='NSLayoutPriorityDragThatCannotResizeWindow' value='490'/>
<enum name='NSLayoutPriorityFittingSizeCompression' value='50'/>
<enum name='NSLayoutPriorityRequired' value='1000'/>
<enum name='NSLayoutPriorityWindowSizeStayPut' value='500'/>
<enum name='NSLayoutRelationEqual' value='0'/>
<enum name='NSLayoutRelationGreaterThanOrEqual' value='1'/>
<enum name='NSLayoutRelationLessThanOrEqual' value='-1'/>
<enum name='NSLeftArrowFunctionKey' value='63234'/>
<enum name='NSLeftMouseDown' value='1'/>
<enum name='NSLeftMouseDownMask' value='2'/>
<enum name='NSLeftMouseDragged' value='6'/>
<enum name='NSLeftMouseDraggedMask' value='64'/>
<enum name='NSLeftMouseUp' value='2'/>
<enum name='NSLeftMouseUpMask' value='4'/>
<enum name='NSLeftTabStopType' value='0'/>
<enum name='NSLeftTabsBezelBorder' value='1'/>
<enum name='NSLeftTextAlignment' value='0'/>
<enum name='NSLeftTextMovement' value='19'/>
<enum name='NSLighterFontAction' value='6'/>
<enum name='NSLineBorder' value='1'/>
<enum name='NSLineBreakByCharWrapping' value='1'/>
<enum name='NSLineBreakByClipping' value='2'/>
<enum name='NSLineBreakByTruncatingHead' value='3'/>
<enum name='NSLineBreakByTruncatingMiddle' value='5'/>
<enum name='NSLineBreakByTruncatingTail' value='4'/>
<enum name='NSLineBreakByWordWrapping' value='0'/>
<enum name='NSLineDoesntMove' value='0'/>
<enum name='NSLineMovesDown' value='3'/>
<enum name='NSLineMovesLeft' value='1'/>
<enum name='NSLineMovesRight' value='2'/>
<enum name='NSLineMovesUp' value='4'/>
<enum name='NSLineSeparatorCharacter' value='8232'/>
<enum name='NSLineSweepDown' value='2'/>
<enum name='NSLineSweepLeft' value='0'/>
<enum name='NSLineSweepRight' value='1'/>
<enum name='NSLineSweepUp' value='3'/>
<enum name='NSLineToBezierPathElement' value='1'/>
<enum name='NSLinearSlider' value='0'/>
<enum name='NSListModeMatrix' value='2'/>
<enum name='NSMacintoshInterfaceStyle' value='3'/>
<enum name='NSMainMenuWindowLevel' value='24'/>
<enum name='NSMenuFunctionKey' value='63285'/>
<enum name='NSMenuPropertyItemAccessibilityDescription' value='32'/>
<enum name='NSMenuPropertyItemAttributedTitle' value='2'/>
<enum name='NSMenuPropertyItemEnabled' value='16'/>
<enum name='NSMenuPropertyItemImage' value='8'/>
<enum name='NSMenuPropertyItemKeyEquivalent' value='4'/>
<enum name='NSMenuPropertyItemTitle' value='1'/>
<enum name='NSMiniControlSize' value='2'/>
<enum name='NSMiniaturizableWindowMask' value='4'/>
<enum name='NSMiterLineJoinStyle' value='0'/>
<enum name='NSMixedState' value='-1'/>
<enum name='NSModalPanelWindowLevel' value='8'/>
<enum name='NSModeSwitchFunctionKey' value='63303'/>
<enum name='NSMomentaryChangeButton' value='5'/>
<enum name='NSMomentaryLight' value='7'/>
<enum name='NSMomentaryLightButton' value='0'/>
<enum name='NSMomentaryPushButton' value='0'/>
<enum name='NSMomentaryPushInButton' value='7'/>
<enum name='NSMouseEntered' value='8'/>
<enum name='NSMouseEnteredMask' value='256'/>
<enum name='NSMouseEventSubtype' value='0'/>
<enum name='NSMouseExited' value='9'/>
<enum name='NSMouseExitedMask' value='512'/>
<enum name='NSMouseMoved' value='5'/>
<enum name='NSMouseMovedMask' value='32'/>
<enum name='NSMoveToBezierPathElement' value='0'/>
<enum name='NSNarrowFontMask' value='16'/>
<enum name='NSNativeShortGlyphPacking' value='5'/>
<enum name='NSNaturalTextAlignment' value='4'/>
<enum name='NSNewlineCharacter' value='10'/>
<enum name='NSNextFunctionKey' value='63296'/>
<enum name='NSNextStepInterfaceStyle' value='1'/>
<enum name='NSNoBorder' value='0'/>
<enum name='NSNoCellMask' value='0'/>
<enum name='NSNoFontChangeAction' value='0'/>
<enum name='NSNoImage' value='0'/>
<enum name='NSNoInterfaceStyle' value='0'/>
<enum name='NSNoModeColorPanel' value='-1'/>
<enum name='NSNoScrollerParts' value='0'/>
<enum name='NSNoTabsBezelBorder' value='4'/>
<enum name='NSNoTabsLineBorder' value='5'/>
<enum name='NSNoTabsNoBorder' value='6'/>
<enum name='NSNoTitle' value='0'/>
<enum name='NSNoUnderlineStyle' value='0'/>
<enum name='NSNonStandardCharacterSetFontMask' value='8'/>
<enum name='NSNonZeroWindingRule' value='0'/>
<enum name='NSNonactivatingPanelMask' value='128'/>
<enum name='NSNormalWindowLevel' value='0'/>
<enum name='NSNullCellType' value='0'/>
<enum name='NSNullGlyph' value='0'/>
<enum name='NSNumericPadKeyMask' value='2097152'/>
<enum name='NSOKButton' value='1'/>
<enum name='NSOPENGL_CURRENT_VERSION' value='1'/>
<enum name='NSOffState' value='0'/>
<enum name='NSOnOffButton' value='6'/>
<enum name='NSOnState' value='1'/>
<enum name='NSOnlyScrollerArrows' value='1'/>
<enum name='NSOpenGLCPCurrentRendererID' value='309'/>
<enum name='NSOpenGLCPGPUFragmentProcessing' value='311'/>
<enum name='NSOpenGLCPGPUVertexProcessing' value='310'/>
<enum name='NSOpenGLCPHasDrawable' value='314'/>
<enum name='NSOpenGLCPMPSwapsInFlight' value='315'/>
<enum name='NSOpenGLCPRasterizationEnable' value='221'/>
<enum name='NSOpenGLCPReclaimResources' value='308'/>
<enum name='NSOpenGLCPStateValidation' value='301'/>
<enum name='NSOpenGLCPSurfaceBackingSize' value='304'/>
<enum name='NSOpenGLCPSurfaceOpacity' value='236'/>
<enum name='NSOpenGLCPSurfaceOrder' value='235'/>
<enum name='NSOpenGLCPSurfaceSurfaceVolatile' value='306'/>
<enum name='NSOpenGLCPSwapInterval' value='222'/>
<enum name='NSOpenGLCPSwapRectangle' value='200'/>
<enum name='NSOpenGLCPSwapRectangleEnable' value='201'/>
<enum name='NSOpenGLGOClearFormatCache' value='502'/>
<enum name='NSOpenGLGOFormatCacheSize' value='501'/>
<enum name='NSOpenGLGOResetLibrary' value='504'/>
<enum name='NSOpenGLGORetainRenderers' value='503'/>
<enum name='NSOpenGLGOUseBuildCache' value='506'/>
<enum name='NSOpenGLPFAAccelerated' value='73'/>
<enum name='NSOpenGLPFAAcceleratedCompute' value='97'/>
<enum name='NSOpenGLPFAAccumSize' value='14'/>
<enum name='NSOpenGLPFAAllRenderers' value='1'/>
<enum name='NSOpenGLPFAAllowOfflineRenderers' value='96'/>
<enum name='NSOpenGLPFAAlphaSize' value='11'/>
<enum name='NSOpenGLPFAAuxBuffers' value='7'/>
<enum name='NSOpenGLPFAAuxDepthStencil' value='57'/>
<enum name='NSOpenGLPFABackingStore' value='76'/>
<enum name='NSOpenGLPFAClosestPolicy' value='74'/>
<enum name='NSOpenGLPFAColorFloat' value='58'/>
<enum name='NSOpenGLPFAColorSize' value='8'/>
<enum name='NSOpenGLPFACompliant' value='83'/>
<enum name='NSOpenGLPFADepthSize' value='12'/>
<enum name='NSOpenGLPFADoubleBuffer' value='5'/>
<enum name='NSOpenGLPFAFullScreen' value='54'/>
<enum name='NSOpenGLPFAMPSafe' value='78'/>
<enum name='NSOpenGLPFAMaximumPolicy' value='52'/>
<enum name='NSOpenGLPFAMinimumPolicy' value='51'/>
<enum name='NSOpenGLPFAMultiScreen' value='81'/>
<enum name='NSOpenGLPFAMultisample' value='59'/>
<enum name='NSOpenGLPFANoRecovery' value='72'/>
<enum name='NSOpenGLPFAOffScreen' value='53'/>
<enum name='NSOpenGLPFAOpenGLProfile' value='99'/>
<enum name='NSOpenGLPFAPixelBuffer' value='90'/>
<enum name='NSOpenGLPFARemotePixelBuffer' value='91'/>
<enum name='NSOpenGLPFARendererID' value='70'/>
<enum name='NSOpenGLPFARobust' value='75'/>
<enum name='NSOpenGLPFASampleAlpha' value='61'/>
<enum name='NSOpenGLPFASampleBuffers' value='55'/>
<enum name='NSOpenGLPFASamples' value='56'/>
<enum name='NSOpenGLPFAScreenMask' value='84'/>
<enum name='NSOpenGLPFASingleRenderer' value='71'/>
<enum name='NSOpenGLPFAStencilSize' value='13'/>
<enum name='NSOpenGLPFAStereo' value='6'/>
<enum name='NSOpenGLPFASupersample' value='60'/>
<enum name='NSOpenGLPFATripleBuffer' value='3'/>
<enum name='NSOpenGLPFAVirtualScreenCount' value='128'/>
<enum name='NSOpenGLPFAWindow' value='80'/>
<enum name='NSOpenGLProfileVersion3_2Core' value='12800'/>
<enum name='NSOpenGLProfileVersionLegacy' value='4096'/>
<enum name='NSOtherMouseDown' value='25'/>
<enum name='NSOtherMouseDownMask' value='33554432'/>
<enum name='NSOtherMouseDragged' value='27'/>
<enum name='NSOtherMouseDraggedMask' value='134217728'/>
<enum name='NSOtherMouseUp' value='26'/>
<enum name='NSOtherMouseUpMask' value='67108864'/>
<enum name='NSOtherTextMovement' value='0'/>
<enum name='NSOutlineViewDropOnItemIndex' value='-1'/>
<enum name='NSPNGFileType' value='4'/>
<enum name='NSPageDownFunctionKey' value='63277'/>
<enum name='NSPageUpFunctionKey' value='63276'/>
<enum name='NSParagraphSeparatorCharacter' value='8233'/>
<enum name='NSPasteboardReadingAsData' value='0'/>
<enum name='NSPasteboardReadingAsKeyedArchive' value='4'/>
<enum name='NSPasteboardReadingAsPropertyList' value='2'/>
<enum name='NSPasteboardReadingAsString' value='1'/>
<enum name='NSPasteboardWritingPromised' value='512'/>
<enum name='NSPathStyleNavigationBar' value='1'/>
<enum name='NSPathStylePopUp' value='2'/>
<enum name='NSPathStyleStandard' value='0'/>
<enum name='NSPatternColorSpaceModel' value='6'/>
<enum name='NSPauseFunctionKey' value='63280'/>
<enum name='NSPenLowerSideMask' value='2'/>
<enum name='NSPenPointingDevice' value='1'/>
<enum name='NSPenTipMask' value='1'/>
<enum name='NSPenUpperSideMask' value='4'/>
<enum name='NSPeriodic' value='16'/>
<enum name='NSPeriodicMask' value='65536'/>
<enum name='NSPlainTextTokenStyle' value='1'/>
<enum name='NSPopUpArrowAtBottom' value='2'/>
<enum name='NSPopUpArrowAtCenter' value='1'/>
<enum name='NSPopUpMenuWindowLevel' value='101'/>
<enum name='NSPopUpNoArrow' value='0'/>
<enum name='NSPopoverAppearanceHUD' value='1'/>
<enum name='NSPopoverAppearanceMinimal' value='0'/>
<enum name='NSPopoverBehaviorApplicationDefined' value='0'/>
<enum name='NSPopoverBehaviorSemitransient' value='2'/>
<enum name='NSPopoverBehaviorTransient' value='1'/>
<enum name='NSPortraitOrientation' value='0'/>
<enum name='NSPositiveDoubleType' value='7'/>
<enum name='NSPositiveFloatType' value='4'/>
<enum name='NSPositiveIntType' value='2'/>
<enum name='NSPosterFontMask' value='256'/>
<enum name='NSPowerOffEventType' value='1'/>
<enum name='NSPressedTab' value='2'/>
<enum name='NSPrevFunctionKey' value='63295'/>
<enum name='NSPrintFunctionKey' value='63288'/>
<enum name='NSPrintPanelShowsCopies' value='1'/>
<enum name='NSPrintPanelShowsOrientation' value='8'/>
<enum name='NSPrintPanelShowsPageRange' value='2'/>
<enum name='NSPrintPanelShowsPageSetupAccessory' value='256'/>
<enum name='NSPrintPanelShowsPaperSize' value='4'/>
<enum name='NSPrintPanelShowsPreview' value='131072'/>
<enum name='NSPrintPanelShowsPrintSelection' value='32'/>
<enum name='NSPrintPanelShowsScaling' value='16'/>
<enum name='NSPrintRenderingQualityBest' value='0'/>
<enum name='NSPrintRenderingQualityResponsive' value='1'/>
<enum name='NSPrintScreenFunctionKey' value='63278'/>
<enum name='NSPrinterTableError' value='2'/>
<enum name='NSPrinterTableNotFound' value='1'/>
<enum name='NSPrinterTableOK' value='0'/>
<enum name='NSPrintingCancelled' value='0'/>
<enum name='NSPrintingFailure' value='3'/>
<enum name='NSPrintingReplyLater' value='2'/>
<enum name='NSPrintingSuccess' value='1'/>
<enum name='NSProgressIndicatorBarStyle' value='0'/>
<enum name='NSProgressIndicatorPreferredAquaThickness' value='12'/>
<enum name='NSProgressIndicatorPreferredLargeThickness' value='18'/>
<enum name='NSProgressIndicatorPreferredSmallThickness' value='10'/>
<enum name='NSProgressIndicatorPreferredThickness' value='14'/>
<enum name='NSProgressIndicatorSpinningStyle' value='1'/>
<enum name='NSPushInCell' value='2'/>
<enum name='NSPushInCellMask' value='2'/>
<enum name='NSPushOnPushOffButton' value='1'/>
<enum name='NSRGBColorSpaceModel' value='1'/>
<enum name='NSRGBModeColorPanel' value='1'/>
<enum name='NSRadioButton' value='4'/>
<enum name='NSRadioModeMatrix' value='0'/>
<enum name='NSRangeDateMode' value='1'/>
<enum name='NSRatingLevelIndicatorStyle' value='3'/>
<enum name='NSRecessedBezelStyle' value='13'/>
<enum name='NSRedoFunctionKey' value='63300'/>
<enum name='NSRegularControlSize' value='0'/>
<enum name='NSRegularSquareBezelStyle' value='2'/>
<enum name='NSRelevancyLevelIndicatorStyle' value='0'/>
<enum name='NSRemoteNotificationTypeBadge' value='1'/>
<enum name='NSRemoteNotificationTypeNone' value='0'/>
<enum name='NSRemoveTraitFontAction' value='7'/>
<enum name='NSResetCursorRectsRunLoopOrdering' value='700000'/>
<enum name='NSResetFunctionKey' value='63283'/>
<enum name='NSResizableWindowMask' value='8'/>
<enum name='NSReturnTextMovement' value='16'/>
<enum name='NSRightArrowFunctionKey' value='63235'/>
<enum name='NSRightMouseDown' value='3'/>
<enum name='NSRightMouseDownMask' value='8'/>
<enum name='NSRightMouseDragged' value='7'/>
<enum name='NSRightMouseDraggedMask' value='128'/>
<enum name='NSRightMouseUp' value='4'/>
<enum name='NSRightMouseUpMask' value='16'/>
<enum name='NSRightTabStopType' value='1'/>
<enum name='NSRightTabsBezelBorder' value='3'/>
<enum name='NSRightTextAlignment' value='1'/>
<enum name='NSRightTextMovement' value='20'/>
<enum name='NSRoundLineCapStyle' value='1'/>
<enum name='NSRoundLineJoinStyle' value='1'/>
<enum name='NSRoundRectBezelStyle' value='12'/>
<enum name='NSRoundedBezelStyle' value='1'/>
<enum name='NSRoundedDisclosureBezelStyle' value='14'/>
<enum name='NSRoundedTokenStyle' value='2'/>
<enum name='NSRuleEditorNestingModeCompound' value='2'/>
<enum name='NSRuleEditorNestingModeList' value='1'/>
<enum name='NSRuleEditorNestingModeSimple' value='3'/>
<enum name='NSRuleEditorNestingModeSingle' value='0'/>
<enum name='NSRuleEditorRowTypeCompound' value='1'/>
<enum name='NSRuleEditorRowTypeSimple' value='0'/>
<enum name='NSRunAbortedResponse' value='-1001'/>
<enum name='NSRunContinuesResponse' value='-1002'/>
<enum name='NSRunStoppedResponse' value='-1000'/>
<enum name='NSSaveAsOperation' value='1'/>
<enum name='NSSaveOperation' value='0'/>
<enum name='NSSaveToOperation' value='2'/>
<enum name='NSScaleNone' value='2'/>
<enum name='NSScaleProportionally' value='0'/>
<enum name='NSScaleToFit' value='1'/>
<enum name='NSScreenChangedEventType' value='8'/>
<enum name='NSScreenSaverWindowLevel' value='1000'/>
<enum name='NSScrollElasticityAllowed' value='2'/>
<enum name='NSScrollElasticityAutomatic' value='0'/>
<enum name='NSScrollElasticityNone' value='1'/>
<enum name='NSScrollLockFunctionKey' value='63279'/>
<enum name='NSScrollViewFindBarPositionAboveContent' value='1'/>
<enum name='NSScrollViewFindBarPositionAboveHorizontalRuler' value='0'/>
<enum name='NSScrollViewFindBarPositionBelowContent' value='2'/>
<enum name='NSScrollWheel' value='22'/>
<enum name='NSScrollWheelMask' value='4194304'/>
<enum name='NSScrollerArrowsDefaultSetting' value='0'/>
<enum name='NSScrollerArrowsMaxEnd' value='0'/>
<enum name='NSScrollerArrowsMinEnd' value='1'/>
<enum name='NSScrollerArrowsNone' value='2'/>
<enum name='NSScrollerDecrementArrow' value='1'/>
<enum name='NSScrollerDecrementLine' value='4'/>
<enum name='NSScrollerDecrementPage' value='1'/>
<enum name='NSScrollerIncrementArrow' value='0'/>
<enum name='NSScrollerIncrementLine' value='5'/>
<enum name='NSScrollerIncrementPage' value='3'/>
<enum name='NSScrollerKnob' value='2'/>
<enum name='NSScrollerKnobSlot' value='6'/>
<enum name='NSScrollerKnobStyleDark' value='1'/>
<enum name='NSScrollerKnobStyleDefault' value='0'/>
<enum name='NSScrollerKnobStyleLight' value='2'/>
<enum name='NSScrollerNoPart' value='0'/>
<enum name='NSScrollerStyleLegacy' value='0'/>
<enum name='NSScrollerStyleOverlay' value='1'/>
<enum name='NSSearchFieldClearRecentsMenuItemTag' value='1002'/>
<enum name='NSSearchFieldNoRecentsMenuItemTag' value='1003'/>
<enum name='NSSearchFieldRecentsMenuItemTag' value='1001'/>
<enum name='NSSearchFieldRecentsTitleMenuItemTag' value='1000'/>
<enum name='NSSegmentStyleAutomatic' value='0'/>
<enum name='NSSegmentStyleCapsule' value='5'/>
<enum name='NSSegmentStyleRoundRect' value='3'/>
<enum name='NSSegmentStyleRounded' value='1'/>
<enum name='NSSegmentStyleSmallSquare' value='6'/>
<enum name='NSSegmentStyleTexturedRounded' value='2'/>
<enum name='NSSegmentStyleTexturedSquare' value='4'/>
<enum name='NSSegmentSwitchTrackingMomentary' value='2'/>
<enum name='NSSegmentSwitchTrackingSelectAny' value='1'/>
<enum name='NSSegmentSwitchTrackingSelectOne' value='0'/>
<enum name='NSSelectByCharacter' value='0'/>
<enum name='NSSelectByParagraph' value='2'/>
<enum name='NSSelectByWord' value='1'/>
<enum name='NSSelectFunctionKey' value='63297'/>
<enum name='NSSelectedTab' value='0'/>
<enum name='NSSelectingNext' value='1'/>
<enum name='NSSelectingPrevious' value='2'/>
<enum name='NSSelectionAffinityDownstream' value='1'/>
<enum name='NSSelectionAffinityUpstream' value='0'/>
<enum name='NSServiceApplicationLaunchFailedError' value='66561'/>
<enum name='NSServiceApplicationNotFoundError' value='66560'/>
<enum name='NSServiceErrorMaximum' value='66817'/>
<enum name='NSServiceErrorMinimum' value='66560'/>
<enum name='NSServiceInvalidPasteboardDataError' value='66563'/>
<enum name='NSServiceMalformedServiceDictionaryError' value='66564'/>
<enum name='NSServiceMiscellaneousError' value='66800'/>
<enum name='NSServiceRequestTimedOutError' value='66562'/>
<enum name='NSShadowlessSquareBezelStyle' value='6'/>
<enum name='NSShiftKeyMask' value='131072'/>
<enum name='NSShowControlGlyphs' value='1'/>
<enum name='NSShowInvisibleGlyphs' value='2'/>
<enum name='NSSingleDateMode' value='0'/>
<enum name='NSSingleUnderlineStyle' value='1'/>
<enum name='NSSizeDownFontAction' value='4'/>
<enum name='NSSizeUpFontAction' value='3'/>
<enum name='NSSmallCapsFontMask' value='128'/>
<enum name='NSSmallControlSize' value='1'/>
<enum name='NSSmallIconButtonBezelStyle' value='2'/>
<enum name='NSSmallSquareBezelStyle' value='10'/>
<enum name='NSSpecialPageOrder' value='0'/>
<enum name='NSSpeechImmediateBoundary' value='0'/>
<enum name='NSSpeechSentenceBoundary' value='2'/>
<enum name='NSSpeechWordBoundary' value='1'/>
<enum name='NSSpellingStateGrammarFlag' value='2'/>
<enum name='NSSpellingStateSpellingFlag' value='1'/>
<enum name='NSSplitViewDividerStylePaneSplitter' value='3'/>
<enum name='NSSplitViewDividerStyleThick' value='1'/>
<enum name='NSSplitViewDividerStyleThin' value='2'/>
<enum name='NSSquareLineCapStyle' value='2'/>
<enum name='NSSquareStatusItemLength' value='-2'/>
<enum name='NSStatusWindowLevel' value='25'/>
<enum name='NSStopFunctionKey' value='63284'/>
<enum name='NSStringDrawingDisableScreenFontSubstitution' value='4'/>
<enum name='NSStringDrawingOneShot' value='16'/>
<enum name='NSStringDrawingTruncatesLastVisibleLine' value='32'/>
<enum name='NSStringDrawingUsesDeviceMetrics' value='8'/>
<enum name='NSStringDrawingUsesFontLeading' value='2'/>
<enum name='NSStringDrawingUsesLineFragmentOrigin' value='1'/>
<enum name='NSSubmenuWindowLevel' value='3'/>
<enum name='NSSwitchButton' value='3'/>
<enum name='NSSysReqFunctionKey' value='63281'/>
<enum name='NSSystemDefined' value='14'/>
<enum name='NSSystemDefinedMask' value='16384'/>
<enum name='NSSystemFunctionKey' value='63287'/>
<enum name='NSTIFFCompressionCCITTFAX3' value='3'/>
<enum name='NSTIFFCompressionCCITTFAX4' value='4'/>
<enum name='NSTIFFCompressionJPEG' value='6'/>
<enum name='NSTIFFCompressionLZW' value='5'/>
<enum name='NSTIFFCompressionNEXT' value='32766'/>
<enum name='NSTIFFCompressionNone' value='1'/>
<enum name='NSTIFFCompressionOldJPEG' value='32865'/>
<enum name='NSTIFFCompressionPackBits' value='32773'/>
<enum name='NSTIFFFileType' value='0'/>
<enum name='NSTabCharacter' value='9'/>
<enum name='NSTabTextMovement' value='17'/>
<enum name='NSTableColumnAutoresizingMask' value='1'/>
<enum name='NSTableColumnNoResizing' value='0'/>
<enum name='NSTableColumnUserResizingMask' value='2'/>
<enum name='NSTableViewAnimationEffectFade' value='1'/>
<enum name='NSTableViewAnimationEffectGap' value='2'/>
<enum name='NSTableViewAnimationEffectNone' value='0'/>
<enum name='NSTableViewAnimationSlideDown' value='32'/>
<enum name='NSTableViewAnimationSlideLeft' value='48'/>
<enum name='NSTableViewAnimationSlideRight' value='64'/>
<enum name='NSTableViewAnimationSlideUp' value='16'/>
<enum name='NSTableViewDashedHorizontalGridLineMask' value='8'/>
<enum name='NSTableViewDraggingDestinationFeedbackStyleNone' value='-1'/>
<enum name='NSTableViewDraggingDestinationFeedbackStyleRegular' value='0'/>
<enum name='NSTableViewDraggingDestinationFeedbackStyleSourceList' value='1'/>
<enum name='NSTableViewDropAbove' value='1'/>
<enum name='NSTableViewDropOn' value='0'/>
<enum name='NSTableViewFirstColumnOnlyAutoresizingStyle' value='5'/>
<enum name='NSTableViewGridNone' value='0'/>
<enum name='NSTableViewLastColumnOnlyAutoresizingStyle' value='4'/>
<enum name='NSTableViewNoColumnAutoresizing' value='0'/>
<enum name='NSTableViewReverseSequentialColumnAutoresizingStyle' value='3'/>
<enum name='NSTableViewRowSizeStyleCustom' value='0'/>
<enum name='NSTableViewRowSizeStyleDefault' value='-1'/>
<enum name='NSTableViewRowSizeStyleLarge' value='3'/>
<enum name='NSTableViewRowSizeStyleMedium' value='2'/>
<enum name='NSTableViewRowSizeStyleSmall' value='1'/>
<enum name='NSTableViewSelectionHighlightStyleNone' value='-1'/>
<enum name='NSTableViewSelectionHighlightStyleRegular' value='0'/>
<enum name='NSTableViewSelectionHighlightStyleSourceList' value='1'/>
<enum name='NSTableViewSequentialColumnAutoresizingStyle' value='2'/>
<enum name='NSTableViewSolidHorizontalGridLineMask' value='2'/>
<enum name='NSTableViewSolidVerticalGridLineMask' value='1'/>
<enum name='NSTableViewUniformColumnAutoresizingStyle' value='1'/>
<enum name='NSTabletPoint' value='23'/>
<enum name='NSTabletPointEventSubtype' value='1'/>
<enum name='NSTabletPointMask' value='8388608'/>
<enum name='NSTabletProximity' value='24'/>
<enum name='NSTabletProximityEventSubtype' value='2'/>
<enum name='NSTabletProximityMask' value='16777216'/>
<enum name='NSTerminateCancel' value='0'/>
<enum name='NSTerminateLater' value='2'/>
<enum name='NSTerminateNow' value='1'/>
<enum name='NSTextBlockAbsoluteValueType' value='0'/>
<enum name='NSTextBlockBaselineAlignment' value='3'/>
<enum name='NSTextBlockBorder' value='0'/>
<enum name='NSTextBlockBottomAlignment' value='2'/>
<enum name='NSTextBlockHeight' value='4'/>
<enum name='NSTextBlockMargin' value='1'/>
<enum name='NSTextBlockMaximumHeight' value='6'/>
<enum name='NSTextBlockMaximumWidth' value='2'/>
<enum name='NSTextBlockMiddleAlignment' value='1'/>
<enum name='NSTextBlockMinimumHeight' value='5'/>
<enum name='NSTextBlockMinimumWidth' value='1'/>
<enum name='NSTextBlockPadding' value='-1'/>
<enum name='NSTextBlockPercentageValueType' value='1'/>
<enum name='NSTextBlockTopAlignment' value='0'/>
<enum name='NSTextBlockWidth' value='0'/>
<enum name='NSTextCellType' value='1'/>
<enum name='NSTextFieldAndStepperDatePickerStyle' value='0'/>
<enum name='NSTextFieldDatePickerStyle' value='2'/>
<enum name='NSTextFieldRoundedBezel' value='1'/>
<enum name='NSTextFieldSquareBezel' value='0'/>
<enum name='NSTextFinderActionHideFindInterface' value='11'/>
<enum name='NSTextFinderActionHideReplaceInterface' value='13'/>
<enum name='NSTextFinderActionNextMatch' value='2'/>
<enum name='NSTextFinderActionPreviousMatch' value='3'/>
<enum name='NSTextFinderActionReplace' value='5'/>
<enum name='NSTextFinderActionReplaceAll' value='4'/>
<enum name='NSTextFinderActionReplaceAllInSelection' value='8'/>
<enum name='NSTextFinderActionReplaceAndFind' value='6'/>
<enum name='NSTextFinderActionSelectAll' value='9'/>
<enum name='NSTextFinderActionSelectAllInSelection' value='10'/>
<enum name='NSTextFinderActionSetSearchString' value='7'/>
<enum name='NSTextFinderActionShowFindInterface' value='1'/>
<enum name='NSTextFinderActionShowReplaceInterface' value='12'/>
<enum name='NSTextFinderMatchingTypeContains' value='0'/>
<enum name='NSTextFinderMatchingTypeEndsWith' value='3'/>
<enum name='NSTextFinderMatchingTypeFullWord' value='2'/>
<enum name='NSTextFinderMatchingTypeStartsWith' value='1'/>
<enum name='NSTextLayoutOrientationHorizontal' value='0'/>
<enum name='NSTextLayoutOrientationVertical' value='1'/>
<enum name='NSTextListPrependEnclosingMarker' value='1'/>
<enum name='NSTextReadInapplicableDocumentTypeError' value='65806'/>
<enum name='NSTextReadWriteErrorMaximum' value='66303'/>
<enum name='NSTextReadWriteErrorMinimum' value='65792'/>
<enum name='NSTextStorageEditedAttributes' value='1'/>
<enum name='NSTextStorageEditedCharacters' value='2'/>
<enum name='NSTextTableAutomaticLayoutAlgorithm' value='0'/>
<enum name='NSTextTableFixedLayoutAlgorithm' value='1'/>
<enum name='NSTextWriteInapplicableDocumentTypeError' value='66062'/>
<enum name='NSTextWritingDirectionEmbedding' value='0'/>
<enum name='NSTextWritingDirectionOverride' value='2'/>
<enum name='NSTexturedBackgroundWindowMask' value='256'/>
<enum name='NSTexturedRoundedBezelStyle' value='11'/>
<enum name='NSTexturedSquareBezelStyle' value='8'/>
<enum name='NSThickSquareBezelStyle' value='3'/>
<enum name='NSThickerSquareBezelStyle' value='4'/>
<enum name='NSTickMarkAbove' value='1'/>
<enum name='NSTickMarkBelow' value='0'/>
<enum name='NSTickMarkLeft' value='1'/>
<enum name='NSTickMarkRight' value='0'/>
<enum name='NSTimeZoneDatePickerElementFlag' value='16'/>
<enum name='NSTitledWindowMask' value='1'/>
<enum name='NSToggleButton' value='2'/>
<enum name='NSToolbarDisplayModeDefault' value='0'/>
<enum name='NSToolbarDisplayModeIconAndLabel' value='1'/>
<enum name='NSToolbarDisplayModeIconOnly' value='2'/>
<enum name='NSToolbarDisplayModeLabelOnly' value='3'/>
<enum name='NSToolbarItemVisibilityPriorityHigh' value='1000'/>
<enum name='NSToolbarItemVisibilityPriorityLow' value='-1000'/>
<enum name='NSToolbarItemVisibilityPriorityStandard' value='0'/>
<enum name='NSToolbarItemVisibilityPriorityUser' value='2000'/>
<enum name='NSToolbarSizeModeDefault' value='0'/>
<enum name='NSToolbarSizeModeRegular' value='1'/>
<enum name='NSToolbarSizeModeSmall' value='2'/>
<enum name='NSTopTabsBezelBorder' value='0'/>
<enum name='NSTornOffMenuWindowLevel' value='3'/>
<enum name='NSTouchEventSubtype' value='3'/>
<enum name='NSTouchPhaseAny' value64='18446744073709551615' value='4294967295'/>
<enum name='NSTouchPhaseBegan' value='1'/>
<enum name='NSTouchPhaseCancelled' value='16'/>
<enum name='NSTouchPhaseEnded' value='8'/>
<enum name='NSTouchPhaseMoved' value='2'/>
<enum name='NSTouchPhaseStationary' value='4'/>
<enum name='NSTouchPhaseTouching' value='7'/>
<enum name='NSTrackModeMatrix' value='3'/>
<enum name='NSTrackingActiveAlways' value='128'/>
<enum name='NSTrackingActiveInActiveApp' value='64'/>
<enum name='NSTrackingActiveInKeyWindow' value='32'/>
<enum name='NSTrackingActiveWhenFirstResponder' value='16'/>
<enum name='NSTrackingAssumeInside' value='256'/>
<enum name='NSTrackingCursorUpdate' value='4'/>
<enum name='NSTrackingEnabledDuringMouseDrag' value='1024'/>
<enum name='NSTrackingInVisibleRect' value='512'/>
<enum name='NSTrackingMouseEnteredAndExited' value='1'/>
<enum name='NSTrackingMouseMoved' value='2'/>
<enum name='NSTypesetterBehavior_10_2' value='2'/>
<enum name='NSTypesetterBehavior_10_2_WithCompatibility' value='1'/>
<enum name='NSTypesetterBehavior_10_3' value='3'/>
<enum name='NSTypesetterBehavior_10_4' value='4'/>
<enum name='NSTypesetterContainerBreakAction' value='32'/>
<enum name='NSTypesetterHorizontalTabAction' value='4'/>
<enum name='NSTypesetterLatestBehavior' value='-1'/>
<enum name='NSTypesetterLineBreakAction' value='8'/>
<enum name='NSTypesetterOriginalBehavior' value='0'/>
<enum name='NSTypesetterParagraphBreakAction' value='16'/>
<enum name='NSTypesetterWhitespaceAction' value='2'/>
<enum name='NSTypesetterZeroAdvancementAction' value='1'/>
<enum name='NSUnboldFontMask' value='4'/>
<enum name='NSUnderlinePatternDash' value='512'/>
<enum name='NSUnderlinePatternDashDot' value='768'/>
<enum name='NSUnderlinePatternDashDotDot' value='1024'/>
<enum name='NSUnderlinePatternDot' value='256'/>
<enum name='NSUnderlinePatternSolid' value='0'/>
<enum name='NSUnderlineStyleDouble' value='9'/>
<enum name='NSUnderlineStyleNone' value='0'/>
<enum name='NSUnderlineStyleSingle' value='1'/>
<enum name='NSUnderlineStyleThick' value='2'/>
<enum name='NSUndoFunctionKey' value='63299'/>
<enum name='NSUnifiedTitleAndToolbarWindowMask' value='4096'/>
<enum name='NSUnitalicFontMask' value='16777216'/>
<enum name='NSUnknownColorSpaceModel' value='-1'/>
<enum name='NSUnknownPageOrder' value='2'/>
<enum name='NSUnknownPointingDevice' value='0'/>
<enum name='NSUnscaledWindowMask' value='2048'/>
<enum name='NSUpArrowFunctionKey' value='63232'/>
<enum name='NSUpTextMovement' value='21'/>
<enum name='NSUpdateWindowsRunLoopOrdering' value='500000'/>
<enum name='NSUserFunctionKey' value='63286'/>
<enum name='NSUserInterfaceLayoutDirectionLeftToRight' value='0'/>
<enum name='NSUserInterfaceLayoutDirectionRightToLeft' value='1'/>
<enum name='NSUtilityWindowMask' value='16'/>
<enum name='NSVariableStatusItemLength' value='-1'/>
<enum name='NSVerticalRuler' value='1'/>
<enum name='NSViaPanelFontAction' value='1'/>
<enum name='NSViewHeightSizable' value='16'/>
<enum name='NSViewLayerContentsPlacementBottom' value='8'/>
<enum name='NSViewLayerContentsPlacementBottomLeft' value='9'/>
<enum name='NSViewLayerContentsPlacementBottomRight' value='7'/>
<enum name='NSViewLayerContentsPlacementCenter' value='3'/>
<enum name='NSViewLayerContentsPlacementLeft' value='10'/>
<enum name='NSViewLayerContentsPlacementRight' value='6'/>
<enum name='NSViewLayerContentsPlacementScaleAxesIndependently' value='0'/>
<enum name='NSViewLayerContentsPlacementScaleProportionallyToFill' value='2'/>
<enum name='NSViewLayerContentsPlacementScaleProportionallyToFit' value='1'/>
<enum name='NSViewLayerContentsPlacementTop' value='4'/>
<enum name='NSViewLayerContentsPlacementTopLeft' value='11'/>
<enum name='NSViewLayerContentsPlacementTopRight' value='5'/>
<enum name='NSViewLayerContentsRedrawBeforeViewResize' value='3'/>
<enum name='NSViewLayerContentsRedrawDuringViewResize' value='2'/>
<enum name='NSViewLayerContentsRedrawNever' value='0'/>
<enum name='NSViewLayerContentsRedrawOnSetNeedsDisplay' value='1'/>
<enum name='NSViewMaxXMargin' value='4'/>
<enum name='NSViewMaxYMargin' value='32'/>
<enum name='NSViewMinXMargin' value='1'/>
<enum name='NSViewMinYMargin' value='8'/>
<enum name='NSViewNotSizable' value='0'/>
<enum name='NSViewWidthSizable' value='2'/>
<enum name='NSWantsBidiLevels' value='4'/>
<enum name='NSWarningAlertStyle' value='0'/>
<enum name='NSWheelModeColorPanel' value='6'/>
<enum name='NSWindowAbove' value='1'/>
<enum name='NSWindowAnimationBehaviorAlertPanel' value='5'/>
<enum name='NSWindowAnimationBehaviorDefault' value='0'/>
<enum name='NSWindowAnimationBehaviorDocumentWindow' value='3'/>
<enum name='NSWindowAnimationBehaviorNone' value='2'/>
<enum name='NSWindowAnimationBehaviorUtilityWindow' value='4'/>
<enum name='NSWindowBackingLocationDefault' value='0'/>
<enum name='NSWindowBackingLocationMainMemory' value='2'/>
<enum name='NSWindowBackingLocationVideoMemory' value='1'/>
<enum name='NSWindowBelow' value='-1'/>
<enum name='NSWindowCloseButton' value='0'/>
<enum name='NSWindowCollectionBehaviorCanJoinAllSpaces' value='1'/>
<enum name='NSWindowCollectionBehaviorDefault' value='0'/>
<enum name='NSWindowCollectionBehaviorFullScreenAuxiliary' value='256'/>
<enum name='NSWindowCollectionBehaviorFullScreenPrimary' value='128'/>
<enum name='NSWindowCollectionBehaviorIgnoresCycle' value='64'/>
<enum name='NSWindowCollectionBehaviorManaged' value='4'/>
<enum name='NSWindowCollectionBehaviorMoveToActiveSpace' value='2'/>
<enum name='NSWindowCollectionBehaviorParticipatesInCycle' value='32'/>
<enum name='NSWindowCollectionBehaviorStationary' value='16'/>
<enum name='NSWindowCollectionBehaviorTransient' value='8'/>
<enum name='NSWindowDepthOnehundredtwentyeightBitRGB' value='544'/>
<enum name='NSWindowDepthSixtyfourBitRGB' value='528'/>
<enum name='NSWindowDepthTwentyfourBitRGB' value='520'/>
<enum name='NSWindowDocumentIconButton' value='4'/>
<enum name='NSWindowDocumentVersionsButton' value='6'/>
<enum name='NSWindowExposedEventType' value='0'/>
<enum name='NSWindowFullScreenButton' value='7'/>
<enum name='NSWindowMiniaturizeButton' value='1'/>
<enum name='NSWindowMovedEventType' value='4'/>
<enum name='NSWindowNumberListAllApplications' value='1'/>
<enum name='NSWindowNumberListAllSpaces' value='16'/>
<enum name='NSWindowOut' value='0'/>
<enum name='NSWindowSharingNone' value='0'/>
<enum name='NSWindowSharingReadOnly' value='1'/>
<enum name='NSWindowSharingReadWrite' value='2'/>
<enum name='NSWindowToolbarButton' value='3'/>
<enum name='NSWindowZoomButton' value='2'/>
<enum name='NSWindows95InterfaceStyle' value='2'/>
<enum name='NSWorkspaceLaunchAllowingClassicStartup' value='131072'/>
<enum name='NSWorkspaceLaunchAndHide' value='1048576'/>
<enum name='NSWorkspaceLaunchAndHideOthers' value='2097152'/>
<enum name='NSWorkspaceLaunchAndPrint' value='2'/>
<enum name='NSWorkspaceLaunchAsync' value='65536'/>
<enum name='NSWorkspaceLaunchDefault' value='196608'/>
<enum name='NSWorkspaceLaunchInhibitingBackgroundOnly' value='128'/>
<enum name='NSWorkspaceLaunchNewInstance' value='524288'/>
<enum name='NSWorkspaceLaunchPreferringClassic' value='262144'/>
<enum name='NSWorkspaceLaunchWithoutActivation' value='512'/>
<enum name='NSWorkspaceLaunchWithoutAddingToRecents' value='256'/>
<enum name='NSWritingDirectionLeftToRight' value='0'/>
<enum name='NSWritingDirectionNatural' value='-1'/>
<enum name='NSWritingDirectionRightToLeft' value='1'/>
<enum name='NSYearMonthDatePickerElementFlag' value='192'/>
<enum name='NSYearMonthDayDatePickerElementFlag' value='224'/>
<function name='NSAccessibilityActionDescription'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSAccessibilityPostNotification'>
<arg type='@'/>
<arg type='@'/>
</function>
<function name='NSAccessibilityRaiseBadArgumentException'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
</function>
<function name='NSAccessibilityRoleDescription'>
<arg type='@'/>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSAccessibilityRoleDescriptionForUIElement'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSAccessibilityUnignoredAncestor'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSAccessibilityUnignoredChildren'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSAccessibilityUnignoredChildrenForOnlyChild'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSAccessibilityUnignoredDescendant'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSApplicationLoad'>
<retval type='B'/>
</function>
<function name='NSApplicationMain'>
<arg type='i'/>
<arg c_array_length_in_arg='0' type='^*' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='NSAvailableWindowDepths'>
<retval type='^i' c_array_delimited_by_null='true'/>
</function>
<function name='NSBeep'/>
<function name='NSBeginAlertSheet' variadic='true'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg sel_of_type='v20@0:4@8i12^v16' type=':' sel_of_type64='v36@0:8@16i24^v28'/>
<arg sel_of_type='v20@0:4@8i12^v16' type=':' sel_of_type64='v36@0:8@16i24^v28'/>
<arg type='^v' type_modifier='n'/>
<arg printf_format='true' type='@' type_modifier='n'/>
</function>
<function name='NSBeginCriticalAlertSheet' variadic='true'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg sel_of_type='v20@0:4@8i12^v16' type=':' sel_of_type64='v36@0:8@16i24^v28'/>
<arg sel_of_type='v20@0:4@8i12^v16' type=':' sel_of_type64='v36@0:8@16i24^v28'/>
<arg type='^v' type_modifier='n'/>
<arg printf_format='true' type='@' type_modifier='n'/>
</function>
<function name='NSBeginInformationalAlertSheet' variadic='true'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg sel_of_type='v20@0:4@8i12^v16' type=':' sel_of_type64='v36@0:8@16i24^v28'/>
<arg sel_of_type='v20@0:4@8i12^v16' type=':' sel_of_type64='v36@0:8@16i24^v28'/>
<arg type='^v' type_modifier='n'/>
<arg printf_format='true' type='@' type_modifier='n'/>
</function>
<function name='NSBestDepth'>
<arg type='@'/>
<arg type64='q' type='i'/>
<arg type64='q' type='i'/>
<arg type='B'/>
<arg type='^B' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='NSBitsPerPixelFromDepth'>
<arg type='i'/>
<retval type64='q' type='i'/>
</function>
<function name='NSBitsPerSampleFromDepth'>
<arg type='i'/>
<retval type64='q' type='i'/>
</function>
<function name='NSColorSpaceFromDepth'>
<arg type='i'/>
<retval type='@'/>
</function>
<function name='NSConvertGlyphsToPackedGlyphs'>
<arg c_array_length_in_arg='1' type='^I' type_modifier='n'/>
<arg type64='q' type='i'/>
<arg type64='Q' type='I'/>
<arg c_array_length_in_arg='1' c_array_of_variable_length='true' type='*' type_modifier='o'/>
<retval type64='q' type='i'/>
</function>
<function name='NSCopyBits'>
<arg type64='q' type='i'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg type64='{CGPoint=dd}' type='{_NSPoint=ff}'/>
</function>
<function name='NSCountWindows'>
<arg null_accepted='false' type64='^q' type='^i' type_modifier='o'/>
</function>
<function name='NSCountWindowsForContext'>
<arg type64='q' type='i'/>
<arg null_accepted='false' type64='^q' type='^i' type_modifier='o'/>
</function>
<function name='NSCreateFileContentsPboardType'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSCreateFilenamePboardType'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSDisableScreenUpdates'/>
<function name='NSDottedFrameRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
</function>
<function name='NSDrawBitmap'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg type64='q' type='i'/>
<arg type64='q' type='i'/>
<arg type64='q' type='i'/>
<arg type64='q' type='i'/>
<arg type64='q' type='i'/>
<arg type64='q' type='i'/>
<arg type='B'/>
<arg type='B'/>
<arg type='@'/>
<arg type='^*'/>
</function>
<function name='NSDrawButton'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
</function>
<function name='NSDrawColorTiledRects'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg c_array_length_in_arg='4' type64='^Q' type='^i' type_modifier='n'/>
<arg c_array_length_in_arg='4' type='^@' type_modifier='n'/>
<arg type64='q' type='i'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
</function>
<function name='NSDrawDarkBezel'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
</function>
<function name='NSDrawGrayBezel'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
</function>
<function name='NSDrawGroove'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
</function>
<function name='NSDrawLightBezel'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
</function>
<function name='NSDrawNinePartImage'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type64='Q' type='I'/>
<arg type64='d' type='f'/>
<arg type='B'/>
</function>
<function name='NSDrawThreePartImage'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='B'/>
<arg type64='Q' type='I'/>
<arg type64='d' type='f'/>
<arg type='B'/>
</function>
<function name='NSDrawTiledRects'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg c_array_length_in_arg='4' type64='^Q' type='^i' type_modifier='n'/>
<arg c_array_length_in_arg='4' type64='^d' type='^f' type_modifier='n'/>
<arg type64='q' type='i'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
</function>
<function name='NSDrawWhiteBezel'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
</function>
<function name='NSDrawWindowBackground'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
</function>
<function name='NSEdgeInsetsMake' inline='true'>
<arg type64='d' type='f'/>
<arg type64='d' type='f'/>
<arg type64='d' type='f'/>
<arg type64='d' type='f'/>
<retval type64='{_NSEdgeInsets=dddd}' type='{_NSEdgeInsets=ffff}'/>
</function>
<function name='NSEnableScreenUpdates'/>
<function name='NSEraseRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
</function>
<function name='NSEventMaskFromType' inline='true'>
<arg type64='Q' type='I'/>
<retval type64='Q' type='I'/>
</function>
<function name='NSFrameRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
</function>
<function name='NSFrameRectWithWidth'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg type64='d' type='f'/>
</function>
<function name='NSFrameRectWithWidthUsingOperation'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg type64='d' type='f'/>
<arg type64='Q' type='I'/>
</function>
<function name='NSGetAlertPanel' variadic='true'>
<arg type='@'/>
<arg printf_format='true' type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSGetCriticalAlertPanel' variadic='true'>
<arg type='@'/>
<arg printf_format='true' type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSGetFileType'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSGetFileTypes'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSGetInformationalAlertPanel' variadic='true'>
<arg type='@'/>
<arg printf_format='true' type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSGetWindowServerMemory'>
<arg type64='q' type='i'/>
<arg type64='^q' type='^i' type_modifier='o'/>
<arg type64='^q' type='^i' type_modifier='o'/>
<arg type='^@' type_modifier='o'/>
<retval type64='q' type='i'/>
</function>
<function name='NSHighlightRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
</function>
<function name='NSInterfaceStyleForKey'>
<arg type='@'/>
<arg type='@'/>
<retval type64='Q' type='I'/>
</function>
<function name='NSIsControllerMarker'>
<arg type='@'/>
<retval type='B'/>
</function>
<function name='NSNumberOfColorComponents'>
<arg type='@'/>
<retval type64='q' type='i'/>
</function>
<function name='NSOpenGLGetOption'>
<arg type='i'/>
<arg type='^i' type_modifier='o'/>
</function>
<function name='NSOpenGLGetVersion'>
<arg type='^i' type_modifier='o'/>
<arg type='^i' type_modifier='o'/>
</function>
<function name='NSOpenGLSetOption'>
<arg type='i'/>
<arg type='i'/>
</function>
<function name='NSPerformService'>
<arg type='@'/>
<arg type='@'/>
<retval type='B'/>
</function>
<function name='NSPlanarFromDepth'>
<arg type='i'/>
<retval type='B'/>
</function>
<function name='NSReadPixel'>
<arg type64='{CGPoint=dd}' type='{_NSPoint=ff}'/>
<retval type='@'/>
</function>
<function name='NSRectClip'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
</function>
<function name='NSRectClipList'>
<arg c_array_length_in_arg='1' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type_modifier='n'/>
<arg type64='q' type='i'/>
</function>
<function name='NSRectFill'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
</function>
<function name='NSRectFillList'>
<arg c_array_length_in_arg='1' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type_modifier='n'/>
<arg type64='q' type='i'/>
</function>
<function name='NSRectFillListUsingOperation'>
<arg c_array_length_in_arg='1' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type_modifier='n'/>
<arg type64='q' type='i'/>
<arg type64='Q' type='I'/>
</function>
<function name='NSRectFillListWithColors'>
<arg c_array_length_in_arg='2' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type_modifier='n'/>
<arg c_array_length_in_arg='2' type='^@' type_modifier='n'/>
<arg type64='q' type='i'/>
</function>
<function name='NSRectFillListWithColorsUsingOperation'>
<arg c_array_length_in_arg='2' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type_modifier='n'/>
<arg c_array_length_in_arg='2' type='^@' type_modifier='n'/>
<arg type64='q' type='i'/>
<arg type64='Q' type='I'/>
</function>
<function name='NSRectFillListWithGrays'>
<arg c_array_length_in_arg='2' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type_modifier='n'/>
<arg c_array_length_in_arg='2' type64='^d' type='^f' type_modifier='n'/>
<arg type64='q' type='i'/>
</function>
<function name='NSRectFillUsingOperation'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg type64='Q' type='I'/>
</function>
<function name='NSRegisterServicesProvider'>
<arg type='@'/>
<arg type='@'/>
</function>
<function name='NSReleaseAlertPanel'>
<arg type='@'/>
</function>
<function name='NSRunAlertPanel' variadic='true'>
<arg type='@'/>
<arg printf_format='true' type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type64='q' type='i'/>
</function>
<function name='NSRunAlertPanelRelativeToWindow' variadic='true'>
<arg type='@'/>
<arg printf_format='true' type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type64='q' type='i'/>
</function>
<function name='NSRunCriticalAlertPanel' variadic='true'>
<arg type='@'/>
<arg printf_format='true' type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type64='q' type='i'/>
</function>
<function name='NSRunCriticalAlertPanelRelativeToWindow' variadic='true'>
<arg type='@'/>
<arg printf_format='true' type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type64='q' type='i'/>
</function>
<function name='NSRunInformationalAlertPanel' variadic='true'>
<arg type='@'/>
<arg printf_format='true' type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type64='q' type='i'/>
</function>
<function name='NSRunInformationalAlertPanelRelativeToWindow' variadic='true'>
<arg type='@'/>
<arg printf_format='true' type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type64='q' type='i'/>
</function>
<function name='NSSetFocusRingStyle'>
<arg type64='Q' type='I'/>
</function>
<function name='NSSetShowsServicesMenuItem'>
<arg type='@'/>
<arg type='B'/>
<retval type64='q' type='i'/>
</function>
<function name='NSShowAnimationEffect'>
<arg type64='Q' type='I'/>
<arg type64='{CGPoint=dd}' type='{_NSPoint=ff}'/>
<arg type64='{CGSize=dd}' type='{_NSSize=ff}'/>
<arg type='@'/>
<arg sel_of_type='v12@0:4^v8' type=':' sel_of_type64='v24@0:8^v16'/>
<arg type='^v' type_modifier='n'/>
</function>
<function name='NSShowsServicesMenuItem'>
<arg type='@'/>
<retval type='B'/>
</function>
<function name='NSUnregisterServicesProvider'>
<arg type='@'/>
</function>
<function name='NSUpdateDynamicServices'/>
<function name='NSWindowList'>
<arg type64='q' type='i'/>
<arg c_array_length_in_arg='0' type64='^q' type='^i' type_modifier='o'/>
</function>
<function name='NSWindowListForContext'>
<arg type64='q' type='i'/>
<arg type64='q' type='i'/>
<arg c_array_length_in_arg='1' type64='^q' type='^i' type_modifier='o'/>
</function>
<class name='NSATSTypesetter'>
<method selector='bidiProcessingEnabled'>
<retval type='B'/>
</method>
<method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:'>
<arg type='^B' index='4'/>
</method>
<method selector='setBidiProcessingEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setDrawsOutsideLineFragment:forGlyphRange:'>
<arg type='B' index='0'/>
</method>
<method selector='setHardInvalidation:forGlyphRange:'>
<arg type='B' index='0'/>
</method>
<method selector='setNotShownAttribute:forGlyphRange:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesFontLeading:'>
<arg type='B' index='0'/>
</method>
<method selector='shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
<retval type='B'/>
</method>
<method selector='shouldBreakLineByWordBeforeCharacterAtIndex:'>
<retval type='B'/>
</method>
<method selector='usesFontLeading'>
<retval type='B'/>
</method>
</class>
<class name='NSActionCell'>
<method selector='setAction:'>
<arg sel_of_type='v12@0:4@8' index='0' sel_of_type64='v24@0:8@16'/>
</method>
</class>
<class name='NSAlert'>
<method variadic='true' selector='alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:' class_method='true'>
<arg printf_format='true' index='4'/>
</method>
<method selector='beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8i12^v16' index='2' sel_of_type64='v40@0:8@16q24^v32'/>
<arg index='3' type_modifier='n'/>
</method>
<method selector='setShowsHelp:'>
<arg type='B' index='0'/>
</method>
<method selector='setShowsSuppressionButton:'>
<arg type='B' index='0'/>
</method>
<method selector='showsHelp'>
<retval type='B'/>
</method>
<method selector='showsSuppressionButton'>
<retval type='B'/>
</method>
</class>
<class name='NSAnimation'>
<method selector='isAnimating'>
<retval type='B'/>
</method>
</class>
<class name='NSAnimationContext'>
<method selector='runAnimationGroup:completionHandler:' class_method='true'>
<arg function_pointer='true' type='@?' index='0'>
<arg type='@'/>
<retval type='v'/>
</arg>
<arg function_pointer='true' type='@?' index='1'>
<retval type='v'/>
</arg>
</method>
<method selector='setCompletionHandler:'>
<arg function_pointer='true' type='@?' index='0'>
<retval type='v'/>
</arg>
</method>
</class>
<class name='NSApplication'>
<method selector='activateIgnoringOtherApps:'>
<arg type='B' index='0'/>
</method>
<method selector='addWindowsItem:title:filename:'>
<arg type='B' index='2'/>
</method>
<method selector='beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8i12^v16' index='3' sel_of_type64='v40@0:8@16q24^v32'/>
<arg index='4' type_modifier='n'/>
</method>
<method selector='changeWindowsItem:title:filename:'>
<arg type='B' index='2'/>
</method>
<method selector='isActive'>
<retval type='B'/>
</method>
<method selector='isFullKeyboardAccessEnabled'>
<retval type='B'/>
</method>
<method selector='isHidden'>
<retval type='B'/>
</method>
<method selector='isRunning'>
<retval type='B'/>
</method>
<method selector='makeWindowsPerform:inOrder:'>
<arg type='B' index='1'/>
</method>
<method selector='nextEventMatchingMask:untilDate:inMode:dequeue:'>
<arg type='B' index='3'/>
</method>
<method selector='postEvent:atStart:'>
<arg type='B' index='1'/>
</method>
<method selector='replyToApplicationShouldTerminate:'>
<arg type='B' index='0'/>
</method>
<method selector='restoreWindowWithIdentifier:state:completionHandler:'>
<arg function_pointer='true' type='@?' index='2'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
<retval type='B'/>
</method>
<method selector='searchString:inUserInterfaceItemString:searchRange:foundRange:'>
<retval type='B'/>
</method>
<method selector='sendAction:to:from:'>
<retval type='B'/>
</method>
<method selector='setActivationPolicy:'>
<retval type='B'/>
</method>
<method selector='setWindowsNeedUpdate:'>
<arg type='B' index='0'/>
</method>
<method selector='tryToPerform:with:'>
<retval type='B'/>
</method>
</class>
<class name='NSArrayController'>
<method selector='addSelectedObjects:'>
<retval type='B'/>
</method>
<method selector='addSelectionIndexes:'>
<retval type='B'/>
</method>
<method selector='alwaysUsesMultipleValuesMarker'>
<retval type='B'/>
</method>
<method selector='automaticallyRearrangesObjects'>
<retval type='B'/>
</method>
<method selector='avoidsEmptySelection'>
<retval type='B'/>
</method>
<method selector='canInsert'>
<retval type='B'/>
</method>
<method selector='canSelectNext'>
<retval type='B'/>
</method>
<method selector='canSelectPrevious'>
<retval type='B'/>
</method>
<method selector='clearsFilterPredicateOnInsertion'>
<retval type='B'/>
</method>
<method selector='preservesSelection'>
<retval type='B'/>
</method>
<method selector='removeSelectedObjects:'>
<retval type='B'/>
</method>
<method selector='removeSelectionIndexes:'>
<retval type='B'/>
</method>
<method selector='selectsInsertedObjects'>
<retval type='B'/>
</method>
<method selector='setAlwaysUsesMultipleValuesMarker:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutomaticallyRearrangesObjects:'>
<arg type='B' index='0'/>
</method>
<method selector='setAvoidsEmptySelection:'>
<arg type='B' index='0'/>
</method>
<method selector='setClearsFilterPredicateOnInsertion:'>
<arg type='B' index='0'/>
</method>
<method selector='setPreservesSelection:'>
<arg type='B' index='0'/>
</method>
<method selector='setSelectedObjects:'>
<retval type='B'/>
</method>
<method selector='setSelectionIndex:'>
<retval type='B'/>
</method>
<method selector='setSelectionIndexes:'>
<retval type='B'/>
</method>
<method selector='setSelectsInsertedObjects:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSAttributedString'>
<method selector='containsAttachments'>
<retval type='B'/>
</method>
<method selector='dataFromRange:documentAttributes:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='fileWrapperFromRange:documentAttributes:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='initWithData:options:documentAttributes:error:'>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
</method>
<method selector='initWithDocFormat:documentAttributes:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='initWithHTML:baseURL:documentAttributes:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='initWithHTML:documentAttributes:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='initWithHTML:options:documentAttributes:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='initWithPath:documentAttributes:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='initWithRTF:documentAttributes:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='initWithRTFD:documentAttributes:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='initWithRTFDFileWrapper:documentAttributes:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='initWithURL:documentAttributes:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='initWithURL:options:documentAttributes:error:'>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
</method>
<method selector='nextWordFromIndex:forward:'>
<arg type='B' index='1'/>
</method>
</class>
<class name='NSBezierPath'>
<method selector='appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:'>
<arg type='B' index='4'/>
</method>
<method selector='appendBezierPathWithGlyphs:count:inFont:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='appendBezierPathWithPackedGlyphs:'>
<arg index='0' type_modifier='n' c_array_delimited_by_null='true'/>
</method>
<method selector='appendBezierPathWithPoints:count:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='cachesBezierPath'>
<retval type='B'/>
</method>
<method selector='containsPoint:'>
<retval type='B'/>
</method>
<method selector='drawPackedGlyphs:atPoint:' class_method='true'>
<arg index='0' type_modifier='n' c_array_delimited_by_null='true'/>
</method>
<method selector='elementAtIndex:associatedPoints:'>
<arg c_array_of_variable_length='true' index='1' type_modifier='o'/>
</method>
<method selector='getLineDash:count:phase:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
</method>
<method selector='isEmpty'>
<retval type='B'/>
</method>
<method ignore='true' selector='setAssociatedPoints:atIndex:'/>
<method selector='setCachesBezierPath:'>
<arg type='B' index='0'/>
</method>
<method selector='setLineDash:count:phase:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
</class>
<class name='NSBitmapImageRep'>
<method selector='canBeCompressedUsing:'>
<retval type='B'/>
</method>
<method selector='getCompression:factor:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
</method>
<method selector='getPixel:atX:y:'>
<arg c_array_of_fixed_length='4' index='0' type_modifier='n'/>
</method>
<method selector='getTIFFCompressionTypes:count:' class_method='true'>
<arg c_array_length_in_arg='1' index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
</method>
<method selector='incrementalLoadFromData:complete:'>
<arg type='B' index='1'/>
</method>
<method selector='initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:'>
<arg type='B' index='5'/>
<arg type='B' index='6'/>
</method>
<method selector='initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:'>
<arg type='B' index='5'/>
<arg type='B' index='6'/>
</method>
<method selector='isPlanar'>
<retval type='B'/>
</method>
<method selector='setPixel:atX:y:'>
<arg c_array_of_fixed_length='4' index='0' type_modifier='o'/>
</method>
</class>
<class name='NSBox'>
<method selector='isTransparent'>
<retval type='B'/>
</method>
<method selector='setTransparent:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSBrowser'>
<method selector='acceptsArrowKeys'>
<retval type='B'/>
</method>
<method selector='allowsBranchSelection'>
<retval type='B'/>
</method>
<method selector='allowsEmptySelection'>
<retval type='B'/>
</method>
<method selector='allowsMultipleSelection'>
<retval type='B'/>
</method>
<method selector='allowsTypeSelect'>
<retval type='B'/>
</method>
<method selector='autohidesScroller'>
<retval type='B'/>
</method>
<method selector='canDragRowsWithIndexes:inColumn:withEvent:'>
<retval type='B'/>
</method>
<method selector='draggingImageForRowsWithIndexes:inColumn:withEvent:offset:'>
<arg index='3' type_modifier='o'/>
</method>
<method selector='editItemAtIndexPath:withEvent:select:'>
<arg type='B' index='2'/>
</method>
<method selector='getRow:column:forPoint:'>
<retval type='B'/>
</method>
<method selector='hasHorizontalScroller'>
<retval type='B'/>
</method>
<method selector='isLeafItem:'>
<retval type='B'/>
</method>
<method selector='isLoaded'>
<retval type='B'/>
</method>
<method selector='isTitled'>
<retval type='B'/>
</method>
<method selector='prefersAllColumnUserResizing'>
<retval type='B'/>
</method>
<method selector='reusesColumns'>
<retval type='B'/>
</method>
<method selector='sendAction'>
<retval type='B'/>
</method>
<method selector='sendsActionOnArrowKeys'>
<retval type='B'/>
</method>
<method selector='separatesColumns'>
<retval type='B'/>
</method>
<method selector='setAcceptsArrowKeys:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsBranchSelection:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsTypeSelect:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutohidesScroller:'>
<arg type='B' index='0'/>
</method>
<method selector='setDoubleAction:'>
<arg sel_of_type='v12@0:4@8' index='0' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg type='B' index='1'/>
</method>
<method selector='setHasHorizontalScroller:'>
<arg type='B' index='0'/>
</method>
<method selector='setPath:'>
<retval type='B'/>
</method>
<method selector='setPrefersAllColumnUserResizing:'>
<arg type='B' index='0'/>
</method>
<method selector='setReusesColumns:'>
<arg type='B' index='0'/>
</method>
<method selector='setSendsActionOnArrowKeys:'>
<arg type='B' index='0'/>
</method>
<method selector='setSeparatesColumns:'>
<arg type='B' index='0'/>
</method>
<method selector='setTakesTitleFromPreviousColumn:'>
<arg type='B' index='0'/>
</method>
<method selector='setTitled:'>
<arg type='B' index='0'/>
</method>
<method selector='takesTitleFromPreviousColumn'>
<retval type='B'/>
</method>
</class>
<class name='NSBrowserCell'>
<method selector='isLeaf'>
<retval type='B'/>
</method>
<method selector='isLoaded'>
<retval type='B'/>
</method>
<method selector='setLeaf:'>
<arg type='B' index='0'/>
</method>
<method selector='setLoaded:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSBundle'>
<method selector='loadNibFile:externalNameTable:withZone:' class_method='true'>
<arg index='2' type_modifier='n'/>
<retval type='B'/>
</method>
<method selector='loadNibFile:externalNameTable:withZone:'>
<arg index='2' type_modifier='n'/>
<retval type='B'/>
</method>
<method selector='loadNibNamed:owner:' class_method='true'>
<retval type='B'/>
</method>
</class>
<class name='NSButton'>
<method selector='allowsMixedState'>
<retval type='B'/>
</method>
<method selector='getPeriodicDelay:interval:'>
<arg null_accepted='false' index='0' type_modifier='o'/>
<arg null_accepted='false' index='1' type_modifier='o'/>
</method>
<method selector='highlight:'>
<arg type='B' index='0'/>
</method>
<method selector='isBordered'>
<retval type='B'/>
</method>
<method selector='isTransparent'>
<retval type='B'/>
</method>
<method selector='performKeyEquivalent:'>
<retval type='B'/>
</method>
<method selector='setAllowsMixedState:'>
<arg type='B' index='0'/>
</method>
<method selector='setBordered:'>
<arg type='B' index='0'/>
</method>
<method selector='setShowsBorderOnlyWhileMouseInside:'>
<arg type='B' index='0'/>
</method>
<method selector='setTransparent:'>
<arg type='B' index='0'/>
</method>
<method selector='showsBorderOnlyWhileMouseInside'>
<retval type='B'/>
</method>
</class>
<class name='NSButtonCell'>
<method selector='getPeriodicDelay:interval:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
</method>
<method selector='imageDimsWhenDisabled'>
<retval type='B'/>
</method>
<method selector='isOpaque'>
<retval type='B'/>
</method>
<method selector='isTransparent'>
<retval type='B'/>
</method>
<method selector='setImageDimsWhenDisabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setShowsBorderOnlyWhileMouseInside:'>
<arg type='B' index='0'/>
</method>
<method selector='setTransparent:'>
<arg type='B' index='0'/>
</method>
<method selector='showsBorderOnlyWhileMouseInside'>
<retval type='B'/>
</method>
</class>
<class name='NSCachedImageRep'>
<method selector='initWithSize:depth:separate:alpha:'>
<arg type='B' index='2'/>
<arg type='B' index='3'/>
</method>
</class>
<class name='NSCell'>
<method selector='acceptsFirstResponder'>
<retval type='B'/>
</method>
<method selector='allowsEditingTextAttributes'>
<retval type='B'/>
</method>
<method selector='allowsMixedState'>
<retval type='B'/>
</method>
<method selector='allowsUndo'>
<retval type='B'/>
</method>
<method selector='continueTracking:at:inView:'>
<retval type='B'/>
</method>
<method selector='getPeriodicDelay:interval:'>
<arg null_accepted='false' index='0' type_modifier='o'/>
<arg null_accepted='false' index='1' type_modifier='o'/>
</method>
<method selector='hasValidObjectValue'>
<retval type='B'/>
</method>
<method selector='highlight:withFrame:inView:'>
<arg type='B' index='0'/>
</method>
<method selector='importsGraphics'>
<retval type='B'/>
</method>
<method selector='isBezeled'>
<retval type='B'/>
</method>
<method selector='isBordered'>
<retval type='B'/>
</method>
<method selector='isContinuous'>
<retval type='B'/>
</method>
<method selector='isEditable'>
<retval type='B'/>
</method>
<method selector='isEnabled'>
<retval type='B'/>
</method>
<method selector='isEntryAcceptable:'>
<retval type='B'/>
</method>
<method selector='isHighlighted'>
<retval type='B'/>
</method>
<method selector='isOpaque'>
<retval type='B'/>
</method>
<method selector='isScrollable'>
<retval type='B'/>
</method>
<method selector='isSelectable'>
<retval type='B'/>
</method>
<method selector='prefersTrackingUntilMouseUp' class_method='true'>
<retval type='B'/>
</method>
<method selector='refusesFirstResponder'>
<retval type='B'/>
</method>
<method selector='sendsActionOnEndEditing'>
<retval type='B'/>
</method>
<method selector='setAllowsEditingTextAttributes:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsMixedState:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsUndo:'>
<arg type='B' index='0'/>
</method>
<method selector='setBezeled:'>
<arg type='B' index='0'/>
</method>
<method selector='setBordered:'>
<arg type='B' index='0'/>
</method>
<method selector='setContinuous:'>
<arg type='B' index='0'/>
</method>
<method selector='setEditable:'>
<arg type='B' index='0'/>
</method>
<method selector='setEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setFloatingPointFormat:left:right:'>
<arg type='B' index='0'/>
</method>
<method selector='setHighlighted:'>
<arg type='B' index='0'/>
</method>
<method selector='setImportsGraphics:'>
<arg type='B' index='0'/>
</method>
<method selector='setRefusesFirstResponder:'>
<arg type='B' index='0'/>
</method>
<method selector='setScrollable:'>
<arg type='B' index='0'/>
</method>
<method selector='setSelectable:'>
<arg type='B' index='0'/>
</method>
<method selector='setSendsActionOnEndEditing:'>
<arg type='B' index='0'/>
</method>
<method selector='setShowsFirstResponder:'>
<arg type='B' index='0'/>
</method>
<method selector='setTruncatesLastVisibleLine:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesSingleLineMode:'>
<arg type='B' index='0'/>
</method>
<method selector='setWraps:'>
<arg type='B' index='0'/>
</method>
<method selector='showsFirstResponder'>
<retval type='B'/>
</method>
<method selector='startTrackingAt:inView:'>
<retval type='B'/>
</method>
<method selector='stopTracking:at:inView:mouseIsUp:'>
<arg type='B' index='3'/>
</method>
<method selector='trackMouse:inRect:ofView:untilMouseUp:'>
<arg type='B' index='3'/>
<retval type='B'/>
</method>
<method selector='truncatesLastVisibleLine'>
<retval type='B'/>
</method>
<method selector='usesSingleLineMode'>
<retval type='B'/>
</method>
<method selector='wantsNotificationForMarkedText'>
<retval type='B'/>
</method>
<method selector='wraps'>
<retval type='B'/>
</method>
</class>
<class name='NSClipView'>
<method selector='autoscroll:'>
<retval type='B'/>
</method>
<method selector='copiesOnScroll'>
<retval type='B'/>
</method>
<method selector='drawsBackground'>
<retval type='B'/>
</method>
<method selector='setCopiesOnScroll:'>
<arg type='B' index='0'/>
</method>
<method selector='setDrawsBackground:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSCollectionView'>
<method selector='allowsMultipleSelection'>
<retval type='B'/>
</method>
<method selector='isFirstResponder'>
<retval type='B'/>
</method>
<method selector='isSelectable'>
<retval type='B'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg type='B' index='0'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg type='B' index='1'/>
</method>
<method selector='setSelectable:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSCollectionViewItem'>
<method selector='isSelected'>
<retval type='B'/>
</method>
<method selector='setSelected:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSColor'>
<method selector='colorWithColorSpace:components:count:' class_method='true'>
<arg c_array_length_in_arg='2' index='1' type_modifier='n'/>
</method>
<method suggestion='Use the specific accessors according to the color type.' ignore='true' selector='getComponents:'/>
<method selector='getCyan:magenta:yellow:black:alpha:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
<arg index='4' type_modifier='o'/>
</method>
<method selector='getHue:saturation:brightness:alpha:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
</method>
<method selector='getRed:green:blue:alpha:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
</method>
<method selector='getWhite:alpha:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
</method>
<method selector='ignoresAlpha' class_method='true'>
<retval type='B'/>
</method>
<method selector='setIgnoresAlpha:' class_method='true'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSColorList'>
<method selector='isEditable'>
<retval type='B'/>
</method>
<method selector='writeToFile:'>
<retval type='B'/>
</method>
</class>
<class name='NSColorPanel'>
<method selector='dragColor:withEvent:fromView:' class_method='true'>
<retval type='B'/>
</method>
<method selector='isContinuous'>
<retval type='B'/>
</method>
<method selector='setAction:'>
<arg sel_of_type='v12@0:4@8' index='0' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='setContinuous:'>
<arg type='B' index='0'/>
</method>
<method selector='setShowsAlpha:'>
<arg type='B' index='0'/>
</method>
<method selector='sharedColorPanelExists' class_method='true'>
<retval type='B'/>
</method>
<method selector='showsAlpha'>
<retval type='B'/>
</method>
</class>
<class name='NSColorSpace'>
<method selector='colorSyncProfile'>
<retval type='^{OpaqueCMProfileRef=}'/>
</method>
<method selector='initWithColorSyncProfile:'>
<arg type='^{OpaqueCMProfileRef=}' index='0'/>
</method>
</class>
<class name='NSColorWell'>
<method selector='activate:'>
<arg type='B' index='0'/>
</method>
<method selector='isActive'>
<retval type='B'/>
</method>
<method selector='isBordered'>
<retval type='B'/>
</method>
<method selector='setBordered:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSComboBox'>
<method selector='completes'>
<retval type='B'/>
</method>
<method selector='hasVerticalScroller'>
<retval type='B'/>
</method>
<method selector='isButtonBordered'>
<retval type='B'/>
</method>
<method selector='setButtonBordered:'>
<arg type='B' index='0'/>
</method>
<method selector='setCompletes:'>
<arg type='B' index='0'/>
</method>
<method selector='setHasVerticalScroller:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesDataSource:'>
<arg type='B' index='0'/>
</method>
<method selector='usesDataSource'>
<retval type='B'/>
</method>
</class>
<class name='NSComboBoxCell'>
<method selector='completes'>
<retval type='B'/>
</method>
<method selector='hasVerticalScroller'>
<retval type='B'/>
</method>
<method selector='isButtonBordered'>
<retval type='B'/>
</method>
<method selector='setButtonBordered:'>
<arg type='B' index='0'/>
</method>
<method selector='setCompletes:'>
<arg type='B' index='0'/>
</method>
<method selector='setHasVerticalScroller:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesDataSource:'>
<arg type='B' index='0'/>
</method>
<method selector='usesDataSource'>
<retval type='B'/>
</method>
</class>
<class name='NSControl'>
<method selector='abortEditing'>
<retval type='B'/>
</method>
<method selector='ignoresMultiClick'>
<retval type='B'/>
</method>
<method selector='isContinuous'>
<retval type='B'/>
</method>
<method selector='isEnabled'>
<retval type='B'/>
</method>
<method selector='refusesFirstResponder'>
<retval type='B'/>
</method>
<method selector='sendAction:to:'>
<retval type='B'/>
</method>
<method selector='setContinuous:'>
<arg type='B' index='0'/>
</method>
<method selector='setEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setFloatingPointFormat:left:right:'>
<arg type='B' index='0'/>
</method>
<method selector='setIgnoresMultiClick:'>
<arg type='B' index='0'/>
</method>
<method selector='setRefusesFirstResponder:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSController'>
<method selector='commitEditing'>
<retval type='B'/>
</method>
<method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8B12^v16' index='1' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='2' type_modifier='n'/>
</method>
<method selector='isEditing'>
<retval type='B'/>
</method>
</class>
<class name='NSCursor'>
<method selector='isSetOnMouseEntered'>
<retval type='B'/>
</method>
<method selector='isSetOnMouseExited'>
<retval type='B'/>
</method>
<method selector='setHiddenUntilMouseMoves:' class_method='true'>
<arg type='B' index='0'/>
</method>
<method selector='setOnMouseEntered:'>
<arg type='B' index='0'/>
</method>
<method selector='setOnMouseExited:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSCustomImageRep'>
<method selector='initWithDrawSelector:delegate:'>
<arg sel_of_type='v12@0:4@8' index='0' sel_of_type64='v24@0:8@16'/>
</method>
</class>
<class name='NSDatePicker'>
<method selector='drawsBackground'>
<retval type='B'/>
</method>
<method selector='isBezeled'>
<retval type='B'/>
</method>
<method selector='isBordered'>
<retval type='B'/>
</method>
<method selector='setBezeled:'>
<arg type='B' index='0'/>
</method>
<method selector='setBordered:'>
<arg type='B' index='0'/>
</method>
<method selector='setDrawsBackground:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSDatePickerCell'>
<method selector='drawsBackground'>
<retval type='B'/>
</method>
<method selector='setDrawsBackground:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSDockTile'>
<method selector='setShowsApplicationBadge:'>
<arg type='B' index='0'/>
</method>
<method selector='showsApplicationBadge'>
<retval type='B'/>
</method>
</class>
<class name='NSDocument'>
<method selector='autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8B12^v16' index='1' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='2' type_modifier='n'/>
</method>
<method selector='autosaveWithImplicitCancellability:completionHandler:'>
<arg type='B' index='0'/>
<arg function_pointer='true' type='@?' index='1'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='autosavesInPlace' class_method='true'>
<retval type='B'/>
</method>
<method selector='autosavingIsImplicitlyCancellable'>
<retval type='B'/>
</method>
<method selector='canAsynchronouslyWriteToURL:ofType:forSaveOperation:'>
<retval type='B'/>
</method>
<method selector='canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8B12^v16' index='1' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='2' type_modifier='n'/>
</method>
<method selector='canConcurrentlyReadDocumentsOfType:' class_method='true'>
<retval type='B'/>
</method>
<method selector='checkAutosavingSafetyAndReturnError:'>
<retval type='B'/>
</method>
<method selector='continueActivityUsingBlock:'>
<arg function_pointer='true' type='@?' index='0'>
<retval type='v'/>
</arg>
</method>
<method selector='continueAsynchronousWorkOnMainThreadUsingBlock:'>
<arg function_pointer='true' type='@?' index='0'>
<retval type='v'/>
</arg>
</method>
<method selector='dataOfType:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:'>
<arg index='4' type_modifier='o'/>
</method>
<method selector='fileNameExtensionWasHiddenInLastRunSavePanel'>
<retval type='B'/>
</method>
<method selector='fileWrapperOfType:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='hasUnautosavedChanges'>
<retval type='B'/>
</method>
<method selector='hasUndoManager'>
<retval type='B'/>
</method>
<method selector='initForURL:withContentsOfURL:ofType:error:'>
<arg index='3' type_modifier='o'/>
</method>
<method selector='initWithContentsOfURL:ofType:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='initWithType:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='isDocumentEdited'>
<retval type='B'/>
</method>
<method selector='isEntireFileLoaded'>
<retval type='B'/>
</method>
<method selector='isInViewingMode'>
<retval type='B'/>
</method>
<method selector='isNativeType:' class_method='true'>
<retval type='B'/>
</method>
<method selector='keepBackupFile'>
<retval type='B'/>
</method>
<method selector='loadDataRepresentation:ofType:'>
<retval type='B'/>
</method>
<method selector='loadFileWrapperRepresentation:ofType:'>
<retval type='B'/>
</method>
<method selector='performActivityWithSynchronousWaiting:usingBlock:'>
<arg type='B' index='0'/>
<arg function_pointer='true' type='@?' index='1'>
<arg type='@?'/>
<retval type='v'/>
</arg>
</method>
<method selector='performAsynchronousFileAccessUsingBlock:'>
<arg function_pointer='true' type='@?' index='0'>
<arg type='@?'/>
<retval type='v'/>
</arg>
</method>
<method selector='performSynchronousFileAccessUsingBlock:'>
<arg function_pointer='true' type='@?' index='0'>
<retval type='v'/>
</arg>
</method>
<method selector='preparePageLayout:'>
<retval type='B'/>
</method>
<method selector='prepareSavePanel:'>
<retval type='B'/>
</method>
<method selector='presentError:'>
<retval type='B'/>
</method>
<method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
<arg sel_of_type='v16@0:4B8^v12' index='3' sel_of_type64='v28@0:8B16^v20'/>
<arg index='4' type_modifier='n'/>
</method>
<method selector='preservesVersions' class_method='true'>
<retval type='B'/>
</method>
<method selector='printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:'>
<arg type='B' index='1'/>
<arg sel_of_type='v20@0:4@8B12^v16' index='3' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='4' type_modifier='n'/>
</method>
<method selector='printOperationWithSettings:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='printShowingPrintPanel:'>
<arg type='B' index='0'/>
</method>
<method selector='readFromData:ofType:error:'>
<arg index='2' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='readFromFile:ofType:'>
<retval type='B'/>
</method>
<method selector='readFromFileWrapper:ofType:error:'>
<arg index='2' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='readFromURL:ofType:'>
<retval type='B'/>
</method>
<method selector='readFromURL:ofType:error:'>
<arg index='2' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='restoreDocumentWindowWithIdentifier:state:completionHandler:'>
<arg function_pointer='true' type='@?' index='2'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='revertToContentsOfURL:ofType:error:'>
<arg index='2' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='revertToSavedFromFile:ofType:'>
<retval type='B'/>
</method>
<method selector='revertToSavedFromURL:ofType:'>
<retval type='B'/>
</method>
<method selector='runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8B12^v16' index='2' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='3' type_modifier='n'/>
</method>
<method selector='runModalPrintOperation:delegate:didRunSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8B12^v16' index='2' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='3' type_modifier='n'/>
</method>
<method selector='runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8B12^v16' index='2' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='3' type_modifier='n'/>
</method>
<method selector='saveDocumentWithDelegate:didSaveSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8B12^v16' index='1' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='2' type_modifier='n'/>
</method>
<method selector='saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8B12^v16' index='3' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='4' type_modifier='n'/>
</method>
<method selector='saveToURL:ofType:forSaveOperation:completionHandler:'>
<arg function_pointer='true' type='@?' index='3'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8B12^v16' index='4' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='5' type_modifier='n'/>
</method>
<method selector='saveToURL:ofType:forSaveOperation:error:'>
<arg index='3' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='setHasUndoManager:'>
<arg type='B' index='0'/>
</method>
<method selector='shouldChangePrintInfo:'>
<retval type='B'/>
</method>
<method selector='shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8B12^v16' index='2' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='3' type_modifier='n'/>
</method>
<method selector='shouldRunSavePanelWithAccessoryView'>
<retval type='B'/>
</method>
<method selector='validateUserInterfaceItem:'>
<retval type='B'/>
</method>
<method selector='writeSafelyToURL:ofType:forSaveOperation:error:'>
<arg index='3' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='writeToFile:ofType:'>
<retval type='B'/>
</method>
<method selector='writeToFile:ofType:originalFile:saveOperation:'>
<retval type='B'/>
</method>
<method selector='writeToURL:ofType:'>
<retval type='B'/>
</method>
<method selector='writeToURL:ofType:error:'>
<arg index='2' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='writeToURL:ofType:forSaveOperation:originalContentsURL:error:'>
<arg index='4' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='writeWithBackupToFile:ofType:saveOperation:'>
<retval type='B'/>
</method>
</class>
<class name='NSDocumentController'>
<method selector='closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8B12^v16' index='1' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='2' type_modifier='n'/>
</method>
<method selector='duplicateDocumentWithContentsOfURL:copying:displayName:error:'>
<arg type='B' index='1'/>
</method>
<method selector='hasEditedDocuments'>
<retval type='B'/>
</method>
<method selector='makeDocumentForURL:withContentsOfURL:ofType:error:'>
<arg index='3' type_modifier='o'/>
</method>
<method selector='makeDocumentWithContentsOfURL:ofType:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='makeUntitledDocumentOfType:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='openDocumentWithContentsOfFile:display:'>
<arg type='B' index='1'/>
</method>
<method selector='openDocumentWithContentsOfURL:display:'>
<arg type='B' index='1'/>
</method>
<method selector='openDocumentWithContentsOfURL:display:completionHandler:'>
<arg type='B' index='1'/>
<arg function_pointer='true' type='@?' index='2'>
<arg type='@'/>
<arg type='B'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='openDocumentWithContentsOfURL:display:error:'>
<arg type='B' index='1'/>
<arg index='2' type_modifier='o'/>
</method>
<method selector='openUntitledDocumentAndDisplay:error:'>
<arg type='B' index='0'/>
<arg index='1' type_modifier='o'/>
</method>
<method selector='openUntitledDocumentOfType:display:'>
<arg type='B' index='1'/>
</method>
<method selector='presentError:'>
<retval type='B'/>
</method>
<method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
<arg sel_of_type='v16@0:4B8^v12' index='3' sel_of_type64='v28@0:8B16^v20'/>
<arg index='4' type_modifier='n'/>
</method>
<method selector='reopenDocumentForURL:withContentsOfURL:display:completionHandler:'>
<arg type='B' index='2'/>
<arg function_pointer='true' type='@?' index='3'>
<arg type='@'/>
<arg type='B'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='reopenDocumentForURL:withContentsOfURL:error:'>
<arg index='2' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:'>
<arg type='B' index='1'/>
<arg sel_of_type='v20@0:4@8B12^v16' index='3' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='4' type_modifier='n'/>
</method>
<method selector='setShouldCreateUI:'>
<arg type='B' index='0'/>
</method>
<method selector='shouldCreateUI'>
<retval type='B'/>
</method>
<method selector='typeForContentsOfURL:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='validateUserInterfaceItem:'>
<retval type='B'/>
</method>
</class>
<class name='NSDraggingItem'>
<method selector='setImageComponentsProvider:'>
<arg function_pointer='true' type='@?' index='0'>
<retval type='@'/>
</arg>
</method>
</class>
<class name='NSDraggingSession'>
<method selector='animatesToStartingPositionsOnCancelOrFail'>
<retval type='B'/>
</method>
<method selector='enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:'>
<arg function_pointer='true' type='@?' index='4'>
<arg type='@'/>
<arg type64='q' type='i'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='setAnimatesToStartingPositionsOnCancelOrFail:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSEvent'>
<method selector='addGlobalMonitorForEventsMatchingMask:handler:' class_method='true'>
<arg function_pointer='true' type='@?' index='1'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='addLocalMonitorForEventsMatchingMask:handler:' class_method='true'>
<arg function_pointer='true' type='@?' index='1'>
<arg type='@'/>
<retval type='@'/>
</arg>
</method>
<method selector='enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:' class_method='true'>
<arg index='8' type_modifier='n'/>
</method>
<method selector='eventWithEventRef:' class_method='true'>
<arg type='^{__CGEvent=}' index='0'/>
</method>
<method selector='hasPreciseScrollingDeltas'>
<retval type='B'/>
</method>
<method selector='isARepeat'>
<retval type='B'/>
</method>
<method selector='isDirectionInvertedFromDevice'>
<retval type='B'/>
</method>
<method selector='isEnteringProximity'>
<retval type='B'/>
</method>
<method selector='isMouseCoalescingEnabled' class_method='true'>
<retval type='B'/>
</method>
<method selector='isSwipeTrackingFromScrollEventsEnabled' class_method='true'>
<retval type='B'/>
</method>
<method selector='keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:' class_method='true'>
<arg type='B' index='8'/>
</method>
<method selector='setMouseCoalescingEnabled:' class_method='true'>
<arg type='B' index='0'/>
</method>
<method selector='trackSwipeEventWithOptions:dampenAmountThresholdMin:max:usingHandler:'>
<arg function_pointer='true' type='@?' index='3'>
<arg type64='d' type='f'/>
<arg type64='Q' type='I'/>
<arg type='B'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='NSFont'>
<method selector='fontWithName:matrix:' class_method='true'>
<arg c_array_of_fixed_length='6' index='1' type_modifier='n'/>
</method>
<method selector='getAdvancements:forGlyphs:count:'>
<arg c_array_length_in_arg='2' index='0' type_modifier='o'/>
<arg c_array_length_in_arg='2' index='1' type_modifier='n'/>
</method>
<method suggestion='Call getAdvancements:forGlyphs:count:.' ignore='true' selector='getAdvancements:forPackedGlyphs:length:'/>
<method selector='getBoundingRects:forGlyphs:count:'>
<arg c_array_length_in_arg='2' index='0' type_modifier='o'/>
<arg c_array_length_in_arg='2' index='1' type_modifier='o'/>
</method>
<method selector='glyphIsEncoded:'>
<retval type='B'/>
</method>
<method selector='isBaseFont'>
<retval type='B'/>
</method>
<method selector='isFixedPitch'>
<retval type='B'/>
</method>
<method selector='isVertical'>
<retval type='B'/>
</method>
<method selector='positionOfGlyph:precededByGlyph:isNominal:'>
<arg type='^B' index='2' type_modifier='o'/>
</method>
<method selector='positionOfGlyph:struckOverGlyph:metricsExist:'>
<arg type='^B' index='2' type_modifier='o'/>
</method>
<method selector='positionOfGlyph:struckOverRect:metricsExist:'>
<arg type='^B' index='2' type_modifier='o'/>
</method>
<method selector='positionOfGlyph:withRelation:toBaseGlyph:totalAdvancement:metricsExist:'>
<arg index='3' type_modifier='o'/>
<arg type='^B' index='4' type_modifier='o'/>
</method>
</class>
<class name='NSFontCollection'>
<method selector='hideFontCollectionWithName:visibility:error:' class_method='true'>
<retval type='B'/>
</method>
<method selector='renameFontCollectionWithName:visibility:toName:error:' class_method='true'>
<retval type='B'/>
</method>
<method selector='showFontCollection:withName:visibility:error:' class_method='true'>
<retval type='B'/>
</method>
</class>
<class name='NSFontManager'>
<method selector='addCollection:options:'>
<retval type='B'/>
</method>
<method selector='convertWeight:ofFont:'>
<arg type='B' index='0'/>
</method>
<method selector='fontMenu:'>
<arg type='B' index='0'/>
</method>
<method selector='fontNamed:hasTraits:'>
<retval type='B'/>
</method>
<method selector='fontPanel:'>
<arg type='B' index='0'/>
</method>
<method selector='isEnabled'>
<retval type='B'/>
</method>
<method selector='isMultiple'>
<retval type='B'/>
</method>
<method selector='removeCollection:'>
<retval type='B'/>
</method>
<method selector='sendAction'>
<retval type='B'/>
</method>
<method selector='setAction:'>
<arg sel_of_type='v12@0:4@8' index='0' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='setEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setSelectedAttributes:isMultiple:'>
<arg type='B' index='1'/>
</method>
<method selector='setSelectedFont:isMultiple:'>
<arg type='B' index='1'/>
</method>
</class>
<class name='NSFontPanel'>
<method selector='isEnabled'>
<retval type='B'/>
</method>
<method selector='setEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setPanelFont:isMultiple:'>
<arg type='B' index='1'/>
</method>
<method selector='sharedFontPanelExists' class_method='true'>
<retval type='B'/>
</method>
<method selector='worksWhenModal'>
<retval type='B'/>
</method>
</class>
<class name='NSForm'>
<method selector='setBezeled:'>
<arg type='B' index='0'/>
</method>
<method selector='setBordered:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSFormCell'>
<method selector='isOpaque'>
<retval type='B'/>
</method>
</class>
<class name='NSGlyphGenerator'>
<method selector='generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:'>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
</method>
</class>
<class name='NSGradient'>
<method selector='getColor:location:atIndex:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
</method>
<method suggestion='Use other initializers.' ignore='true' selector='initWithColors:atLocations:colorSpace:'/>
<method variadic='true' sentinel='0' suggestion='Use other initializers.' ignore='true' selector='initWithColorsAndLocations:'/>
</class>
<class name='NSGraphicsContext'>
<method selector='currentContextDrawingToScreen' class_method='true'>
<retval type='B'/>
</method>
<method selector='graphicsContextWithGraphicsPort:flipped:' class_method='true'>
<arg type='^{CGContext=}' index='0'/>
<arg type='B' index='1'/>
</method>
<method selector='graphicsPort'>
<retval type='^{CGContext=}'/>
</method>
<method selector='isDrawingToScreen'>
<retval type='B'/>
</method>
<method selector='isFlipped'>
<retval type='B'/>
</method>
<method selector='setShouldAntialias:'>
<arg type='B' index='0'/>
</method>
<method selector='shouldAntialias'>
<retval type='B'/>
</method>
</class>
<class name='NSHelpManager'>
<method selector='isContextHelpModeActive' class_method='true'>
<retval type='B'/>
</method>
<method selector='registerBooksInBundle:'>
<retval type='B'/>
</method>
<method selector='setContextHelpModeActive:' class_method='true'>
<arg type='B' index='0'/>
</method>
<method selector='showContextHelpForObject:locationHint:'>
<retval type='B'/>
</method>
</class>
<class name='NSImage'>
<method selector='cacheDepthMatchesImageDepth'>
<retval type='B'/>
</method>
<method selector='canInitWithPasteboard:' class_method='true'>
<retval type='B'/>
</method>
<method selector='drawInRect:fromRect:operation:fraction:respectFlipped:hints:'>
<arg type='B' index='4'/>
</method>
<method selector='drawRepresentation:inRect:'>
<retval type='B'/>
</method>
<method selector='hitTestRect:withImageDestinationRect:context:hints:flipped:'>
<arg type='B' index='4'/>
<retval type='B'/>
</method>
<method selector='initWithIconRef:'>
<arg index='0' type_modifier='n'/>
</method>
<method selector='isCachedSeparately'>
<retval type='B'/>
</method>
<method selector='isDataRetained'>
<retval type='B'/>
</method>
<method selector='isFlipped'>
<retval type='B'/>
</method>
<method selector='isTemplate'>
<retval type='B'/>
</method>
<method selector='isValid'>
<retval type='B'/>
</method>
<method selector='lockFocusFlipped:'>
<arg type='B' index='0'/>
</method>
<method selector='matchesOnMultipleResolution'>
<retval type='B'/>
</method>
<method selector='prefersColorMatch'>
<retval type='B'/>
</method>
<method selector='scalesWhenResized'>
<retval type='B'/>
</method>
<method selector='setCacheDepthMatchesImageDepth:'>
<arg type='B' index='0'/>
</method>
<method selector='setCachedSeparately:'>
<arg type='B' index='0'/>
</method>
<method selector='setDataRetained:'>
<arg type='B' index='0'/>
</method>
<method selector='setFlipped:'>
<arg type='B' index='0'/>
</method>
<method selector='setMatchesOnMultipleResolution:'>
<arg type='B' index='0'/>
</method>
<method selector='setName:'>
<retval type='B'/>
</method>
<method selector='setPrefersColorMatch:'>
<arg type='B' index='0'/>
</method>
<method selector='setScalesWhenResized:'>
<arg type='B' index='0'/>
</method>
<method selector='setTemplate:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesEPSOnResolutionMismatch:'>
<arg type='B' index='0'/>
</method>
<method selector='usesEPSOnResolutionMismatch'>
<retval type='B'/>
</method>
</class>
<class name='NSImageRep'>
<method selector='canInitWithData:' class_method='true'>
<retval type='B'/>
</method>
<method selector='canInitWithPasteboard:' class_method='true'>
<retval type='B'/>
</method>
<method selector='draw'>
<retval type='B'/>
</method>
<method selector='drawAtPoint:'>
<retval type='B'/>
</method>
<method selector='drawInRect:'>
<retval type='B'/>
</method>
<method selector='drawInRect:fromRect:operation:fraction:respectFlipped:hints:'>
<arg type='B' index='4'/>
<retval type='B'/>
</method>
<method selector='hasAlpha'>
<retval type='B'/>
</method>
<method selector='isOpaque'>
<retval type='B'/>
</method>
<method selector='setAlpha:'>
<arg type='B' index='0'/>
</method>
<method selector='setOpaque:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSImageView'>
<method selector='allowsCutCopyPaste'>
<retval type='B'/>
</method>
<method selector='animates'>
<retval type='B'/>
</method>
<method selector='isEditable'>
<retval type='B'/>
</method>
<method selector='setAllowsCutCopyPaste:'>
<arg type='B' index='0'/>
</method>
<method selector='setAnimates:'>
<arg type='B' index='0'/>
</method>
<method selector='setEditable:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSInputManager'>
<method selector='handleMouseEvent:'>
<retval type='B'/>
</method>
<method selector='wantsToDelayTextChangeNotifications'>
<retval type='B'/>
</method>
<method selector='wantsToHandleMouseEvents'>
<retval type='B'/>
</method>
<method selector='wantsToInterpretAllKeystrokes'>
<retval type='B'/>
</method>
</class>
<class name='NSLayoutConstraint'>
<method selector='setShouldBeArchived:'>
<arg type='B' index='0'/>
</method>
<method selector='shouldBeArchived'>
<retval type='B'/>
</method>
</class>
<class name='NSLayoutManager'>
<method selector='allowsNonContiguousLayout'>
<retval type='B'/>
</method>
<method selector='backgroundLayoutEnabled'>
<retval type='B'/>
</method>
<method selector='drawsOutsideLineFragmentForGlyphAtIndex:'>
<retval type='B'/>
</method>
<method selector='getFirstUnlaidCharacterIndex:glyphIndex:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
</method>
<method suggestion='Call glyphAtIndex: multiple times.' ignore='true' selector='getGlyphs:range:'/>
<method suggestion='Call glyphAtIndex: multiple times.' ignore='true' selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:'>
<arg type='^B' index='4'/>
</method>
<method suggestion='Call glyphAtIndex: multiple times.' ignore='true' selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'>
<arg type='^B' index='4'/>
</method>
<method ignore='true' selector='getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:'>
<arg type='B' index='1'/>
<arg type='B' index='2'/>
</method>
<method selector='glyphAtIndex:isValidIndex:'>
<arg type='^B' index='1' type_modifier='o'/>
</method>
<method selector='glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='hasNonContiguousLayout'>
<retval type='B'/>
</method>
<method selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:'>
<arg type='B' index='1'/>
</method>
<method selector='isValidGlyphIndex:'>
<retval type='B'/>
</method>
<method selector='layoutManagerOwnsFirstResponderInWindow:'>
<retval type='B'/>
</method>
<method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg type='B' index='2'/>
</method>
<method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg type='B' index='2'/>
</method>
<method selector='notShownAttributeForGlyphAtIndex:'>
<retval type='B'/>
</method>
<method selector='rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:'>
<arg index='3' type_modifier='o'/>
<retval c_array_length_in_arg='3'/>
</method>
<method selector='rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:'>
<arg index='3' type_modifier='o'/>
<retval c_array_length_in_arg='3'/>
</method>
<method selector='rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:'>
<arg type='B' index='3'/>
</method>
<method selector='setAllowsNonContiguousLayout:'>
<arg type='B' index='0'/>
</method>
<method selector='setBackgroundLayoutEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setDrawsOutsideLineFragment:forGlyphAtIndex:'>
<arg type='B' index='0'/>
</method>
<method suggestion='Call setLocation:forStartOfGlyphRange: multiple times.' ignore='true' selector='setLocations:startingGlyphIndexes:count:forGlyphRange:'/>
<method selector='setNotShownAttribute:forGlyphAtIndex:'>
<arg type='B' index='0'/>
</method>
<method selector='setShowsControlCharacters:'>
<arg type='B' index='0'/>
</method>
<method selector='setShowsInvisibleCharacters:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesFontLeading:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesScreenFonts:'>
<arg type='B' index='0'/>
</method>
<method selector='showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='showsControlCharacters'>
<retval type='B'/>
</method>
<method selector='showsInvisibleCharacters'>
<retval type='B'/>
</method>
<method selector='textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg type='B' index='2'/>
</method>
<method selector='usesFontLeading'>
<retval type='B'/>
</method>
<method selector='usesScreenFonts'>
<retval type='B'/>
</method>
</class>
<class name='NSMatrix'>
<method selector='acceptsFirstMouse:'>
<retval type='B'/>
</method>
<method selector='allowsEmptySelection'>
<retval type='B'/>
</method>
<method selector='autosizesCells'>
<retval type='B'/>
</method>
<method selector='drawsBackground'>
<retval type='B'/>
</method>
<method selector='drawsCellBackground'>
<retval type='B'/>
</method>
<method selector='getNumberOfRows:columns:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
</method>
<method selector='getRow:column:forPoint:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='getRow:column:ofCell:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='highlightCell:atRow:column:'>
<arg type='B' index='0'/>
</method>
<method selector='isAutoscroll'>
<retval type='B'/>
</method>
<method selector='isSelectionByRect'>
<retval type='B'/>
</method>
<method selector='performKeyEquivalent:'>
<retval type='B'/>
</method>
<method selector='selectCellWithTag:'>
<retval type='B'/>
</method>
<method selector='sendAction'>
<retval type='B'/>
</method>
<method selector='sendAction:to:forAllCells:'>
<arg type='B' index='2'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutoscroll:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutosizesCells:'>
<arg type='B' index='0'/>
</method>
<method selector='setDoubleAction:'>
<arg sel_of_type='v12@0:4@8' index='0' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='setDrawsBackground:'>
<arg type='B' index='0'/>
</method>
<method selector='setDrawsCellBackground:'>
<arg type='B' index='0'/>
</method>
<method selector='setScrollable:'>
<arg type='B' index='0'/>
</method>
<method selector='setSelectionByRect:'>
<arg type='B' index='0'/>
</method>
<method selector='setSelectionFrom:to:anchor:highlight:'>
<arg type='B' index='3'/>
</method>
<method selector='setTabKeyTraversesCells:'>
<arg type='B' index='0'/>
</method>
<method selector='setValidateSize:'>
<arg type='B' index='0'/>
</method>
<method selector='sortUsingFunction:context:'>
<arg function_pointer='true' type='^?' index='0' type_modifier='n'>
<arg type='@'/>
<arg type='@'/>
<arg type='^v'/>
<retval type64='q' type='i'/>
</arg>
<arg index='1' type_modifier='n'/>
</method>
<method selector='sortUsingSelector:'>
<arg sel_of_type='i12@0:4@8' index='0' sel_of_type64='q24@0:8@16'/>
</method>
<method selector='tabKeyTraversesCells'>
<retval type='B'/>
</method>
<method selector='textShouldBeginEditing:'>
<retval type='B'/>
</method>
<method selector='textShouldEndEditing:'>
<retval type='B'/>
</method>
</class>
<class name='NSMenu'>
<method selector='addItemWithTitle:action:keyEquivalent:'>
<arg sel_of_type='v12@0:4@8' index='1' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='allowsContextMenuPlugIns'>
<retval type='B'/>
</method>
<method selector='autoenablesItems'>
<retval type='B'/>
</method>
<method selector='indexOfItemWithTarget:andAction:'>
<arg sel_of_type='v12@0:4@8' index='1' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='insertItemWithTitle:action:keyEquivalent:atIndex:'>
<arg sel_of_type='v12@0:4@8' index='1' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='isAttached'>
<retval type='B'/>
</method>
<method selector='isTornOff'>
<retval type='B'/>
</method>
<method selector='menuBarVisible' class_method='true'>
<retval type='B'/>
</method>
<method selector='menuChangedMessagesEnabled'>
<retval type='B'/>
</method>
<method selector='performKeyEquivalent:'>
<retval type='B'/>
</method>
<method selector='popUpMenuPositioningItem:atLocation:inView:'>
<retval type='B'/>
</method>
<method selector='setAllowsContextMenuPlugIns:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutoenablesItems:'>
<arg type='B' index='0'/>
</method>
<method selector='setMenuBarVisible:' class_method='true'>
<arg type='B' index='0'/>
</method>
<method selector='setMenuChangedMessagesEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setMenuZone:' class_method='true'>
<arg index='0' type_modifier='n'/>
</method>
<method selector='setShowsStateColumn:'>
<arg type='B' index='0'/>
</method>
<method selector='showsStateColumn'>
<retval type='B'/>
</method>
</class>
<class name='NSMenuItem'>
<method selector='hasSubmenu'>
<retval type='B'/>
</method>
<method selector='initWithTitle:action:keyEquivalent:'>
<arg sel_of_type='v12@0:4@8' index='1' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='isAlternate'>
<retval type='B'/>
</method>
<method selector='isEnabled'>
<retval type='B'/>
</method>
<method selector='isHidden'>
<retval type='B'/>
</method>
<method selector='isHiddenOrHasHiddenAncestor'>
<retval type='B'/>
</method>
<method selector='isHighlighted'>
<retval type='B'/>
</method>
<method selector='isSeparatorItem'>
<retval type='B'/>
</method>
<method selector='setAction:'>
<arg sel_of_type='v12@0:4@8' index='0' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='setAlternate:'>
<arg type='B' index='0'/>
</method>
<method selector='setEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setHidden:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesUserKeyEquivalents:' class_method='true'>
<arg type='B' index='0'/>
</method>
<method selector='usesUserKeyEquivalents' class_method='true'>
<retval type='B'/>
</method>
</class>
<class name='NSMenuItemCell'>
<method selector='needsDisplay'>
<retval type='B'/>
</method>
<method selector='needsSizing'>
<retval type='B'/>
</method>
<method selector='setNeedsDisplay:'>
<arg type='B' index='0'/>
</method>
<method selector='setNeedsSizing:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSMutableAttributedString'>
<method selector='readFromData:options:documentAttributes:'>
<arg index='2' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='readFromData:options:documentAttributes:error:'>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='readFromURL:options:documentAttributes:'>
<arg index='2' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='readFromURL:options:documentAttributes:error:'>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
<retval type='B'/>
</method>
</class>
<class name='NSNib'>
<method selector='instantiateNibWithExternalNameTable:'>
<retval type='B'/>
</method>
<method selector='instantiateNibWithOwner:topLevelObjects:'>
<arg index='1' type_modifier='o'/>
<retval type='B'/>
</method>
</class>
<class name='NSObject'>
<method selector='accessibilityIsAttributeSettable:'>
<retval type='B'/>
</method>
<method selector='accessibilityIsIgnored'>
<retval type='B'/>
</method>
<method selector='accessibilitySetOverrideValue:forAttribute:'>
<retval type='B'/>
</method>
<method selector='alertShowHelp:'>
<retval type='B'/>
</method>
<method selector='allowsMultipleSelection'>
<retval type='B'/>
</method>
<method selector='animatesToDestination'>
<retval type='B'/>
</method>
<method selector='animationShouldStart:'>
<retval type='B'/>
</method>
<method selector='application:delegateHandlesKey:'>
<retval type='B'/>
</method>
<method selector='application:openFile:'>
<retval type='B'/>
</method>
<method selector='application:openFileWithoutUI:'>
<retval type='B'/>
</method>
<method selector='application:openTempFile:'>
<retval type='B'/>
</method>
<method selector='application:printFile:'>
<retval type='B'/>
</method>
<method selector='application:printFiles:withSettings:showPrintPanels:'>
<arg type='B' index='3'/>
</method>
<method selector='applicationOpenUntitledFile:'>
<retval type='B'/>
</method>
<method selector='applicationShouldHandleReopen:hasVisibleWindows:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
<method selector='applicationShouldOpenUntitledFile:'>
<retval type='B'/>
</method>
<method selector='applicationShouldTerminateAfterLastWindowClosed:'>
<retval type='B'/>
</method>
<method selector='browser:acceptDrop:atRow:column:dropOperation:'>
<retval type='B'/>
</method>
<method selector='browser:canDragRowsWithIndexes:inColumn:withEvent:'>
<retval type='B'/>
</method>
<method selector='browser:isColumnValid:'>
<retval type='B'/>
</method>
<method selector='browser:isLeafItem:'>
<retval type='B'/>
</method>
<method selector='browser:selectCellWithString:inColumn:'>
<retval type='B'/>
</method>
<method selector='browser:selectRow:inColumn:'>
<retval type='B'/>
</method>
<method selector='browser:shouldEditItem:'>
<retval type='B'/>
</method>
<method selector='browser:shouldShowCellExpansionForRow:column:'>
<retval type='B'/>
</method>
<method selector='browser:shouldSizeColumn:forUserResize:toWidth:'>
<arg type='B' index='2'/>
</method>
<method selector='browser:shouldTypeSelectForEvent:withCurrentSearchString:'>
<retval type='B'/>
</method>
<method selector='browser:validateDrop:proposedRow:column:dropOperation:'>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
<arg index='4' type_modifier='o'/>
</method>
<method selector='browser:writeRowsWithIndexes:inColumn:toPasteboard:'>
<retval type='B'/>
</method>
<method selector='canBeDisabled'>
<retval type='B'/>
</method>
<method selector='collectionView:acceptDrop:index:dropOperation:'>
<retval type='B'/>
</method>
<method selector='collectionView:canDragItemsAtIndexes:withEvent:'>
<retval type='B'/>
</method>
<method selector='collectionView:writeItemsAtIndexes:toPasteboard:'>
<retval type='B'/>
</method>
<method selector='commitEditing'>
<retval type='B'/>
</method>
<method selector='commitEditingAndReturnError:'>
<retval type='B'/>
</method>
<method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8B12^v16' index='1' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='2' type_modifier='n'/>
</method>
<method selector='control:didFailToFormatString:errorDescription:'>
<retval type='B'/>
</method>
<method selector='control:isValidObject:'>
<retval type='B'/>
</method>
<method selector='control:textShouldBeginEditing:'>
<retval type='B'/>
</method>
<method selector='control:textShouldEndEditing:'>
<retval type='B'/>
</method>
<method selector='control:textView:completions:forPartialWordRange:indexOfSelectedItem:'>
<arg index='4' type_modifier='o'/>
</method>
<method selector='control:textView:doCommandBySelector:'>
<retval type='B'/>
</method>
<method selector='datePickerCell:validateProposedDateValue:timeInterval:'>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
</method>
<method selector='draggedImage:endedAt:deposited:'>
<arg type='B' index='2'/>
</method>
<method selector='draggingSourceOperationMaskForLocal:'>
<arg type='B' index='0'/>
</method>
<method selector='drawerShouldClose:'>
<retval type='B'/>
</method>
<method selector='drawerShouldOpen:'>
<retval type='B'/>
</method>
<method selector='drawsVerticallyForCharacterAtIndex:'>
<retval type='B'/>
</method>
<method selector='enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:'>
<arg function_pointer='true' type='@?' index='4'>
<arg type='@'/>
<arg type64='q' type='i'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='fontManager:willIncludeFont:'>
<retval type='B'/>
</method>
<method selector='hasMarkedText'>
<retval type='B'/>
</method>
<method selector='highlight:withFrame:inView:'>
<arg type='B' index='0'/>
</method>
<method selector='ignoreModifierKeysForDraggingSession:'>
<retval type='B'/>
</method>
<method selector='ignoreModifierKeysWhileDragging'>
<retval type='B'/>
</method>
<method selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='isEditable'>
<retval type='B'/>
</method>
<method selector='isExplicitlyIncluded'>
<retval type='B'/>
</method>
<method selector='isFindBarVisible'>
<retval type='B'/>
</method>
<method selector='isSelectable'>
<retval type='B'/>
</method>
<method selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:'>
<arg type='B' index='2'/>
</method>
<method selector='layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:'>
<arg type='B' index='2'/>
</method>
<method selector='menu:updateItem:atIndex:shouldCancel:'>
<arg type='B' index='3'/>
<retval type='B'/>
</method>
<method selector='menuHasKeyEquivalent:forEvent:target:action:'>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='mouseDownOnCharacterIndex:atCoordinate:withModifier:client:'>
<retval type='B'/>
</method>
<method selector='mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:'>
<retval type='B'/>
</method>
<method selector='outlineView:acceptDrop:item:childIndex:'>
<retval type='B'/>
</method>
<method selector='outlineView:isGroupItem:'>
<retval type='B'/>
</method>
<method selector='outlineView:isItemExpandable:'>
<retval type='B'/>
</method>
<method selector='outlineView:shouldCollapseItem:'>
<retval type='B'/>
</method>
<method selector='outlineView:shouldEditTableColumn:item:'>
<retval type='B'/>
</method>
<method selector='outlineView:shouldExpandItem:'>
<retval type='B'/>
</method>
<method selector='outlineView:shouldReorderColumn:toColumn:'>
<retval type='B'/>
</method>
<method selector='outlineView:shouldSelectItem:'>
<retval type='B'/>
</method>
<method selector='outlineView:shouldSelectTableColumn:'>
<retval type='B'/>
</method>
<method selector='outlineView:shouldShowCellExpansionForTableColumn:item:'>
<retval type='B'/>
</method>
<method selector='outlineView:shouldShowOutlineCellForItem:'>
<retval type='B'/>
</method>
<method selector='outlineView:shouldTrackCell:forTableColumn:item:'>
<retval type='B'/>
</method>
<method selector='outlineView:shouldTypeSelectForEvent:withCurrentSearchString:'>
<retval type='B'/>
</method>
<method selector='outlineView:writeItems:toPasteboard:'>
<retval type='B'/>
</method>
<method selector='panel:compareFilename:with:caseSensitive:'>
<arg type='B' index='3'/>
</method>
<method selector='panel:isValidFilename:'>
<retval type='B'/>
</method>
<method selector='panel:shouldEnableURL:'>
<retval type='B'/>
</method>
<method selector='panel:shouldShowFilename:'>
<retval type='B'/>
</method>
<method selector='panel:userEnteredFilename:confirmed:'>
<arg type='B' index='2'/>
</method>
<method selector='panel:validateURL:error:'>
<retval type='B'/>
</method>
<method selector='panel:willExpand:'>
<arg type='B' index='1'/>
</method>
<method selector='pathControl:acceptDrop:'>
<retval type='B'/>
</method>
<method selector='pathControl:shouldDragPathComponentCell:withPasteboard:'>
<retval type='B'/>
</method>
<method selector='performDragOperation:'>
<retval type='B'/>
</method>
<method selector='popoverShouldClose:'>
<retval type='B'/>
</method>
<method selector='prepareForDragOperation:'>
<retval type='B'/>
</method>
<method selector='provideNewView:'>
<arg type='B' index='0'/>
</method>
<method selector='readSelectionFromPasteboard:'>
<retval type='B'/>
</method>
<method selector='restoreWindowWithIdentifier:state:completionHandler:' class_method='true'>
<arg function_pointer='true' type='@?' index='2'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='searchForItemsWithSearchString:resultLimit:matchedItemHandler:'>
<arg function_pointer='true' type='@?' index='2'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='selectionShouldChangeInOutlineView:'>
<retval type='B'/>
</method>
<method selector='selectionShouldChangeInTableView:'>
<retval type='B'/>
</method>
<method selector='setAnimatesToDestination:'>
<arg type='B' index='0'/>
</method>
<method selector='setFindBarVisible:'>
<arg type='B' index='0'/>
</method>
<method selector='shouldReplaceCharactersInRanges:withStrings:'>
<retval type='B'/>
</method>
<method selector='sound:didFinishPlaying:'>
<arg type='B' index='1'/>
</method>
<method selector='speechSynthesizer:didFinishSpeaking:'>
<arg type='B' index='1'/>
</method>
<method selector='splitView:canCollapseSubview:'>
<retval type='B'/>
</method>
<method selector='splitView:shouldAdjustSizeOfSubview:'>
<retval type='B'/>
</method>
<method selector='splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:'>
<retval type='B'/>
</method>
<method selector='splitView:shouldHideDividerAtIndex:'>
<retval type='B'/>
</method>
<method selector='stringAtIndex:effectiveRange:endsWithSearchBoundary:'>
<arg type='^B' index='2'/>
</method>
<method selector='supportsMode:'>
<retval type='B'/>
</method>
<method selector='tabView:shouldSelectTabViewItem:'>
<retval type='B'/>
</method>
<method selector='tableView:acceptDrop:row:dropOperation:'>
<retval type='B'/>
</method>
<method selector='tableView:isGroupRow:'>
<retval type='B'/>
</method>
<method selector='tableView:shouldEditTableColumn:row:'>
<retval type='B'/>
</method>
<method selector='tableView:shouldReorderColumn:toColumn:'>
<retval type='B'/>
</method>
<method selector='tableView:shouldSelectRow:'>
<retval type='B'/>
</method>
<method selector='tableView:shouldSelectTableColumn:'>
<retval type='B'/>
</method>
<method selector='tableView:shouldShowCellExpansionForTableColumn:row:'>
<retval type='B'/>
</method>
<method selector='tableView:shouldTrackCell:forTableColumn:row:'>
<retval type='B'/>
</method>
<method selector='tableView:shouldTypeSelectForEvent:withCurrentSearchString:'>
<retval type='B'/>
</method>
<method selector='tableView:writeRows:toPasteboard:'>
<retval type='B'/>
</method>
<method selector='tableView:writeRowsWithIndexes:toPasteboard:'>
<retval type='B'/>
</method>
<method selector='textShouldBeginEditing:'>
<retval type='B'/>
</method>
<method selector='textShouldEndEditing:'>
<retval type='B'/>
</method>
<method selector='textView:clickedOnLink:'>
<retval type='B'/>
</method>
<method selector='textView:clickedOnLink:atIndex:'>
<retval type='B'/>
</method>
<method selector='textView:completions:forPartialWordRange:indexOfSelectedItem:'>
<arg index='3' type_modifier='o'/>
</method>
<method selector='textView:doCommandBySelector:'>
<retval type='B'/>
</method>
<method selector='textView:shouldChangeTextInRange:replacementString:'>
<retval type='B'/>
</method>
<method selector='textView:shouldChangeTextInRanges:replacementStrings:'>
<retval type='B'/>
</method>
<method selector='textView:writeCell:atIndex:toPasteboard:type:'>
<retval type='B'/>
</method>
<method selector='tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
<arg index='3' type_modifier='o'/>
</method>
<method selector='tokenField:hasMenuForRepresentedObject:'>
<retval type='B'/>
</method>
<method selector='tokenField:writeRepresentedObjects:toPasteboard:'>
<retval type='B'/>
</method>
<method selector='tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
<arg index='3' type_modifier='o'/>
</method>
<method selector='tokenFieldCell:hasMenuForRepresentedObject:'>
<retval type='B'/>
</method>
<method selector='tokenFieldCell:writeRepresentedObjects:toPasteboard:'>
<retval type='B'/>
</method>
<method selector='toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:'>
<arg type='B' index='2'/>
</method>
<method selector='trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:'>
<arg type='B' index='4'/>
<retval type='B'/>
</method>
<method selector='trackMouse:inRect:ofView:untilMouseUp:'>
<arg type='B' index='3'/>
<retval type='B'/>
</method>
<method selector='validateMenuItem:'>
<retval type='B'/>
</method>
<method selector='validateToolbarItem:'>
<retval type='B'/>
</method>
<method selector='validateUserInterfaceItem:'>
<retval type='B'/>
</method>
<method selector='view:stringForToolTip:point:userData:'>
<arg index='3' type_modifier='n'/>
</method>
<method selector='wantsPeriodicDraggingUpdates'>
<retval type='B'/>
</method>
<method selector='wantsToDelayTextChangeNotifications'>
<retval type='B'/>
</method>
<method selector='wantsToHandleMouseEvents'>
<retval type='B'/>
</method>
<method selector='wantsToInterpretAllKeystrokes'>
<retval type='B'/>
</method>
<method selector='wantsToTrackMouse'>
<retval type='B'/>
</method>
<method selector='wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:'>
<retval type='B'/>
</method>
<method selector='window:shouldDragDocumentWithEvent:from:withPasteboard:'>
<retval type='B'/>
</method>
<method selector='window:shouldPopUpDocumentPathMenu:'>
<retval type='B'/>
</method>
<method selector='windowShouldClose:'>
<retval type='B'/>
</method>
<method selector='windowShouldZoom:toFrame:'>
<retval type='B'/>
</method>
<method selector='writeSelectionToPasteboard:types:'>
<retval type='B'/>
</method>
</class>
<class name='NSObjectController'>
<method selector='automaticallyPreparesContent'>
<retval type='B'/>
</method>
<method selector='canAdd'>
<retval type='B'/>
</method>
<method selector='canRemove'>
<retval type='B'/>
</method>
<method selector='fetchWithRequest:merge:error:'>
<arg type='B' index='1'/>
<arg index='2' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='isEditable'>
<retval type='B'/>
</method>
<method selector='setAutomaticallyPreparesContent:'>
<arg type='B' index='0'/>
</method>
<method selector='setEditable:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesLazyFetching:'>
<arg type='B' index='0'/>
</method>
<method selector='usesLazyFetching'>
<retval type='B'/>
</method>
<method selector='validateUserInterfaceItem:'>
<retval type='B'/>
</method>
</class>
<class name='NSOpenGLContext'>
<method selector='getValues:forParameter:'>
<arg c_array_of_variable_length='true' index='0' type_modifier='o'/>
</method>
<method ignore='true' selector='setOffScreen:width:height:rowbytes:'/>
<method selector='setValues:forParameter:'>
<arg c_array_of_variable_length='true' index='0' type_modifier='n'/>
</method>
</class>
<class name='NSOpenGLLayer'>
<method selector='canDrawInOpenGLContext:pixelFormat:forLayerTime:displayTime:'>
<arg type='^{_CVTimeStamp=IiqQdq{CVSMPTETime=ssIIIssss}QQ}' index='3'/>
<retval type='B'/>
</method>
<method selector='drawInOpenGLContext:pixelFormat:forLayerTime:displayTime:'>
<arg type='^{_CVTimeStamp=IiqQdq{CVSMPTETime=ssIIIssss}QQ}' index='3'/>
</method>
</class>
<class name='NSOpenGLPixelFormat'>
<method selector='getValues:forAttribute:forVirtualScreen:'>
<arg c_array_of_variable_length='true' index='0' type_modifier='o'/>
</method>
<method selector='initWithAttributes:'>
<arg index='0' type_modifier='n' c_array_delimited_by_null='true'/>
</method>
</class>
<class name='NSOpenPanel'>
<method selector='allowsMultipleSelection'>
<retval type='B'/>
</method>
<method selector='beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8i12^v16' index='4' sel_of_type64='v40@0:8@16q24^v32'/>
<arg index='5' type_modifier='n'/>
</method>
<method selector='beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8i12^v16' index='5' sel_of_type64='v40@0:8@16q24^v32'/>
<arg index='6' type_modifier='n'/>
</method>
<method selector='canChooseDirectories'>
<retval type='B'/>
</method>
<method selector='canChooseFiles'>
<retval type='B'/>
</method>
<method selector='resolvesAliases'>
<retval type='B'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg type='B' index='0'/>
</method>
<method selector='setCanChooseDirectories:'>
<arg type='B' index='0'/>
</method>
<method selector='setCanChooseFiles:'>
<arg type='B' index='0'/>
</method>
<method selector='setResolvesAliases:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSOutlineView'>
<method selector='autoresizesOutlineColumn'>
<retval type='B'/>
</method>
<method selector='autosaveExpandedItems'>
<retval type='B'/>
</method>
<method selector='collapseItem:collapseChildren:'>
<arg type='B' index='1'/>
</method>
<method selector='expandItem:expandChildren:'>
<arg type='B' index='1'/>
</method>
<method selector='indentationMarkerFollowsCell'>
<retval type='B'/>
</method>
<method selector='isExpandable:'>
<retval type='B'/>
</method>
<method selector='isItemExpanded:'>
<retval type='B'/>
</method>
<method selector='reloadItem:reloadChildren:'>
<arg type='B' index='1'/>
</method>
<method selector='setAutoresizesOutlineColumn:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutosaveExpandedItems:'>
<arg type='B' index='0'/>
</method>
<method selector='setIndentationMarkerFollowsCell:'>
<arg type='B' index='0'/>
</method>
<method selector='shouldCollapseAutoExpandedItemsForDeposited:'>
<arg type='B' index='0'/>
<retval type='B'/>
</method>
</class>
<class name='NSPageLayout'>
<method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8i12^v16' index='3' sel_of_type64='v40@0:8@16q24^v32'/>
<arg index='4' type_modifier='n'/>
</method>
</class>
<class name='NSPanel'>
<method selector='becomesKeyOnlyIfNeeded'>
<retval type='B'/>
</method>
<method selector='isFloatingPanel'>
<retval type='B'/>
</method>
<method selector='setBecomesKeyOnlyIfNeeded:'>
<arg type='B' index='0'/>
</method>
<method selector='setFloatingPanel:'>
<arg type='B' index='0'/>
</method>
<method selector='setWorksWhenModal:'>
<arg type='B' index='0'/>
</method>
<method selector='worksWhenModal'>
<retval type='B'/>
</method>
</class>
<class name='NSPasteboard'>
<method selector='canReadItemWithDataConformingToTypes:'>
<retval type='B'/>
</method>
<method selector='canReadObjectForClasses:options:'>
<retval type='B'/>
</method>
<method selector='setData:forType:'>
<retval type='B'/>
</method>
<method selector='setPropertyList:forType:'>
<retval type='B'/>
</method>
<method selector='setString:forType:'>
<retval type='B'/>
</method>
<method selector='writeFileContents:'>
<retval type='B'/>
</method>
<method selector='writeFileWrapper:'>
<retval type='B'/>
</method>
<method selector='writeObjects:'>
<retval type='B'/>
</method>
</class>
<class name='NSPasteboardItem'>
<method selector='setData:forType:'>
<retval type='B'/>
</method>
<method selector='setDataProvider:forTypes:'>
<retval type='B'/>
</method>
<method selector='setPropertyList:forType:'>
<retval type='B'/>
</method>
<method selector='setString:forType:'>
<retval type='B'/>
</method>
</class>
<class name='NSPathCell'>
<method selector='setDoubleAction:'>
<arg sel_of_type='v12@0:4@8' index='0' sel_of_type64='v24@0:8@16'/>
</method>
</class>
<class name='NSPathControl'>
<method selector='setDoubleAction:'>
<arg sel_of_type='v12@0:4@8' index='0' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg type='B' index='1'/>
</method>
</class>
<class name='NSPersistentDocument'>
<method selector='configurePersistentStoreCoordinatorForURL:ofType:error:'>
<arg index='2' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:'>
<arg index='4' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='readFromURL:ofType:error:'>
<arg index='2' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='revertToContentsOfURL:ofType:error:'>
<arg index='2' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='writeToURL:ofType:forSaveOperation:originalContentsURL:error:'>
<arg index='4' type_modifier='o'/>
<retval type='B'/>
</method>
</class>
<class name='NSPopUpButton'>
<method selector='autoenablesItems'>
<retval type='B'/>
</method>
<method selector='indexOfItemWithTarget:andAction:'>
<arg sel_of_type='v12@0:4@8' index='1' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='initWithFrame:pullsDown:'>
<arg type='B' index='1'/>
</method>
<method selector='pullsDown'>
<retval type='B'/>
</method>
<method selector='selectItemWithTag:'>
<retval type='B'/>
</method>
<method selector='setAutoenablesItems:'>
<arg type='B' index='0'/>
</method>
<method selector='setPullsDown:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSPopUpButtonCell'>
<method selector='altersStateOfSelectedItem'>
<retval type='B'/>
</method>
<method selector='autoenablesItems'>
<retval type='B'/>
</method>
<method selector='indexOfItemWithTarget:andAction:'>
<arg sel_of_type='v12@0:4@8' index='1' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='initTextCell:pullsDown:'>
<arg type='B' index='1'/>
</method>
<method selector='pullsDown'>
<retval type='B'/>
</method>
<method selector='selectItemWithTag:'>
<retval type='B'/>
</method>
<method selector='setAltersStateOfSelectedItem:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutoenablesItems:'>
<arg type='B' index='0'/>
</method>
<method selector='setPullsDown:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesItemFromMenu:'>
<arg type='B' index='0'/>
</method>
<method selector='usesItemFromMenu'>
<retval type='B'/>
</method>
</class>
<class name='NSPopover'>
<method selector='animates'>
<retval type='B'/>
</method>
<method selector='isShown'>
<retval type='B'/>
</method>
<method selector='setAnimates:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSPrintInfo'>
<method selector='isHorizontallyCentered'>
<retval type='B'/>
</method>
<method selector='isSelectionOnly'>
<retval type='B'/>
</method>
<method selector='isVerticallyCentered'>
<retval type='B'/>
</method>
<method selector='setHorizontallyCentered:'>
<arg type='B' index='0'/>
</method>
<method selector='setSelectionOnly:'>
<arg type='B' index='0'/>
</method>
<method selector='setVerticallyCentered:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSPrintOperation'>
<method selector='canSpawnSeparateThread'>
<retval type='B'/>
</method>
<method selector='deliverResult'>
<retval type='B'/>
</method>
<method selector='isCopyingOperation'>
<retval type='B'/>
</method>
<method selector='runOperation'>
<retval type='B'/>
</method>
<method selector='runOperationModalForWindow:delegate:didRunSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8B12^v16' index='2' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='3' type_modifier='n'/>
</method>
<method selector='setCanSpawnSeparateThread:'>
<arg type='B' index='0'/>
</method>
<method selector='setShowPanels:'>
<arg type='B' index='0'/>
</method>
<method selector='setShowsPrintPanel:'>
<arg type='B' index='0'/>
</method>
<method selector='setShowsProgressPanel:'>
<arg type='B' index='0'/>
</method>
<method selector='showPanels'>
<retval type='B'/>
</method>
<method selector='showsPrintPanel'>
<retval type='B'/>
</method>
<method selector='showsProgressPanel'>
<retval type='B'/>
</method>
</class>
<class name='NSPrintPanel'>
<method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8i12^v16' index='3' sel_of_type64='v40@0:8@16q24^v32'/>
<arg index='4' type_modifier='n'/>
</method>
</class>
<class name='NSPrinter'>
<method selector='acceptsBinary'>
<retval type='B'/>
</method>
<method selector='booleanForKey:inTable:'>
<retval type='B'/>
</method>
<method selector='isColor'>
<retval type='B'/>
</method>
<method selector='isFontAvailable:'>
<retval type='B'/>
</method>
<method selector='isKey:inTable:'>
<retval type='B'/>
</method>
<method selector='isOutputStackInReverseOrder'>
<retval type='B'/>
</method>
<method selector='printerWithName:domain:includeUnavailable:' class_method='true'>
<arg type='B' index='2'/>
</method>
</class>
<class name='NSProgressIndicator'>
<method selector='isBezeled'>
<retval type='B'/>
</method>
<method selector='isDisplayedWhenStopped'>
<retval type='B'/>
</method>
<method selector='isIndeterminate'>
<retval type='B'/>
</method>
<method selector='setBezeled:'>
<arg type='B' index='0'/>
</method>
<method selector='setDisplayedWhenStopped:'>
<arg type='B' index='0'/>
</method>
<method selector='setIndeterminate:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesThreadedAnimation:'>
<arg type='B' index='0'/>
</method>
<method selector='usesThreadedAnimation'>
<retval type='B'/>
</method>
</class>
<class name='NSResponder'>
<method selector='acceptsFirstResponder'>
<retval type='B'/>
</method>
<method selector='becomeFirstResponder'>
<retval type='B'/>
</method>
<method selector='performKeyEquivalent:'>
<retval type='B'/>
</method>
<method selector='performMnemonic:'>
<retval type='B'/>
</method>
<method selector='presentError:'>
<retval type='B'/>
</method>
<method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
<arg sel_of_type='v16@0:4B8^v12' index='3' sel_of_type64='v28@0:8B16^v20'/>
<arg index='4' type_modifier='n'/>
</method>
<method selector='resignFirstResponder'>
<retval type='B'/>
</method>
<method selector='shouldBeTreatedAsInkEvent:'>
<retval type='B'/>
</method>
<method selector='tryToPerform:with:'>
<retval type='B'/>
</method>
<method selector='validateProposedFirstResponder:forEvent:'>
<retval type='B'/>
</method>
<method selector='wantsForwardedScrollEventsForAxis:'>
<retval type='B'/>
</method>
<method selector='wantsScrollEventsForSwipeTrackingOnAxis:'>
<retval type='B'/>
</method>
</class>
<class name='NSRuleEditor'>
<method selector='canRemoveAllRows'>
<retval type='B'/>
</method>
<method selector='insertRowAtIndex:withType:asSubrowOfRow:animate:'>
<arg type='B' index='3'/>
</method>
<method selector='isEditable'>
<retval type='B'/>
</method>
<method selector='removeRowsAtIndexes:includeSubrows:'>
<arg type='B' index='1'/>
</method>
<method selector='selectRowIndexes:byExtendingSelection:'>
<arg type='B' index='1'/>
</method>
<method selector='setCanRemoveAllRows:'>
<arg type='B' index='0'/>
</method>
<method selector='setEditable:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSRulerMarker'>
<method selector='isDragging'>
<retval type='B'/>
</method>
<method selector='isMovable'>
<retval type='B'/>
</method>
<method selector='isRemovable'>
<retval type='B'/>
</method>
<method selector='setMovable:'>
<arg type='B' index='0'/>
</method>
<method selector='setRemovable:'>
<arg type='B' index='0'/>
</method>
<method selector='trackMouse:adding:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
</class>
<class name='NSRulerView'>
<method selector='isFlipped'>
<retval type='B'/>
</method>
<method selector='trackMarker:withMouseEvent:'>
<retval type='B'/>
</method>
</class>
<class name='NSRunningApplication'>
<method selector='activateWithOptions:'>
<retval type='B'/>
</method>
<method selector='forceTerminate'>
<retval type='B'/>
</method>
<method selector='hide'>
<retval type='B'/>
</method>
<method selector='isActive'>
<retval type='B'/>
</method>
<method selector='isFinishedLaunching'>
<retval type='B'/>
</method>
<method selector='isHidden'>
<retval type='B'/>
</method>
<method selector='isTerminated'>
<retval type='B'/>
</method>
<method selector='ownsMenuBar'>
<retval type='B'/>
</method>
<method selector='terminate'>
<retval type='B'/>
</method>
<method selector='unhide'>
<retval type='B'/>
</method>
</class>
<class name='NSSavePanel'>
<method selector='allowsOtherFileTypes'>
<retval type='B'/>
</method>
<method selector='beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8i12^v16' index='4' sel_of_type64='v40@0:8@16q24^v32'/>
<arg index='5' type_modifier='n'/>
</method>
<method selector='beginSheetModalForWindow:completionHandler:'>
<arg function_pointer='true' type='@?' index='1'>
<arg type64='q' type='i'/>
<retval type='v'/>
</arg>
</method>
<method selector='beginWithCompletionHandler:'>
<arg function_pointer='true' type='@?' index='0'>
<arg type64='q' type='i'/>
<retval type='v'/>
</arg>
</method>
<method selector='canCreateDirectories'>
<retval type='B'/>
</method>
<method selector='canSelectHiddenExtension'>
<retval type='B'/>
</method>
<method selector='isExpanded'>
<retval type='B'/>
</method>
<method selector='isExtensionHidden'>
<retval type='B'/>
</method>
<method selector='setAllowsOtherFileTypes:'>
<arg type='B' index='0'/>
</method>
<method selector='setCanCreateDirectories:'>
<arg type='B' index='0'/>
</method>
<method selector='setCanSelectHiddenExtension:'>
<arg type='B' index='0'/>
</method>
<method selector='setExtensionHidden:'>
<arg type='B' index='0'/>
</method>
<method selector='setShowsHiddenFiles:'>
<arg type='B' index='0'/>
</method>
<method selector='setTreatsFilePackagesAsDirectories:'>
<arg type='B' index='0'/>
</method>
<method selector='showsHiddenFiles'>
<retval type='B'/>
</method>
<method selector='treatsFilePackagesAsDirectories'>
<retval type='B'/>
</method>
</class>
<class name='NSScrollView'>
<method selector='autohidesScrollers'>
<retval type='B'/>
</method>
<method selector='contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:' class_method='true'>
<arg type='B' index='1'/>
<arg type='B' index='2'/>
</method>
<method selector='drawsBackground'>
<retval type='B'/>
</method>
<method selector='frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:' class_method='true'>
<arg type='B' index='1'/>
<arg type='B' index='2'/>
</method>
<method selector='hasHorizontalRuler'>
<retval type='B'/>
</method>
<method selector='hasHorizontalScroller'>
<retval type='B'/>
</method>
<method selector='hasVerticalRuler'>
<retval type='B'/>
</method>
<method selector='hasVerticalScroller'>
<retval type='B'/>
</method>
<method selector='rulersVisible'>
<retval type='B'/>
</method>
<method selector='scrollsDynamically'>
<retval type='B'/>
</method>
<method selector='setAutohidesScrollers:'>
<arg type='B' index='0'/>
</method>
<method selector='setDrawsBackground:'>
<arg type='B' index='0'/>
</method>
<method selector='setHasHorizontalRuler:'>
<arg type='B' index='0'/>
</method>
<method selector='setHasHorizontalScroller:'>
<arg type='B' index='0'/>
</method>
<method selector='setHasVerticalRuler:'>
<arg type='B' index='0'/>
</method>
<method selector='setHasVerticalScroller:'>
<arg type='B' index='0'/>
</method>
<method selector='setRulersVisible:'>
<arg type='B' index='0'/>
</method>
<method selector='setScrollsDynamically:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesPredominantAxisScrolling:'>
<arg type='B' index='0'/>
</method>
<method selector='usesPredominantAxisScrolling'>
<retval type='B'/>
</method>
</class>
<class name='NSScroller'>
<method selector='drawArrow:highlight:'>
<arg type='B' index='1'/>
</method>
<method selector='drawKnobSlotInRect:highlight:'>
<arg type='B' index='1'/>
</method>
<method selector='highlight:'>
<arg type='B' index='0'/>
</method>
<method selector='isCompatibleWithOverlayScrollers' class_method='true'>
<retval type='B'/>
</method>
</class>
<class name='NSSearchFieldCell'>
<method selector='sendsSearchStringImmediately'>
<retval type='B'/>
</method>
<method selector='sendsWholeSearchString'>
<retval type='B'/>
</method>
<method selector='setSendsSearchStringImmediately:'>
<arg type='B' index='0'/>
</method>
<method selector='setSendsWholeSearchString:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSSecureTextFieldCell'>
<method selector='echosBullets'>
<retval type='B'/>
</method>
<method selector='setEchosBullets:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSSegmentedCell'>
<method selector='isEnabledForSegment:'>
<retval type='B'/>
</method>
<method selector='isSelectedForSegment:'>
<retval type='B'/>
</method>
<method selector='selectSegmentWithTag:'>
<retval type='B'/>
</method>
<method selector='setEnabled:forSegment:'>
<arg type='B' index='0'/>
</method>
<method selector='setSelected:forSegment:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSSegmentedControl'>
<method selector='isEnabledForSegment:'>
<retval type='B'/>
</method>
<method selector='isSelectedForSegment:'>
<retval type='B'/>
</method>
<method selector='selectSegmentWithTag:'>
<retval type='B'/>
</method>
<method selector='setEnabled:forSegment:'>
<arg type='B' index='0'/>
</method>
<method selector='setSelected:forSegment:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSSlider'>
<method selector='acceptsFirstMouse:'>
<retval type='B'/>
</method>
<method selector='allowsTickMarkValuesOnly'>
<retval type='B'/>
</method>
<method selector='setAllowsTickMarkValuesOnly:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSSliderCell'>
<method selector='allowsTickMarkValuesOnly'>
<retval type='B'/>
</method>
<method selector='drawBarInside:flipped:'>
<arg type='B' index='1'/>
</method>
<method selector='knobRectFlipped:'>
<arg type='B' index='0'/>
</method>
<method selector='prefersTrackingUntilMouseUp' class_method='true'>
<retval type='B'/>
</method>
<method selector='setAllowsTickMarkValuesOnly:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSSound'>
<method selector='canInitWithPasteboard:' class_method='true'>
<retval type='B'/>
</method>
<method selector='initWithContentsOfFile:byReference:'>
<arg type='B' index='1'/>
</method>
<method selector='initWithContentsOfURL:byReference:'>
<arg type='B' index='1'/>
</method>
<method selector='isPlaying'>
<retval type='B'/>
</method>
<method selector='loops'>
<retval type='B'/>
</method>
<method selector='pause'>
<retval type='B'/>
</method>
<method selector='play'>
<retval type='B'/>
</method>
<method selector='resume'>
<retval type='B'/>
</method>
<method selector='setLoops:'>
<arg type='B' index='0'/>
</method>
<method selector='setName:'>
<retval type='B'/>
</method>
<method selector='stop'>
<retval type='B'/>
</method>
</class>
<class name='NSSpeechRecognizer'>
<method selector='blocksOtherRecognizers'>
<retval type='B'/>
</method>
<method selector='listensInForegroundOnly'>
<retval type='B'/>
</method>
<method selector='setBlocksOtherRecognizers:'>
<arg type='B' index='0'/>
</method>
<method selector='setListensInForegroundOnly:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSSpeechSynthesizer'>
<method selector='isAnyApplicationSpeaking' class_method='true'>
<retval type='B'/>
</method>
<method selector='isSpeaking'>
<retval type='B'/>
</method>
<method selector='objectForProperty:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='setObject:forProperty:error:'>
<arg index='2' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='setUsesFeedbackWindow:'>
<arg type='B' index='0'/>
</method>
<method selector='setVoice:'>
<retval type='B'/>
</method>
<method selector='startSpeakingString:'>
<retval type='B'/>
</method>
<method selector='startSpeakingString:toURL:'>
<retval type='B'/>
</method>
<method selector='usesFeedbackWindow'>
<retval type='B'/>
</method>
</class>
<class name='NSSpellChecker'>
<method selector='automaticallyIdentifiesLanguages'>
<retval type='B'/>
</method>
<method selector='checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:'>
<arg type='B' index='3'/>
<arg index='5' type_modifier='o'/>
</method>
<method selector='checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:'>
<arg type='B' index='3'/>
<arg index='5' type_modifier='o'/>
</method>
<method selector='hasLearnedWord:'>
<retval type='B'/>
</method>
<method selector='isAutomaticSpellingCorrectionEnabled' class_method='true'>
<retval type='B'/>
</method>
<method selector='isAutomaticTextReplacementEnabled' class_method='true'>
<retval type='B'/>
</method>
<method selector='requestCheckingOfString:range:types:options:inSpellDocumentWithTag:completionHandler:'>
<arg function_pointer='true' type='@?' index='5'>
<arg type64='q' type='i'/>
<arg type='@'/>
<arg type='@'/>
<arg type64='q' type='i'/>
<retval type='v'/>
</arg>
</method>
<method selector='setAutomaticallyIdentifiesLanguages:'>
<arg type='B' index='0'/>
</method>
<method selector='setLanguage:'>
<retval type='B'/>
</method>
<method selector='sharedSpellCheckerExists' class_method='true'>
<retval type='B'/>
</method>
<method selector='showCorrectionIndicatorOfType:primaryString:alternativeStrings:forStringInRect:view:completionHandler:'>
<arg function_pointer='true' type='@?' index='5'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='NSSplitView'>
<method selector='isPaneSplitter'>
<retval type='B'/>
</method>
<method selector='isSubviewCollapsed:'>
<retval type='B'/>
</method>
<method selector='isVertical'>
<retval type='B'/>
</method>
<method selector='setIsPaneSplitter:'>
<arg type='B' index='0'/>
</method>
<method selector='setVertical:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSStatusBar'>
<method selector='isVertical'>
<retval type='B'/>
</method>
</class>
<class name='NSStatusItem'>
<method selector='drawStatusBarBackgroundInRect:withHighlight:'>
<arg type='B' index='1'/>
</method>
<method selector='highlightMode'>
<retval type='B'/>
</method>
<method selector='isEnabled'>
<retval type='B'/>
</method>
<method selector='setAction:'>
<arg sel_of_type='v12@0:4@8' index='0' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='setDoubleAction:'>
<arg sel_of_type='v12@0:4@8' index='0' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='setEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setHighlightMode:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSStepper'>
<method selector='autorepeat'>
<retval type='B'/>
</method>
<method selector='setAutorepeat:'>
<arg type='B' index='0'/>
</method>
<method selector='setValueWraps:'>
<arg type='B' index='0'/>
</method>
<method selector='valueWraps'>
<retval type='B'/>
</method>
</class>
<class name='NSStepperCell'>
<method selector='autorepeat'>
<retval type='B'/>
</method>
<method selector='setAutorepeat:'>
<arg type='B' index='0'/>
</method>
<method selector='setValueWraps:'>
<arg type='B' index='0'/>
</method>
<method selector='valueWraps'>
<retval type='B'/>
</method>
</class>
<class name='NSTabView'>
<method selector='allowsTruncatedLabels'>
<retval type='B'/>
</method>
<method selector='drawsBackground'>
<retval type='B'/>
</method>
<method selector='setAllowsTruncatedLabels:'>
<arg type='B' index='0'/>
</method>
<method selector='setDrawsBackground:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSTabViewItem'>
<method selector='drawLabel:inRect:'>
<arg type='B' index='0'/>
</method>
<method selector='sizeOfLabel:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSTableColumn'>
<method selector='isEditable'>
<retval type='B'/>
</method>
<method selector='isHidden'>
<retval type='B'/>
</method>
<method selector='isResizable'>
<retval type='B'/>
</method>
<method selector='setEditable:'>
<arg type='B' index='0'/>
</method>
<method selector='setHidden:'>
<arg type='B' index='0'/>
</method>
<method selector='setResizable:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSTableHeaderCell'>
<method selector='drawSortIndicatorWithFrame:inView:ascending:priority:'>
<arg type='B' index='2'/>
</method>
</class>
<class name='NSTableRowView'>
<method selector='isEmphasized'>
<retval type='B'/>
</method>
<method selector='isFloating'>
<retval type='B'/>
</method>
<method selector='isGroupRowStyle'>
<retval type='B'/>
</method>
<method selector='isSelected'>
<retval type='B'/>
</method>
<method selector='isTargetForDropOperation'>
<retval type='B'/>
</method>
<method selector='setEmphasized:'>
<arg type='B' index='0'/>
</method>
<method selector='setFloating:'>
<arg type='B' index='0'/>
</method>
<method selector='setGroupRowStyle:'>
<arg type='B' index='0'/>
</method>
<method selector='setSelected:'>
<arg type='B' index='0'/>
</method>
<method selector='setTargetForDropOperation:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSTableView'>
<method selector='allowsColumnReordering'>
<retval type='B'/>
</method>
<method selector='allowsColumnResizing'>
<retval type='B'/>
</method>
<method selector='allowsColumnSelection'>
<retval type='B'/>
</method>
<method selector='allowsEmptySelection'>
<retval type='B'/>
</method>
<method selector='allowsMultipleSelection'>
<retval type='B'/>
</method>
<method selector='allowsTypeSelect'>
<retval type='B'/>
</method>
<method selector='autoresizesAllColumnsToFit'>
<retval type='B'/>
</method>
<method selector='autosaveTableColumns'>
<retval type='B'/>
</method>
<method selector='canDragRowsWithIndexes:atPoint:'>
<retval type='B'/>
</method>
<method selector='dragImageForRows:event:dragImageOffset:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='dragImageForRowsWithIndexes:tableColumns:event:offset:'>
<arg index='3' type_modifier='o'/>
</method>
<method selector='drawsGrid'>
<retval type='B'/>
</method>
<method selector='editColumn:row:withEvent:select:'>
<arg type='B' index='3'/>
</method>
<method selector='enumerateAvailableRowViewsUsingBlock:'>
<arg function_pointer='true' type='@?' index='0'>
<arg type='@'/>
<arg type64='q' type='i'/>
<retval type='v'/>
</arg>
</method>
<method selector='floatsGroupRows'>
<retval type='B'/>
</method>
<method selector='isColumnSelected:'>
<retval type='B'/>
</method>
<method selector='isRowSelected:'>
<retval type='B'/>
</method>
<method selector='rowViewAtRow:makeIfNecessary:'>
<arg type='B' index='1'/>
</method>
<method selector='selectColumn:byExtendingSelection:'>
<arg type='B' index='1'/>
</method>
<method selector='selectColumnIndexes:byExtendingSelection:'>
<arg type='B' index='1'/>
</method>
<method selector='selectRow:byExtendingSelection:'>
<arg type='B' index='1'/>
</method>
<method selector='selectRowIndexes:byExtendingSelection:'>
<arg type='B' index='1'/>
</method>
<method selector='setAllowsColumnReordering:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsColumnResizing:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsColumnSelection:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsTypeSelect:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutoresizesAllColumnsToFit:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutosaveTableColumns:'>
<arg type='B' index='0'/>
</method>
<method selector='setDoubleAction:'>
<arg sel_of_type='v12@0:4@8' index='0' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg type='B' index='1'/>
</method>
<method selector='setDrawsGrid:'>
<arg type='B' index='0'/>
</method>
<method selector='setFloatsGroupRows:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesAlternatingRowBackgroundColors:'>
<arg type='B' index='0'/>
</method>
<method selector='setVerticalMotionCanBeginDrag:'>
<arg type='B' index='0'/>
</method>
<method selector='shouldFocusCell:atColumn:row:'>
<retval type='B'/>
</method>
<method selector='textShouldBeginEditing:'>
<retval type='B'/>
</method>
<method selector='textShouldEndEditing:'>
<retval type='B'/>
</method>
<method selector='usesAlternatingRowBackgroundColors'>
<retval type='B'/>
</method>
<method selector='verticalMotionCanBeginDrag'>
<retval type='B'/>
</method>
<method selector='viewAtColumn:row:makeIfNecessary:'>
<arg type='B' index='2'/>
</method>
</class>
<class name='NSText'>
<method selector='drawsBackground'>
<retval type='B'/>
</method>
<method selector='importsGraphics'>
<retval type='B'/>
</method>
<method selector='isEditable'>
<retval type='B'/>
</method>
<method selector='isFieldEditor'>
<retval type='B'/>
</method>
<method selector='isHorizontallyResizable'>
<retval type='B'/>
</method>
<method selector='isRichText'>
<retval type='B'/>
</method>
<method selector='isRulerVisible'>
<retval type='B'/>
</method>
<method selector='isSelectable'>
<retval type='B'/>
</method>
<method selector='isVerticallyResizable'>
<retval type='B'/>
</method>
<method selector='readRTFDFromFile:'>
<retval type='B'/>
</method>
<method selector='setDrawsBackground:'>
<arg type='B' index='0'/>
</method>
<method selector='setEditable:'>
<arg type='B' index='0'/>
</method>
<method selector='setFieldEditor:'>
<arg type='B' index='0'/>
</method>
<method selector='setHorizontallyResizable:'>
<arg type='B' index='0'/>
</method>
<method selector='setImportsGraphics:'>
<arg type='B' index='0'/>
</method>
<method selector='setRichText:'>
<arg type='B' index='0'/>
</method>
<method selector='setSelectable:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesFontPanel:'>
<arg type='B' index='0'/>
</method>
<method selector='setVerticallyResizable:'>
<arg type='B' index='0'/>
</method>
<method selector='usesFontPanel'>
<retval type='B'/>
</method>
<method selector='writeRTFDToFile:atomically:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
</class>
<class name='NSTextContainer'>
<method selector='containsPoint:'>
<retval type='B'/>
</method>
<method selector='heightTracksTextView'>
<retval type='B'/>
</method>
<method selector='isSimpleRectangularTextContainer'>
<retval type='B'/>
</method>
<method selector='lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:'>
<arg index='3' type_modifier='o'/>
</method>
<method selector='setHeightTracksTextView:'>
<arg type='B' index='0'/>
</method>
<method selector='setWidthTracksTextView:'>
<arg type='B' index='0'/>
</method>
<method selector='widthTracksTextView'>
<retval type='B'/>
</method>
</class>
<class name='NSTextField'>
<method selector='acceptsFirstResponder'>
<retval type='B'/>
</method>
<method selector='allowsEditingTextAttributes'>
<retval type='B'/>
</method>
<method selector='drawsBackground'>
<retval type='B'/>
</method>
<method selector='importsGraphics'>
<retval type='B'/>
</method>
<method selector='isBezeled'>
<retval type='B'/>
</method>
<method selector='isBordered'>
<retval type='B'/>
</method>
<method selector='isEditable'>
<retval type='B'/>
</method>
<method selector='isSelectable'>
<retval type='B'/>
</method>
<method selector='setAllowsEditingTextAttributes:'>
<arg type='B' index='0'/>
</method>
<method selector='setBezeled:'>
<arg type='B' index='0'/>
</method>
<method selector='setBordered:'>
<arg type='B' index='0'/>
</method>
<method selector='setDrawsBackground:'>
<arg type='B' index='0'/>
</method>
<method selector='setEditable:'>
<arg type='B' index='0'/>
</method>
<method selector='setImportsGraphics:'>
<arg type='B' index='0'/>
</method>
<method selector='setSelectable:'>
<arg type='B' index='0'/>
</method>
<method selector='textShouldBeginEditing:'>
<retval type='B'/>
</method>
<method selector='textShouldEndEditing:'>
<retval type='B'/>
</method>
</class>
<class name='NSTextFieldCell'>
<method selector='drawsBackground'>
<retval type='B'/>
</method>
<method selector='setDrawsBackground:'>
<arg type='B' index='0'/>
</method>
<method selector='setWantsNotificationForMarkedText:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSTextFinder'>
<method selector='findIndicatorNeedsUpdate'>
<retval type='B'/>
</method>
<method selector='incrementalSearchingShouldDimContentView'>
<retval type='B'/>
</method>
<method selector='isIncrementalSearchingEnabled'>
<retval type='B'/>
</method>
<method selector='setFindIndicatorNeedsUpdate:'>
<arg type='B' index='0'/>
</method>
<method selector='setIncrementalSearchingEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setIncrementalSearchingShouldDimContentView:'>
<arg type='B' index='0'/>
</method>
<method selector='validateAction:'>
<retval type='B'/>
</method>
</class>
<class name='NSTextInputContext'>
<method selector='acceptsGlyphInfo'>
<retval type='B'/>
</method>
<method selector='handleEvent:'>
<retval type='B'/>
</method>
<method selector='setAcceptsGlyphInfo:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSTextStorage'>
<method selector='fixesAttributesLazily'>
<retval type='B'/>
</method>
</class>
<class name='NSTextTable'>
<method selector='collapsesBorders'>
<retval type='B'/>
</method>
<method selector='hidesEmptyCells'>
<retval type='B'/>
</method>
<method selector='setCollapsesBorders:'>
<arg type='B' index='0'/>
</method>
<method selector='setHidesEmptyCells:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSTextView'>
<method selector='acceptsGlyphInfo'>
<retval type='B'/>
</method>
<method selector='allowsDocumentBackgroundColorChange'>
<retval type='B'/>
</method>
<method selector='allowsImageEditing'>
<retval type='B'/>
</method>
<method selector='allowsUndo'>
<retval type='B'/>
</method>
<method selector='completionsForPartialWordRange:indexOfSelectedItem:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='displaysLinkToolTips'>
<retval type='B'/>
</method>
<method selector='dragSelectionWithEvent:offset:slideBack:'>
<arg type='B' index='2'/>
<retval type='B'/>
</method>
<method selector='drawInsertionPointInRect:color:turnedOn:'>
<arg type='B' index='2'/>
</method>
<method selector='drawsBackground'>
<retval type='B'/>
</method>
<method selector='importsGraphics'>
<retval type='B'/>
</method>
<method selector='insertCompletion:forPartialWordRange:movement:isFinal:'>
<arg type='B' index='3'/>
</method>
<method selector='isAutomaticDashSubstitutionEnabled'>
<retval type='B'/>
</method>
<method selector='isAutomaticDataDetectionEnabled'>
<retval type='B'/>
</method>
<method selector='isAutomaticLinkDetectionEnabled'>
<retval type='B'/>
</method>
<method selector='isAutomaticQuoteSubstitutionEnabled'>
<retval type='B'/>
</method>
<method selector='isAutomaticSpellingCorrectionEnabled'>
<retval type='B'/>
</method>
<method selector='isAutomaticTextReplacementEnabled'>
<retval type='B'/>
</method>
<method selector='isCoalescingUndo'>
<retval type='B'/>
</method>
<method selector='isContinuousSpellCheckingEnabled'>
<retval type='B'/>
</method>
<method selector='isEditable'>
<retval type='B'/>
</method>
<method selector='isFieldEditor'>
<retval type='B'/>
</method>
<method selector='isGrammarCheckingEnabled'>
<retval type='B'/>
</method>
<method selector='isIncrementalSearchingEnabled'>
<retval type='B'/>
</method>
<method selector='isRichText'>
<retval type='B'/>
</method>
<method selector='isRulerVisible'>
<retval type='B'/>
</method>
<method selector='isSelectable'>
<retval type='B'/>
</method>
<method selector='readSelectionFromPasteboard:'>
<retval type='B'/>
</method>
<method selector='readSelectionFromPasteboard:type:'>
<retval type='B'/>
</method>
<method selector='rulerView:shouldAddMarker:'>
<retval type='B'/>
</method>
<method selector='rulerView:shouldMoveMarker:'>
<retval type='B'/>
</method>
<method selector='rulerView:shouldRemoveMarker:'>
<retval type='B'/>
</method>
<method selector='setAcceptsGlyphInfo:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsDocumentBackgroundColorChange:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsImageEditing:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsUndo:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutomaticDashSubstitutionEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutomaticDataDetectionEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutomaticLinkDetectionEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutomaticQuoteSubstitutionEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutomaticSpellingCorrectionEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutomaticTextReplacementEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setContinuousSpellCheckingEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setDisplaysLinkToolTips:'>
<arg type='B' index='0'/>
</method>
<method selector='setDrawsBackground:'>
<arg type='B' index='0'/>
</method>
<method selector='setEditable:'>
<arg type='B' index='0'/>
</method>
<method selector='setFieldEditor:'>
<arg type='B' index='0'/>
</method>
<method selector='setGrammarCheckingEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setImportsGraphics:'>
<arg type='B' index='0'/>
</method>
<method selector='setIncrementalSearchingEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setNeedsDisplayInRect:avoidAdditionalLayout:'>
<arg type='B' index='1'/>
</method>
<method selector='setRichText:'>
<arg type='B' index='0'/>
</method>
<method selector='setRulerVisible:'>
<arg type='B' index='0'/>
</method>
<method selector='setSelectable:'>
<arg type='B' index='0'/>
</method>
<method selector='setSelectedRange:affinity:stillSelecting:'>
<arg type='B' index='2'/>
</method>
<method selector='setSelectedRanges:affinity:stillSelecting:'>
<arg type='B' index='2'/>
</method>
<method selector='setSmartInsertDeleteEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesFindBar:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesFindPanel:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesFontPanel:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesInspectorBar:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesRuler:'>
<arg type='B' index='0'/>
</method>
<method selector='shouldChangeTextInRange:replacementString:'>
<retval type='B'/>
</method>
<method selector='shouldChangeTextInRanges:replacementStrings:'>
<retval type='B'/>
</method>
<method selector='shouldDrawInsertionPoint'>
<retval type='B'/>
</method>
<method selector='smartInsertDeleteEnabled'>
<retval type='B'/>
</method>
<method selector='smartInsertForString:replacingRange:beforeString:afterString:'>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
</method>
<method selector='updateInsertionPointStateAndRestartTimer:'>
<arg type='B' index='0'/>
</method>
<method selector='usesFindBar'>
<retval type='B'/>
</method>
<method selector='usesFindPanel'>
<retval type='B'/>
</method>
<method selector='usesFontPanel'>
<retval type='B'/>
</method>
<method selector='usesInspectorBar'>
<retval type='B'/>
</method>
<method selector='usesRuler'>
<retval type='B'/>
</method>
<method selector='writeSelectionToPasteboard:type:'>
<retval type='B'/>
</method>
<method selector='writeSelectionToPasteboard:types:'>
<retval type='B'/>
</method>
</class>
<class name='NSToolbar'>
<method selector='allowsUserCustomization'>
<retval type='B'/>
</method>
<method selector='autosavesConfiguration'>
<retval type='B'/>
</method>
<method selector='customizationPaletteIsRunning'>
<retval type='B'/>
</method>
<method selector='isVisible'>
<retval type='B'/>
</method>
<method selector='setAllowsUserCustomization:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutosavesConfiguration:'>
<arg type='B' index='0'/>
</method>
<method selector='setShowsBaselineSeparator:'>
<arg type='B' index='0'/>
</method>
<method selector='setVisible:'>
<arg type='B' index='0'/>
</method>
<method selector='showsBaselineSeparator'>
<retval type='B'/>
</method>
</class>
<class name='NSToolbarItem'>
<method selector='allowsDuplicatesInToolbar'>
<retval type='B'/>
</method>
<method selector='autovalidates'>
<retval type='B'/>
</method>
<method selector='isEnabled'>
<retval type='B'/>
</method>
<method selector='setAction:'>
<arg sel_of_type='v12@0:4@8' index='0' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='setAutovalidates:'>
<arg type='B' index='0'/>
</method>
<method selector='setEnabled:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSTouch'>
<method selector='isResting'>
<retval type='B'/>
</method>
</class>
<class name='NSTreeController'>
<method selector='addSelectionIndexPaths:'>
<retval type='B'/>
</method>
<method selector='alwaysUsesMultipleValuesMarker'>
<retval type='B'/>
</method>
<method selector='avoidsEmptySelection'>
<retval type='B'/>
</method>
<method selector='canAddChild'>
<retval type='B'/>
</method>
<method selector='canInsert'>
<retval type='B'/>
</method>
<method selector='canInsertChild'>
<retval type='B'/>
</method>
<method selector='preservesSelection'>
<retval type='B'/>
</method>
<method selector='removeSelectionIndexPaths:'>
<retval type='B'/>
</method>
<method selector='selectsInsertedObjects'>
<retval type='B'/>
</method>
<method selector='setAlwaysUsesMultipleValuesMarker:'>
<arg type='B' index='0'/>
</method>
<method selector='setAvoidsEmptySelection:'>
<arg type='B' index='0'/>
</method>
<method selector='setPreservesSelection:'>
<arg type='B' index='0'/>
</method>
<method selector='setSelectionIndexPath:'>
<retval type='B'/>
</method>
<method selector='setSelectionIndexPaths:'>
<retval type='B'/>
</method>
<method selector='setSelectsInsertedObjects:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSTreeNode'>
<method selector='isLeaf'>
<retval type='B'/>
</method>
<method selector='sortWithSortDescriptors:recursively:'>
<arg type='B' index='1'/>
</method>
</class>
<class name='NSTypesetter'>
<method selector='bidiProcessingEnabled'>
<retval type='B'/>
</method>
<method ignore='true' selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'>
<arg type='^B' index='4'/>
</method>
<method selector='layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:'>
<arg index='3' type_modifier='o'/>
</method>
<method selector='printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:' class_method='true'>
<arg c_array_length_in_arg='3' index='2' type_modifier='n'/>
</method>
<method ignore='true' selector='setBidiLevels:forGlyphRange:'/>
<method selector='setBidiProcessingEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setDrawsOutsideLineFragment:forGlyphRange:'>
<arg type='B' index='0'/>
</method>
<method selector='setHardInvalidation:forGlyphRange:'>
<arg type='B' index='0'/>
</method>
<method ignore='true' selector='setLocation:withAdvancements:forStartOfGlyphRange:'/>
<method selector='setNotShownAttribute:forGlyphRange:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesFontLeading:'>
<arg type='B' index='0'/>
</method>
<method selector='shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
<retval type='B'/>
</method>
<method selector='shouldBreakLineByWordBeforeCharacterAtIndex:'>
<retval type='B'/>
</method>
<method ignore='true' selector='substituteGlyphsInRange:withGlyphs:'/>
<method selector='usesFontLeading'>
<retval type='B'/>
</method>
<method selector='willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
<arg index='0' type_modifier='n'/>
<arg index='2' type_modifier='n'/>
<arg index='3' type_modifier='o'/>
</method>
</class>
<class name='NSUserDefaultsController'>
<method selector='appliesImmediately'>
<retval type='B'/>
</method>
<method selector='hasUnappliedChanges'>
<retval type='B'/>
</method>
<method selector='setAppliesImmediately:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSView'>
<method selector='acceptsFirstMouse:'>
<retval type='B'/>
</method>
<method selector='acceptsTouchEvents'>
<retval type='B'/>
</method>
<method selector='addToolTipRect:owner:userData:'>
<arg index='2' type_modifier='n'/>
</method>
<method selector='addTrackingRect:owner:userData:assumeInside:'>
<arg index='2' type_modifier='n'/>
<arg type='B' index='3'/>
</method>
<method selector='adjustPageHeightNew:top:bottom:limit:'>
<arg index='0' type_modifier='o'/>
</method>
<method selector='adjustPageWidthNew:left:right:limit:'>
<arg index='0' type_modifier='o'/>
</method>
<method selector='alignmentRectInsets'>
<retval type64='{_NSEdgeInsets=dddd}' type='{_NSEdgeInsets=ffff}'/>
</method>
<method selector='autoresizesSubviews'>
<retval type='B'/>
</method>
<method selector='autoscroll:'>
<retval type='B'/>
</method>
<method selector='canBecomeKeyView'>
<retval type='B'/>
</method>
<method selector='canDraw'>
<retval type='B'/>
</method>
<method selector='canDrawConcurrently'>
<retval type='B'/>
</method>
<method selector='dragFile:fromRect:slideBack:event:'>
<arg type='B' index='2'/>
<retval type='B'/>
</method>
<method selector='dragImage:at:offset:event:pasteboard:source:slideBack:'>
<arg type='B' index='6'/>
</method>
<method selector='dragPromisedFilesOfTypes:fromRect:source:slideBack:event:'>
<arg type='B' index='3'/>
<retval type='B'/>
</method>
<method selector='enterFullScreenMode:withOptions:'>
<retval type='B'/>
</method>
<method selector='getRectsBeingDrawn:count:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
</method>
<method selector='getRectsExposedDuringLiveResize:count:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
</method>
<method selector='hasAmbiguousLayout'>
<retval type='B'/>
</method>
<method selector='inLiveResize'>
<retval type='B'/>
</method>
<method selector='isDescendantOf:'>
<retval type='B'/>
</method>
<method selector='isDrawingFindIndicator'>
<retval type='B'/>
</method>
<method selector='isFlipped'>
<retval type='B'/>
</method>
<method selector='isHidden'>
<retval type='B'/>
</method>
<method selector='isHiddenOrHasHiddenAncestor'>
<retval type='B'/>
</method>
<method selector='isInFullScreenMode'>
<retval type='B'/>
</method>
<method selector='isOpaque'>
<retval type='B'/>
</method>
<method selector='isRotatedFromBase'>
<retval type='B'/>
</method>
<method selector='isRotatedOrScaledFromBase'>
<retval type='B'/>
</method>
<method selector='knowsPageRange:'>
<retval type='B'/>
</method>
<method selector='lockFocusIfCanDraw'>
<retval type='B'/>
</method>
<method selector='lockFocusIfCanDrawInContext:'>
<retval type='B'/>
</method>
<method selector='mouse:inRect:'>
<retval type='B'/>
</method>
<method selector='mouseDownCanMoveWindow'>
<retval type='B'/>
</method>
<method selector='needsDisplay'>
<retval type='B'/>
</method>
<method selector='needsLayout'>
<retval type='B'/>
</method>
<method selector='needsPanelToBecomeKey'>
<retval type='B'/>
</method>
<method selector='needsToDrawRect:'>
<retval type='B'/>
</method>
<method selector='needsUpdateConstraints'>
<retval type='B'/>
</method>
<method selector='performKeyEquivalent:'>
<retval type='B'/>
</method>
<method selector='performMnemonic:'>
<retval type='B'/>
</method>
<method selector='postsBoundsChangedNotifications'>
<retval type='B'/>
</method>
<method selector='postsFrameChangedNotifications'>
<retval type='B'/>
</method>
<method selector='preservesContentDuringLiveResize'>
<retval type='B'/>
</method>
<method selector='requiresConstraintBasedLayout' class_method='true'>
<retval type='B'/>
</method>
<method selector='rulerView:shouldAddMarker:'>
<retval type='B'/>
</method>
<method selector='rulerView:shouldMoveMarker:'>
<retval type='B'/>
</method>
<method selector='rulerView:shouldRemoveMarker:'>
<retval type='B'/>
</method>
<method selector='scrollRectToVisible:'>
<retval type='B'/>
</method>
<method selector='setAcceptsTouchEvents:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutoresizesSubviews:'>
<arg type='B' index='0'/>
</method>
<method selector='setCanDrawConcurrently:'>
<arg type='B' index='0'/>
</method>
<method selector='setHidden:'>
<arg type='B' index='0'/>
</method>
<method selector='setNeedsDisplay:'>
<arg type='B' index='0'/>
</method>
<method selector='setNeedsLayout:'>
<arg type='B' index='0'/>
</method>
<method selector='setNeedsUpdateConstraints:'>
<arg type='B' index='0'/>
</method>
<method selector='setPostsBoundsChangedNotifications:'>
<arg type='B' index='0'/>
</method>
<method selector='setPostsFrameChangedNotifications:'>
<arg type='B' index='0'/>
</method>
<method selector='setTranslatesAutoresizingMaskIntoConstraints:'>
<arg type='B' index='0'/>
</method>
<method selector='setWantsBestResolutionOpenGLSurface:'>
<arg type='B' index='0'/>
</method>
<method selector='setWantsLayer:'>
<arg type='B' index='0'/>
</method>
<method selector='setWantsRestingTouches:'>
<arg type='B' index='0'/>
</method>
<method selector='shouldDelayWindowOrderingForEvent:'>
<retval type='B'/>
</method>
<method selector='shouldDrawColor'>
<retval type='B'/>
</method>
<method selector='showDefinitionForAttributedString:range:options:baselineOriginProvider:'>
<arg function_pointer='true' type='@?' index='3'>
<arg type64='{_NSRange=QQ}' type='{_NSRange=II}'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}'/>
</arg>
</method>
<method selector='sortSubviewsUsingFunction:context:'>
<arg function_pointer='true' type='^?' index='0' type_modifier='n'>
<arg type='@'/>
<arg type='@'/>
<arg type='^v'/>
<retval type64='q' type='i'/>
</arg>
<arg index='1' type_modifier='n'/>
</method>
<method selector='translatesAutoresizingMaskIntoConstraints'>
<retval type='B'/>
</method>
<method selector='wantsBestResolutionOpenGLSurface'>
<retval type='B'/>
</method>
<method selector='wantsDefaultClipping'>
<retval type='B'/>
</method>
<method selector='wantsLayer'>
<retval type='B'/>
</method>
<method selector='wantsRestingTouches'>
<retval type='B'/>
</method>
</class>
<class name='NSViewController'>
<method selector='commitEditing'>
<retval type='B'/>
</method>
<method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
<arg sel_of_type='v20@0:4@8B12^v16' index='1' sel_of_type64='v36@0:8@16B24^v28'/>
<arg index='2' type_modifier='n'/>
</method>
</class>
<class name='NSWindow'>
<method selector='acceptsMouseMovedEvents'>
<retval type='B'/>
</method>
<method selector='allowsConcurrentViewDrawing'>
<retval type='B'/>
</method>
<method selector='allowsToolTipsWhenApplicationIsInactive'>
<retval type='B'/>
</method>
<method selector='areCursorRectsEnabled'>
<retval type='B'/>
</method>
<method selector='autorecalculatesContentBorderThicknessForEdge:'>
<retval type='B'/>
</method>
<method selector='autorecalculatesKeyViewLoop'>
<retval type='B'/>
</method>
<method selector='canBeVisibleOnAllSpaces'>
<retval type='B'/>
</method>
<method selector='canBecomeKeyWindow'>
<retval type='B'/>
</method>
<method selector='canBecomeMainWindow'>
<retval type='B'/>
</method>
<method selector='canBecomeVisibleWithoutLogin'>
<retval type='B'/>
</method>
<method selector='canHide'>
<retval type='B'/>
</method>
<method selector='canStoreColor'>
<retval type='B'/>
</method>
<method selector='displaysWhenScreenProfileChanges'>
<retval type='B'/>
</method>
<method selector='dragImage:at:offset:event:pasteboard:source:slideBack:'>
<arg type='B' index='6'/>
</method>
<method selector='fieldEditor:forObject:'>
<arg type='B' index='0'/>
</method>
<method selector='hasCloseBox'>
<retval type='B'/>
</method>
<method selector='hasDynamicDepthLimit'>
<retval type='B'/>
</method>
<method selector='hasShadow'>
<retval type='B'/>
</method>
<method selector='hasTitleBar'>
<retval type='B'/>
</method>
<method selector='hidesOnDeactivate'>
<retval type='B'/>
</method>
<method selector='ignoresMouseEvents'>
<retval type='B'/>
</method>
<method selector='inLiveResize'>
<retval type='B'/>
</method>
<method selector='initWithContentRect:styleMask:backing:defer:'>
<arg type='B' index='3'/>
</method>
<method selector='initWithContentRect:styleMask:backing:defer:screen:'>
<arg type='B' index='3'/>
</method>
<method selector='initWithWindowRef:'>
<arg type='^{OpaqueWindowPtr=}' index='0'/>
</method>
<method selector='isAutodisplay'>
<retval type='B'/>
</method>
<method selector='isDocumentEdited'>
<retval type='B'/>
</method>
<method selector='isExcludedFromWindowsMenu'>
<retval type='B'/>
</method>
<method selector='isFloatingPanel'>
<retval type='B'/>
</method>
<method selector='isFlushWindowDisabled'>
<retval type='B'/>
</method>
<method selector='isKeyWindow'>
<retval type='B'/>
</method>
<method selector='isMainWindow'>
<retval type='B'/>
</method>
<method selector='isMiniaturizable'>
<retval type='B'/>
</method>
<method selector='isMiniaturized'>
<retval type='B'/>
</method>
<method selector='isModalPanel'>
<retval type='B'/>
</method>
<method selector='isMovable'>
<retval type='B'/>
</method>
<method selector='isMovableByWindowBackground'>
<retval type='B'/>
</method>
<method selector='isOnActiveSpace'>
<retval type='B'/>
</method>
<method selector='isOneShot'>
<retval type='B'/>
</method>
<method selector='isOpaque'>
<retval type='B'/>
</method>
<method selector='isReleasedWhenClosed'>
<retval type='B'/>
</method>
<method selector='isResizable'>
<retval type='B'/>
</method>
<method selector='isRestorable'>
<retval type='B'/>
</method>
<method selector='isSheet'>
<retval type='B'/>
</method>
<method selector='isVisible'>
<retval type='B'/>
</method>
<method selector='isZoomable'>
<retval type='B'/>
</method>
<method selector='isZoomed'>
<retval type='B'/>
</method>
<method selector='makeFirstResponder:'>
<retval type='B'/>
</method>
<method selector='nextEventMatchingMask:untilDate:inMode:dequeue:'>
<arg type='B' index='3'/>
</method>
<method selector='postEvent:atStart:'>
<arg type='B' index='1'/>
</method>
<method selector='preservesContentDuringLiveResize'>
<retval type='B'/>
</method>
<method selector='preventsApplicationTerminationWhenModal'>
<retval type='B'/>
</method>
<method selector='setAcceptsMouseMovedEvents:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsConcurrentViewDrawing:'>
<arg type='B' index='0'/>
</method>
<method selector='setAllowsToolTipsWhenApplicationIsInactive:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutodisplay:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutorecalculatesContentBorderThickness:forEdge:'>
<arg type='B' index='0'/>
</method>
<method selector='setAutorecalculatesKeyViewLoop:'>
<arg type='B' index='0'/>
</method>
<method selector='setCanBeVisibleOnAllSpaces:'>
<arg type='B' index='0'/>
</method>
<method selector='setCanBecomeVisibleWithoutLogin:'>
<arg type='B' index='0'/>
</method>
<method selector='setCanHide:'>
<arg type='B' index='0'/>
</method>
<method selector='setDisplaysWhenScreenProfileChanges:'>
<arg type='B' index='0'/>
</method>
<method selector='setDocumentEdited:'>
<arg type='B' index='0'/>
</method>
<method selector='setDynamicDepthLimit:'>
<arg type='B' index='0'/>
</method>
<method selector='setExcludedFromWindowsMenu:'>
<arg type='B' index='0'/>
</method>
<method selector='setFrame:display:'>
<arg type='B' index='1'/>
</method>
<method selector='setFrame:display:animate:'>
<arg type='B' index='1'/>
<arg type='B' index='2'/>
</method>
<method selector='setFrameAutosaveName:'>
<retval type='B'/>
</method>
<method selector='setFrameUsingName:'>
<retval type='B'/>
</method>
<method selector='setFrameUsingName:force:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
<method selector='setHasShadow:'>
<arg type='B' index='0'/>
</method>
<method selector='setHidesOnDeactivate:'>
<arg type='B' index='0'/>
</method>
<method selector='setIgnoresMouseEvents:'>
<arg type='B' index='0'/>
</method>
<method selector='setIsMiniaturized:'>
<arg type='B' index='0'/>
</method>
<method selector='setIsVisible:'>
<arg type='B' index='0'/>
</method>
<method selector='setIsZoomed:'>
<arg type='B' index='0'/>
</method>
<method selector='setMovable:'>
<arg type='B' index='0'/>
</method>
<method selector='setMovableByWindowBackground:'>
<arg type='B' index='0'/>
</method>
<method selector='setOneShot:'>
<arg type='B' index='0'/>
</method>
<method selector='setOpaque:'>
<arg type='B' index='0'/>
</method>
<method selector='setPreservesContentDuringLiveResize:'>
<arg type='B' index='0'/>
</method>
<method selector='setPreventsApplicationTerminationWhenModal:'>
<arg type='B' index='0'/>
</method>
<method selector='setReleasedWhenClosed:'>
<arg type='B' index='0'/>
</method>
<method selector='setRestorable:'>
<arg type='B' index='0'/>
</method>
<method selector='setShowsResizeIndicator:'>
<arg type='B' index='0'/>
</method>
<method selector='setShowsToolbarButton:'>
<arg type='B' index='0'/>
</method>
<method selector='setViewsNeedDisplay:'>
<arg type='B' index='0'/>
</method>
<method selector='showsResizeIndicator'>
<retval type='B'/>
</method>
<method selector='showsToolbarButton'>
<retval type='B'/>
</method>
<method selector='tryToPerform:with:'>
<retval type='B'/>
</method>
<method selector='useOptimizedDrawing:'>
<arg type='B' index='0'/>
</method>
<method selector='viewsNeedDisplay'>
<retval type='B'/>
</method>
<method selector='windowRef'>
<retval type='^{OpaqueWindowPtr=}'/>
</method>
<method selector='worksWhenModal'>
<retval type='B'/>
</method>
</class>
<class name='NSWindowController'>
<method selector='isWindowLoaded'>
<retval type='B'/>
</method>
<method selector='setDocumentEdited:'>
<arg type='B' index='0'/>
</method>
<method selector='setShouldCascadeWindows:'>
<arg type='B' index='0'/>
</method>
<method selector='setShouldCloseDocument:'>
<arg type='B' index='0'/>
</method>
<method selector='shouldCascadeWindows'>
<retval type='B'/>
</method>
<method selector='shouldCloseDocument'>
<retval type='B'/>
</method>
</class>
<class name='NSWorkspace'>
<method selector='duplicateURLs:completionHandler:'>
<arg function_pointer='true' type='@?' index='1'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='fileSystemChanged'>
<retval type='B'/>
</method>
<method selector='filenameExtension:isValidForType:'>
<retval type='B'/>
</method>
<method selector='getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:'>
<arg type='^B' index='1' type_modifier='o'/>
<arg type='^B' index='2' type_modifier='o'/>
<arg type='^B' index='3' type_modifier='o'/>
<arg index='4' type_modifier='o'/>
<arg index='5' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='getInfoForFile:application:type:'>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='isFilePackageAtPath:'>
<retval type='B'/>
</method>
<method selector='launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:'>
<arg index='3' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='launchApplication:'>
<retval type='B'/>
</method>
<method selector='launchApplication:showIcon:autolaunch:'>
<arg type='B' index='1'/>
<arg type='B' index='2'/>
<retval type='B'/>
</method>
<method selector='openFile:'>
<retval type='B'/>
</method>
<method selector='openFile:fromImage:at:inView:'>
<retval type='B'/>
</method>
<method selector='openFile:withApplication:'>
<retval type='B'/>
</method>
<method selector='openFile:withApplication:andDeactivate:'>
<arg type='B' index='2'/>
<retval type='B'/>
</method>
<method selector='openTempFile:'>
<retval type='B'/>
</method>
<method selector='openURL:'>
<retval type='B'/>
</method>
<method selector='openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:'>
<arg index='4' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='performFileOperation:source:destination:files:tag:'>
<arg index='4' type_modifier='o'/>
<retval type='B'/>
</method>
<method selector='recycleURLs:completionHandler:'>
<arg function_pointer='true' type='@?' index='1'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='selectFile:inFileViewerRootedAtPath:'>
<retval type='B'/>
</method>
<method selector='setDesktopImageURL:forScreen:options:error:'>
<retval type='B'/>
</method>
<method selector='setIcon:forFile:options:'>
<retval type='B'/>
</method>
<method selector='showSearchResultsForQueryString:'>
<retval type='B'/>
</method>
<method selector='type:conformsToType:'>
<retval type='B'/>
</method>
<method selector='typeOfFile:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='unmountAndEjectDeviceAtPath:'>
<retval type='B'/>
</method>
<method selector='unmountAndEjectDeviceAtURL:error:'>
<retval type='B'/>
</method>
<method selector='userDefaultsChanged'>
<retval type='B'/>
</method>
</class>
<informal_protocol name='NSAccessibility'>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='accessibilityActionDescription:'/>
<method type64='@16@0:8' type='@8@0:4' selector='accessibilityActionNames'/>
<method type64='Q24@0:8@16' type='I12@0:4@8' selector='accessibilityArrayAttributeCount:'/>
<method type64='@40@0:8@16Q24Q32' type='@20@0:4@8I12I16' selector='accessibilityArrayAttributeValues:index:maxCount:'/>
<method type64='@16@0:8' type='@8@0:4' selector='accessibilityAttributeNames'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='accessibilityAttributeValue:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='accessibilityAttributeValue:forParameter:'/>
<method type64='@16@0:8' type='@8@0:4' selector='accessibilityFocusedUIElement'/>
<method type64='@32@0:8{CGPoint=dd}16' type='@16@0:4{_NSPoint=ff}8' selector='accessibilityHitTest:'/>
<method type64='Q24@0:8@16' type='I12@0:4@8' selector='accessibilityIndexOfChild:'/>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='accessibilityIsAttributeSettable:'/>
<method type64='B16@0:8' type='B8@0:4' selector='accessibilityIsIgnored'/>
<method type64='@16@0:8' type='@8@0:4' selector='accessibilityParameterizedAttributeNames'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='accessibilityPerformAction:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='accessibilitySetValue:forAttribute:'/>
</informal_protocol>
<informal_protocol name='NSAccessibilityAdditions'>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='accessibilitySetOverrideValue:forAttribute:'/>
</informal_protocol>
<informal_protocol name='NSAlertDelegate'>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='alertShowHelp:'/>
</informal_protocol>
<informal_protocol name='NSAnimatablePropertyContainer'>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='animationForKey:'/>
<method type64='@16@0:8' type='@8@0:4' selector='animations'/>
<method type64='@16@0:8' type='@8@0:4' selector='animator'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='defaultAnimationForKey:' class_method='true'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='setAnimations:'/>
</informal_protocol>
<informal_protocol name='NSAnimationDelegate'>
<method type64='v28@0:8@16f24' type='v16@0:4@8f12' selector='animation:didReachProgressMark:'/>
<method type64='f28@0:8@16f24' type='f16@0:4@8f12' selector='animation:valueForProgress:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='animationDidEnd:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='animationDidStop:'/>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='animationShouldStart:'/>
</informal_protocol>
<informal_protocol name='NSApplicationDelegate'>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='application:didDecodeRestorableState:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='application:didFailToRegisterForRemoteNotificationsWithError:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='application:didReceiveRemoteNotification:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='application:didRegisterForRemoteNotificationsWithDeviceToken:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='application:openFile:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='application:openFileWithoutUI:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='application:openFiles:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='application:openTempFile:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='application:printFile:'/>
<method type64='Q44@0:8@16@24@32B40' type='I24@0:4@8@12@16B20' selector='application:printFiles:withSettings:showPrintPanels:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='application:willEncodeRestorableState:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='application:willPresentError:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='applicationDidBecomeActive:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='applicationDidChangeScreenParameters:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='applicationDidFinishLaunching:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='applicationDidHide:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='applicationDidResignActive:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='applicationDidUnhide:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='applicationDidUpdate:'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='applicationDockMenu:'/>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='applicationOpenUntitledFile:'/>
<method type64='B28@0:8@16B24' type='B16@0:4@8B12' selector='applicationShouldHandleReopen:hasVisibleWindows:'/>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='applicationShouldOpenUntitledFile:'/>
<method type64='Q24@0:8@16' type='I12@0:4@8' selector='applicationShouldTerminate:'/>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='applicationShouldTerminateAfterLastWindowClosed:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='applicationWillBecomeActive:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='applicationWillFinishLaunching:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='applicationWillHide:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='applicationWillResignActive:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='applicationWillTerminate:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='applicationWillUnhide:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='applicationWillUpdate:'/>
</informal_protocol>
<informal_protocol name='NSApplicationScriptingDelegation'>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='application:delegateHandlesKey:'/>
</informal_protocol>
<informal_protocol name='NSBrowserDelegate'>
<method type64='B56@0:8@16@24q32q40Q48' type='B28@0:4@8@12i16i20I24' selector='browser:acceptDrop:atRow:column:dropOperation:'/>
<method type64='B48@0:8@16@24q32@40' type='B24@0:4@8@12i16@20' selector='browser:canDragRowsWithIndexes:inColumn:withEvent:'/>
<method type64='@40@0:8@16q24@32' type='@20@0:4@8i12@16' selector='browser:child:ofItem:'/>
<method type64='v40@0:8@16q24@32' type='v20@0:4@8i12@16' selector='browser:createRowsForColumn:inMatrix:'/>
<method type64='v40@0:8@16q24q32' type='v20@0:4@8i12i16' selector='browser:didChangeLastColumn:toColumn:'/>
<method type64='@56@0:8@16@24q32@40^{CGPoint=dd}48' type='@28@0:4@8@12i16@20^{_NSPoint=ff}24' selector='browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='browser:headerViewControllerForItem:'/>
<method type64='d40@0:8@16q24q32' type='f20@0:4@8i12i16' selector='browser:heightOfRow:inColumn:'/>
<method type64='B32@0:8@16q24' type='B16@0:4@8i12' selector='browser:isColumnValid:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='browser:isLeafItem:'/>
<method type64='@48@0:8@16@24@32q40' type='@24@0:4@8@12@16i20' selector='browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:'/>
<method type64='q56@0:8@16q24q32q40@48' type='i28@0:4@8i12i16i20@24' selector='browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:'/>
<method type64='q32@0:8@16@24' type='i16@0:4@8@12' selector='browser:numberOfChildrenOfItem:'/>
<method type64='q32@0:8@16q24' type='i16@0:4@8i12' selector='browser:numberOfRowsInColumn:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='browser:objectValueForItem:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='browser:previewViewControllerForLeafItem:'/>
<method type64='B40@0:8@16@24q32' type='B20@0:4@8@12i16' selector='browser:selectCellWithString:inColumn:'/>
<method type64='B40@0:8@16q24q32' type='B20@0:4@8i12i16' selector='browser:selectRow:inColumn:'/>
<method type64='@40@0:8@16@24q32' type='@20@0:4@8@12i16' selector='browser:selectionIndexesForProposedSelection:inColumn:'/>
<method type64='v40@0:8@16@24@32' type='v20@0:4@8@12@16' selector='browser:setObjectValue:forItem:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='browser:shouldEditItem:'/>
<method type64='B40@0:8@16q24q32' type='B20@0:4@8i12i16' selector='browser:shouldShowCellExpansionForRow:column:'/>
<method type64='d44@0:8@16q24B32d36' type='f24@0:4@8i12B16f20' selector='browser:shouldSizeColumn:forUserResize:toWidth:'/>
<method type64='B40@0:8@16@24@32' type='B20@0:4@8@12@16' selector='browser:shouldTypeSelectForEvent:withCurrentSearchString:'/>
<method type64='d32@0:8@16q24' type='f16@0:4@8i12' selector='browser:sizeToFitWidthOfColumn:'/>
<method type64='@32@0:8@16q24' type='@16@0:4@8i12' selector='browser:titleOfColumn:'/>
<method type64='@40@0:8@16q24q32' type='@20@0:4@8i12i16' selector='browser:typeSelectStringForRow:inColumn:'/>
<method type64='Q56@0:8@16@24^q32^q40^Q48' type='I28@0:4@8@12^i16^i20^I24' selector='browser:validateDrop:proposedRow:column:dropOperation:'/>
<method type64='v48@0:8@16@24q32q40' type='v24@0:4@8@12i16i20' selector='browser:willDisplayCell:atRow:column:'/>
<method type64='B48@0:8@16@24q32@40' type='B24@0:4@8@12i16@20' selector='browser:writeRowsWithIndexes:inColumn:toPasteboard:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='browserColumnConfigurationDidChange:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='browserDidScroll:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='browserWillScroll:'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='rootItemForBrowser:'/>
</informal_protocol>
<informal_protocol name='NSChangeSpelling'>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='changeSpelling:'/>
</informal_protocol>
<informal_protocol name='NSCollectionViewDelegate'>
<method type64='B48@0:8@16@24q32q40' type='B24@0:4@8@12i16i20' selector='collectionView:acceptDrop:index:dropOperation:'/>
<method type64='B40@0:8@16@24@32' type='B20@0:4@8@12@16' selector='collectionView:canDragItemsAtIndexes:withEvent:'/>
<method type64='@48@0:8@16@24@32^{CGPoint=dd}40' type='@24@0:4@8@12@16^{_NSPoint=ff}20' selector='collectionView:draggingImageForItemsAtIndexes:withEvent:offset:'/>
<method type64='v56@0:8@16@24{CGPoint=dd}32Q48' type='v28@0:4@8@12{_NSPoint=ff}16I24' selector='collectionView:draggingSession:endedAtPoint:dragOperation:'/>
<method type64='v56@0:8@16@24{CGPoint=dd}32@48' type='v28@0:4@8@12{_NSPoint=ff}16@24' selector='collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:'/>
<method type64='@40@0:8@16@24@32' type='@20@0:4@8@12@16' selector='collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:'/>
<method type64='@32@0:8@16Q24' type='@16@0:4@8I12' selector='collectionView:pasteboardWriterForItemAtIndex:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='collectionView:updateDraggingItemsForDrag:'/>
<method type64='Q48@0:8@16@24^q32^q40' type='I24@0:4@8@12^i16^i20' selector='collectionView:validateDrop:proposedIndex:dropOperation:'/>
<method type64='B40@0:8@16@24@32' type='B20@0:4@8@12@16' selector='collectionView:writeItemsAtIndexes:toPasteboard:'/>
</informal_protocol>
<informal_protocol name='NSColorPanelResponderMethod'>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='changeColor:'/>
</informal_protocol>
<informal_protocol name='NSColorPickingCustom'>
<method type64='q16@0:8' type='i8@0:4' selector='currentMode'/>
<method type64='@20@0:8B16' type='@12@0:4B8' selector='provideNewView:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='setColor:'/>
<method type64='B24@0:8q16' type='B12@0:4i8' selector='supportsMode:'/>
</informal_protocol>
<informal_protocol name='NSColorPickingDefault'>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='alphaControlAddedOrRemoved:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='attachColorList:'/>
<method type64='@16@0:8' type='@8@0:4' selector='buttonToolTip'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='detachColorList:'/>
<method type64='@32@0:8Q16@24' type='@16@0:4I8@12' selector='initWithPickerMask:colorPanel:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='insertNewButtonImage:in:'/>
<method type64='{CGSize=dd}16@0:8' type='{_NSSize=ff}8@0:4' selector='minContentSize'/>
<method type64='@16@0:8' type='@8@0:4' selector='provideNewButtonImage'/>
<method type64='v24@0:8q16' type='v12@0:4i8' selector='setMode:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='viewSizeChanged:'/>
</informal_protocol>
<informal_protocol name='NSComboBoxCellDataSource'>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='comboBoxCell:completedString:'/>
<method type64='Q32@0:8@16@24' type='I16@0:4@8@12' selector='comboBoxCell:indexOfItemWithStringValue:'/>
<method type64='@32@0:8@16q24' type='@16@0:4@8i12' selector='comboBoxCell:objectValueForItemAtIndex:'/>
<method type64='q24@0:8@16' type='i12@0:4@8' selector='numberOfItemsInComboBoxCell:'/>
</informal_protocol>
<informal_protocol name='NSComboBoxDataSource'>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='comboBox:completedString:'/>
<method type64='Q32@0:8@16@24' type='I16@0:4@8@12' selector='comboBox:indexOfItemWithStringValue:'/>
<method type64='@32@0:8@16q24' type='@16@0:4@8i12' selector='comboBox:objectValueForItemAtIndex:'/>
<method type64='q24@0:8@16' type='i12@0:4@8' selector='numberOfItemsInComboBox:'/>
</informal_protocol>
<informal_protocol name='NSComboBoxDelegate'>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='comboBoxSelectionDidChange:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='comboBoxSelectionIsChanging:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='comboBoxWillDismiss:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='comboBoxWillPopUp:'/>
</informal_protocol>
<informal_protocol name='NSControlSubclassNotifications'>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='controlTextDidBeginEditing:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='controlTextDidChange:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='controlTextDidEndEditing:'/>
</informal_protocol>
<informal_protocol name='NSControlTextEditingDelegate'>
<method type64='B40@0:8@16@24@32' type='B20@0:4@8@12@16' selector='control:didFailToFormatString:errorDescription:'/>
<method type64='v40@0:8@16@24@32' type='v20@0:4@8@12@16' selector='control:didFailToValidatePartialString:errorDescription:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='control:isValidObject:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='control:textShouldBeginEditing:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='control:textShouldEndEditing:'/>
<method type64='@64@0:8@16@24@32{_NSRange=QQ}40^q56' type='@32@0:4@8@12@16{_NSRange=II}20^i28' selector='control:textView:completions:forPartialWordRange:indexOfSelectedItem:'/>
<method type64='B40@0:8@16@24:32' type='B20@0:4@8@12:16' selector='control:textView:doCommandBySelector:'/>
</informal_protocol>
<informal_protocol name='NSDatePickerCellDelegate'>
<method type64='v40@0:8@16^@24^d32' type='v20@0:4@8^@12^d16' selector='datePickerCell:validateProposedDateValue:timeInterval:'/>
</informal_protocol>
<informal_protocol name='NSDictionaryControllerKeyValuePair'>
<method type64='B16@0:8' type='B8@0:4' selector='isExplicitlyIncluded'/>
<method type64='@16@0:8' type='@8@0:4' selector='key'/>
<method type64='@16@0:8' type='@8@0:4' selector='localizedKey'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='setKey:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='setLocalizedKey:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='setValue:'/>
<method type64='@16@0:8' type='@8@0:4' selector='value'/>
</informal_protocol>
<informal_protocol name='NSDockTilePlugIn'>
<method type64='@16@0:8' type='@8@0:4' selector='dockMenu'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='setDockTile:'/>
</informal_protocol>
<informal_protocol name='NSDraggingDestination'>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='concludeDragOperation:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='draggingEnded:'/>
<method type64='Q24@0:8@16' type='I12@0:4@8' selector='draggingEntered:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='draggingExited:'/>
<method type64='Q24@0:8@16' type='I12@0:4@8' selector='draggingUpdated:'/>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='performDragOperation:'/>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='prepareForDragOperation:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='updateDraggingItemsForDrag:'/>
<method type64='B16@0:8' type='B8@0:4' selector='wantsPeriodicDraggingUpdates'/>
</informal_protocol>
<informal_protocol name='NSDraggingInfo'>
<method type64='B16@0:8' type='B8@0:4' selector='animatesToDestination'/>
<method type64='@16@0:8' type='@8@0:4' selector='draggedImage'/>
<method type64='{CGPoint=dd}16@0:8' type='{_NSPoint=ff}8@0:4' selector='draggedImageLocation'/>
<method type64='@16@0:8' type='@8@0:4' selector='draggingDestinationWindow'/>
<method type64='q16@0:8' type='i8@0:4' selector='draggingFormation'/>
<method type64='{CGPoint=dd}16@0:8' type='{_NSPoint=ff}8@0:4' selector='draggingLocation'/>
<method type64='@16@0:8' type='@8@0:4' selector='draggingPasteboard'/>
<method type64='q16@0:8' type='i8@0:4' selector='draggingSequenceNumber'/>
<method type64='@16@0:8' type='@8@0:4' selector='draggingSource'/>
<method type64='Q16@0:8' type='I8@0:4' selector='draggingSourceOperationMask'/>
<method type64='v56@0:8Q16@24@32@40@?48' type='v28@0:4I8@12@16@20@?24' selector='enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='namesOfPromisedFilesDroppedAtDestination:'/>
<method type64='q16@0:8' type='i8@0:4' selector='numberOfValidItemsForDrop'/>
<method type64='v20@0:8B16' type='v12@0:4B8' selector='setAnimatesToDestination:'/>
<method type64='v24@0:8q16' type='v12@0:4i8' selector='setDraggingFormation:'/>
<method type64='v24@0:8q16' type='v12@0:4i8' selector='setNumberOfValidItemsForDrop:'/>
<method type64='v32@0:8{CGPoint=dd}16' type='v16@0:4{_NSPoint=ff}8' selector='slideDraggedImageTo:'/>
</informal_protocol>
<informal_protocol name='NSDraggingSource'>
<method type64='v48@0:8@16{CGPoint=dd}24Q40' type='v24@0:4@8{_NSPoint=ff}12I20' selector='draggingSession:endedAtPoint:operation:'/>
<method type64='v40@0:8@16{CGPoint=dd}24' type='v20@0:4@8{_NSPoint=ff}12' selector='draggingSession:movedToPoint:'/>
<method type64='Q32@0:8@16q24' type='I16@0:4@8i12' selector='draggingSession:sourceOperationMaskForDraggingContext:'/>
<method type64='v40@0:8@16{CGPoint=dd}24' type='v20@0:4@8{_NSPoint=ff}12' selector='draggingSession:willBeginAtPoint:'/>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='ignoreModifierKeysForDraggingSession:'/>
</informal_protocol>
<informal_protocol name='NSDraggingSourceDeprecated'>
<method type64='v40@0:8@16{CGPoint=dd}24' type='v20@0:4@8{_NSPoint=ff}12' selector='draggedImage:beganAt:'/>
<method type64='v44@0:8@16{CGPoint=dd}24B40' type='v24@0:4@8{_NSPoint=ff}12B20' selector='draggedImage:endedAt:deposited:'/>
<method type64='v48@0:8@16{CGPoint=dd}24Q40' type='v24@0:4@8{_NSPoint=ff}12I20' selector='draggedImage:endedAt:operation:'/>
<method type64='v40@0:8@16{CGPoint=dd}24' type='v20@0:4@8{_NSPoint=ff}12' selector='draggedImage:movedTo:'/>
<method type64='Q20@0:8B16' type='I12@0:4B8' selector='draggingSourceOperationMaskForLocal:'/>
<method type64='B16@0:8' type='B8@0:4' selector='ignoreModifierKeysWhileDragging'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='namesOfPromisedFilesDroppedAtDestination:'/>
</informal_protocol>
<informal_protocol name='NSDrawerDelegate'>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='drawerDidClose:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='drawerDidOpen:'/>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='drawerShouldClose:'/>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='drawerShouldOpen:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='drawerWillClose:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='drawerWillOpen:'/>
<method type64='{CGSize=dd}40@0:8@16{CGSize=dd}24' type='{_NSSize=ff}20@0:4@8{_NSSize=ff}12' selector='drawerWillResizeContents:toSize:'/>
</informal_protocol>
<informal_protocol name='NSEditor'>
<method type64='B16@0:8' type='B8@0:4' selector='commitEditing'/>
<method type64='B24@0:8^@16' type='B12@0:4^@8' selector='commitEditingAndReturnError:'/>
<method type64='v40@0:8@16:24^v32' type='v20@0:4@8:12^v16' selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'/>
<method type64='v16@0:8' type='v8@0:4' selector='discardEditing'/>
</informal_protocol>
<informal_protocol name='NSEditorRegistration'>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='objectDidBeginEditing:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='objectDidEndEditing:'/>
</informal_protocol>
<informal_protocol name='NSFontManagerDelegate'>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='fontManager:willIncludeFont:'/>
</informal_protocol>
<informal_protocol name='NSFontManagerResponderMethod'>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='changeFont:'/>
</informal_protocol>
<informal_protocol name='NSFontPanelValidationAdditions'>
<method type64='Q24@0:8@16' type='I12@0:4@8' selector='validModesForFontPanel:'/>
</informal_protocol>
<informal_protocol name='NSGlyphStorage'>
<method type64='@16@0:8' type='@8@0:4' selector='attributedString'/>
<method type64='v48@0:8r^I16Q24Q32Q40' type='v24@0:4r^I8I12I16I20' selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'/>
<method type64='Q16@0:8' type='I8@0:4' selector='layoutOptions'/>
<method type64='v40@0:8q16q24Q32' type='v20@0:4i8i12I16' selector='setIntAttribute:value:forGlyphAtIndex:'/>
</informal_protocol>
<informal_protocol name='NSIgnoreMisspelledWords'>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='ignoreSpelling:'/>
</informal_protocol>
<informal_protocol name='NSImageDelegate'>
<method type64='v40@0:8@16@24q32' type='v20@0:4@8@12i16' selector='image:didLoadPartOfRepresentation:withValidRows:'/>
<method type64='v40@0:8@16@24Q32' type='v20@0:4@8@12I16' selector='image:didLoadRepresentation:withStatus:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='image:didLoadRepresentationHeader:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='image:willLoadRepresentation:'/>
<method type64='@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24' type='@28@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12' selector='imageDidNotDraw:inRect:'/>
</informal_protocol>
<informal_protocol name='NSInputServerMouseTracker'>
<method type64='B56@0:8Q16{CGPoint=dd}24Q40@48' type='B28@0:4I8{_NSPoint=ff}12I20@24' selector='mouseDownOnCharacterIndex:atCoordinate:withModifier:client:'/>
<method type64='B56@0:8Q16{CGPoint=dd}24Q40@48' type='B28@0:4I8{_NSPoint=ff}12I20@24' selector='mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:'/>
<method type64='v56@0:8Q16{CGPoint=dd}24Q40@48' type='v28@0:4I8{_NSPoint=ff}12I20@24' selector='mouseUpOnCharacterIndex:atCoordinate:withModifier:client:'/>
</informal_protocol>
<informal_protocol name='NSInputServiceProvider'>
<method type64='v32@0:8@16q24' type='v16@0:4@8i12' selector='activeConversationChanged:toNewConversation:'/>
<method type64='v32@0:8@16q24' type='v16@0:4@8i12' selector='activeConversationWillChange:fromOldConversation:'/>
<method type64='B16@0:8' type='B8@0:4' selector='canBeDisabled'/>
<method type64='v32@0:8:16@24' type='v16@0:4:8@12' selector='doCommandBySelector:client:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='inputClientBecomeActive:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='inputClientDisabled:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='inputClientEnabled:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='inputClientResignActive:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='insertText:client:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='markedTextAbandoned:'/>
<method type64='v40@0:8{_NSRange=QQ}16@32' type='v20@0:4{_NSRange=II}8@16' selector='markedTextSelectionChanged:client:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='terminate:'/>
<method type64='B16@0:8' type='B8@0:4' selector='wantsToDelayTextChangeNotifications'/>
<method type64='B16@0:8' type='B8@0:4' selector='wantsToHandleMouseEvents'/>
<method type64='B16@0:8' type='B8@0:4' selector='wantsToInterpretAllKeystrokes'/>
</informal_protocol>
<informal_protocol name='NSKeyValueBindingCreation'>
<method type64='v48@0:8@16@24@32@40' type='v24@0:4@8@12@16@20' selector='bind:toObject:withKeyPath:options:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='exposeBinding:' class_method='true'/>
<method type64='@16@0:8' type='@8@0:4' selector='exposedBindings'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='infoForBinding:'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='optionDescriptionsForBinding:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='unbind:'/>
<method type64='#24@0:8@16' type='#12@0:4@8' selector='valueClassForBinding:'/>
</informal_protocol>
<informal_protocol name='NSLayoutManagerDelegate'>
<method type64='v36@0:8@16@24B32' type='v20@0:4@8@12B16' selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:'/>
<method type64='@52@0:8@16@24B32Q36^{_NSRange=QQ}44' type='@28@0:4@8@12B16I20^{_NSRange=II}24' selector='layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='layoutManagerDidInvalidateLayout:'/>
</informal_protocol>
<informal_protocol name='NSMenuDelegate'>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4@8@12' selector='confinementRectForMenu:onScreen:'/>
<method type64='B44@0:8@16@24q32B40' type='B24@0:4@8@12i16B20' selector='menu:updateItem:atIndex:shouldCancel:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='menu:willHighlightItem:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='menuDidClose:'/>
<method type64='B48@0:8@16@24^@32^:40' type='B24@0:4@8@12^@16^:20' selector='menuHasKeyEquivalent:forEvent:target:action:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='menuNeedsUpdate:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='menuWillOpen:'/>
<method type64='q24@0:8@16' type='i12@0:4@8' selector='numberOfItemsInMenu:'/>
</informal_protocol>
<informal_protocol name='NSMenuValidation'>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='validateMenuItem:'/>
</informal_protocol>
<informal_protocol name='NSNibAwaking'>
<method type64='v16@0:8' type='v8@0:4' selector='awakeFromNib'/>
</informal_protocol>
<informal_protocol name='NSOpenSavePanelDelegate'>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='panel:didChangeToDirectoryURL:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='panel:shouldEnableURL:'/>
<method type64='@36@0:8@16@24B32' type='@20@0:4@8@12B16' selector='panel:userEnteredFilename:confirmed:'/>
<method type64='B40@0:8@16@24^@32' type='B20@0:4@8@12^@16' selector='panel:validateURL:error:'/>
<method type64='v28@0:8@16B24' type='v16@0:4@8B12' selector='panel:willExpand:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='panelSelectionDidChange:'/>
</informal_protocol>
<informal_protocol name='NSOutlineViewDataSource'>
<method type64='B48@0:8@16@24@32q40' type='B24@0:4@8@12@16i20' selector='outlineView:acceptDrop:item:childIndex:'/>
<method type64='@40@0:8@16q24@32' type='@20@0:4@8i12@16' selector='outlineView:child:ofItem:'/>
<method type64='v56@0:8@16@24{CGPoint=dd}32Q48' type='v28@0:4@8@12{_NSPoint=ff}16I24' selector='outlineView:draggingSession:endedAtPoint:operation:'/>
<method type64='v56@0:8@16@24{CGPoint=dd}32@48' type='v28@0:4@8@12{_NSPoint=ff}16@24' selector='outlineView:draggingSession:willBeginAtPoint:forItems:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='outlineView:isItemExpandable:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='outlineView:itemForPersistentObject:'/>
<method type64='@40@0:8@16@24@32' type='@20@0:4@8@12@16' selector='outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:'/>
<method type64='q32@0:8@16@24' type='i16@0:4@8@12' selector='outlineView:numberOfChildrenOfItem:'/>
<method type64='@40@0:8@16@24@32' type='@20@0:4@8@12@16' selector='outlineView:objectValueForTableColumn:byItem:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='outlineView:pasteboardWriterForItem:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='outlineView:persistentObjectForItem:'/>
<method type64='v48@0:8@16@24@32@40' type='v24@0:4@8@12@16@20' selector='outlineView:setObjectValue:forTableColumn:byItem:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='outlineView:sortDescriptorsDidChange:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='outlineView:updateDraggingItemsForDrag:'/>
<method type64='Q48@0:8@16@24@32q40' type='I24@0:4@8@12@16i20' selector='outlineView:validateDrop:proposedItem:proposedChildIndex:'/>
<method type64='B40@0:8@16@24@32' type='B20@0:4@8@12@16' selector='outlineView:writeItems:toPasteboard:'/>
</informal_protocol>
<informal_protocol name='NSOutlineViewDelegate'>
<method type64='@40@0:8@16@24@32' type='@20@0:4@8@12@16' selector='outlineView:dataCellForTableColumn:item:'/>
<method type64='v40@0:8@16@24q32' type='v20@0:4@8@12i16' selector='outlineView:didAddRowView:forRow:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='outlineView:didClickTableColumn:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='outlineView:didDragTableColumn:'/>
<method type64='v40@0:8@16@24q32' type='v20@0:4@8@12i16' selector='outlineView:didRemoveRowView:forRow:'/>
<method type64='d32@0:8@16@24' type='f16@0:4@8@12' selector='outlineView:heightOfRowByItem:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='outlineView:isGroupItem:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='outlineView:mouseDownInHeaderOfTableColumn:'/>
<method type64='@48@0:8@16@24@32@40' type='@24@0:4@8@12@16@20' selector='outlineView:nextTypeSelectMatchFromItem:toItem:forString:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='outlineView:rowViewForItem:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='outlineView:selectionIndexesForProposedSelection:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='outlineView:shouldCollapseItem:'/>
<method type64='B40@0:8@16@24@32' type='B20@0:4@8@12@16' selector='outlineView:shouldEditTableColumn:item:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='outlineView:shouldExpandItem:'/>
<method type64='B40@0:8@16q24q32' type='B20@0:4@8i12i16' selector='outlineView:shouldReorderColumn:toColumn:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='outlineView:shouldSelectItem:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='outlineView:shouldSelectTableColumn:'/>
<method type64='B40@0:8@16@24@32' type='B20@0:4@8@12@16' selector='outlineView:shouldShowCellExpansionForTableColumn:item:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='outlineView:shouldShowOutlineCellForItem:'/>
<method type64='B48@0:8@16@24@32@40' type='B24@0:4@8@12@16@20' selector='outlineView:shouldTrackCell:forTableColumn:item:'/>
<method type64='B40@0:8@16@24@32' type='B20@0:4@8@12@16' selector='outlineView:shouldTypeSelectForEvent:withCurrentSearchString:'/>
<method type64='d32@0:8@16q24' type='f16@0:4@8i12' selector='outlineView:sizeToFitWidthOfColumn:'/>
<method type64='@72@0:8@16@24^{CGRect={CGPoint=dd}{CGSize=dd}}32@40@48{CGPoint=dd}56' type='@36@0:4@8@12^{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@20@24{_NSPoint=ff}28' selector='outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:'/>
<method type64='@40@0:8@16@24@32' type='@20@0:4@8@12@16' selector='outlineView:typeSelectStringForTableColumn:item:'/>
<method type64='@40@0:8@16@24@32' type='@20@0:4@8@12@16' selector='outlineView:viewForTableColumn:item:'/>
<method type64='v48@0:8@16@24@32@40' type='v24@0:4@8@12@16@20' selector='outlineView:willDisplayCell:forTableColumn:item:'/>
<method type64='v48@0:8@16@24@32@40' type='v24@0:4@8@12@16@20' selector='outlineView:willDisplayOutlineCell:forTableColumn:item:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='outlineViewColumnDidMove:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='outlineViewColumnDidResize:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='outlineViewItemDidCollapse:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='outlineViewItemDidExpand:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='outlineViewItemWillCollapse:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='outlineViewItemWillExpand:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='outlineViewSelectionDidChange:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='outlineViewSelectionIsChanging:'/>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='selectionShouldChangeInOutlineView:'/>
</informal_protocol>
<informal_protocol name='NSPasteboardItemDataProvider'>
<method type64='v40@0:8@16@24@32' type='v20@0:4@8@12@16' selector='pasteboard:item:provideDataForType:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='pasteboardFinishedWithDataProvider:'/>
</informal_protocol>
<informal_protocol name='NSPasteboardOwner'>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='pasteboard:provideDataForType:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='pasteboardChangedOwner:'/>
</informal_protocol>
<informal_protocol name='NSPasteboardReading'>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='initWithPasteboardPropertyList:ofType:'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='readableTypesForPasteboard:' class_method='true'/>
<method type64='Q32@0:8@16@24' type='I16@0:4@8@12' selector='readingOptionsForType:pasteboard:' class_method='true'/>
</informal_protocol>
<informal_protocol name='NSPasteboardWriting'>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='pasteboardPropertyListForType:'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='writableTypesForPasteboard:'/>
<method type64='Q32@0:8@16@24' type='I16@0:4@8@12' selector='writingOptionsForType:pasteboard:'/>
</informal_protocol>
<informal_protocol name='NSPathCellDelegate'>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='pathCell:willDisplayOpenPanel:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='pathCell:willPopUpMenu:'/>
</informal_protocol>
<informal_protocol name='NSPathControlDelegate'>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='pathControl:acceptDrop:'/>
<method type64='B40@0:8@16@24@32' type='B20@0:4@8@12@16' selector='pathControl:shouldDragPathComponentCell:withPasteboard:'/>
<method type64='Q32@0:8@16@24' type='I16@0:4@8@12' selector='pathControl:validateDrop:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='pathControl:willDisplayOpenPanel:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='pathControl:willPopUpMenu:'/>
</informal_protocol>
<informal_protocol name='NSPlaceholders'>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='defaultPlaceholderForMarker:withBinding:' class_method='true'/>
<method type64='v40@0:8@16@24@32' type='v20@0:4@8@12@16' selector='setDefaultPlaceholder:forMarker:withBinding:' class_method='true'/>
</informal_protocol>
<informal_protocol name='NSPopoverDelegate'>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='detachableWindowForPopover:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='popoverDidClose:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='popoverDidShow:'/>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='popoverShouldClose:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='popoverWillClose:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='popoverWillShow:'/>
</informal_protocol>
<informal_protocol name='NSPrintPanelAccessorizing'>
<method type64='@16@0:8' type='@8@0:4' selector='keyPathsForValuesAffectingPreview'/>
<method type64='@16@0:8' type='@8@0:4' selector='localizedSummaryItems'/>
</informal_protocol>
<informal_protocol name='NSRuleEditorDelegate'>
<method type64='@48@0:8@16q24@32Q40' type='@24@0:4@8i12@16I20' selector='ruleEditor:child:forCriterion:withRowType:'/>
<method type64='@40@0:8@16@24q32' type='@20@0:4@8@12i16' selector='ruleEditor:displayValueForCriterion:inRow:'/>
<method type64='q40@0:8@16@24Q32' type='i20@0:4@8@12I16' selector='ruleEditor:numberOfChildrenForCriterion:withRowType:'/>
<method type64='@48@0:8@16@24@32q40' type='@24@0:4@8@12@16i20' selector='ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='ruleEditorRowsDidChange:'/>
</informal_protocol>
<informal_protocol name='NSSavePanelDelegateDeprecated'>
<method type64='q44@0:8@16@24@32B40' type='i24@0:4@8@12@16B20' selector='panel:compareFilename:with:caseSensitive:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='panel:directoryDidChange:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='panel:isValidFilename:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='panel:shouldShowFilename:'/>
</informal_protocol>
<informal_protocol name='NSServicesRequests'>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='readSelectionFromPasteboard:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='writeSelectionToPasteboard:types:'/>
</informal_protocol>
<informal_protocol name='NSSoundDelegate'>
<method type64='v28@0:8@16B24' type='v16@0:4@8B12' selector='sound:didFinishPlaying:'/>
</informal_protocol>
<informal_protocol name='NSSpeechRecognizerDelegate'>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='speechRecognizer:didRecognizeCommand:'/>
</informal_protocol>
<informal_protocol name='NSSpeechSynthesizerDelegate'>
<method type64='v48@0:8@16Q24@32@40' type='v24@0:4@8I12@16@20' selector='speechSynthesizer:didEncounterErrorAtIndex:ofString:message:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='speechSynthesizer:didEncounterSyncMessage:'/>
<method type64='v28@0:8@16B24' type='v16@0:4@8B12' selector='speechSynthesizer:didFinishSpeaking:'/>
<method type64='v28@0:8@16s24' type='v16@0:4@8s12' selector='speechSynthesizer:willSpeakPhoneme:'/>
<method type64='v48@0:8@16{_NSRange=QQ}24@40' type='v24@0:4@8{_NSRange=II}12@20' selector='speechSynthesizer:willSpeakWord:ofString:'/>
</informal_protocol>
<informal_protocol name='NSSplitViewDelegate'>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16q24' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4@8i12' selector='splitView:additionalEffectiveRectOfDividerAtIndex:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='splitView:canCollapseSubview:'/>
<method type64='d40@0:8@16d24q32' type='f20@0:4@8f12i16' selector='splitView:constrainMaxCoordinate:ofSubviewAt:'/>
<method type64='d40@0:8@16d24q32' type='f20@0:4@8f12i16' selector='splitView:constrainMinCoordinate:ofSubviewAt:'/>
<method type64='d40@0:8@16d24q32' type='f20@0:4@8f12i16' selector='splitView:constrainSplitPosition:ofSubviewAt:'/>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}96@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56q88' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}48@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12{_NSRect={_NSPoint=ff}{_NSSize=ff}}28i44' selector='splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:'/>
<method type64='v40@0:8@16{CGSize=dd}24' type='v20@0:4@8{_NSSize=ff}12' selector='splitView:resizeSubviewsWithOldSize:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='splitView:shouldAdjustSizeOfSubview:'/>
<method type64='B40@0:8@16@24q32' type='B20@0:4@8@12i16' selector='splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:'/>
<method type64='B32@0:8@16q24' type='B16@0:4@8i12' selector='splitView:shouldHideDividerAtIndex:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='splitViewDidResizeSubviews:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='splitViewWillResizeSubviews:'/>
</informal_protocol>
<informal_protocol name='NSTabViewDelegate'>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='tabView:didSelectTabViewItem:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='tabView:shouldSelectTabViewItem:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='tabView:willSelectTabViewItem:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='tabViewDidChangeNumberOfTabViewItems:'/>
</informal_protocol>
<informal_protocol name='NSTableViewDataSource'>
<method type64='q24@0:8@16' type='i12@0:4@8' selector='numberOfRowsInTableView:'/>
<method type64='B48@0:8@16@24q32Q40' type='B24@0:4@8@12i16I20' selector='tableView:acceptDrop:row:dropOperation:'/>
<method type64='v56@0:8@16@24{CGPoint=dd}32Q48' type='v28@0:4@8@12{_NSPoint=ff}16I24' selector='tableView:draggingSession:endedAtPoint:operation:'/>
<method type64='v56@0:8@16@24{CGPoint=dd}32@48' type='v28@0:4@8@12{_NSPoint=ff}16@24' selector='tableView:draggingSession:willBeginAtPoint:forRowIndexes:'/>
<method type64='@40@0:8@16@24@32' type='@20@0:4@8@12@16' selector='tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:'/>
<method type64='@40@0:8@16@24q32' type='@20@0:4@8@12i16' selector='tableView:objectValueForTableColumn:row:'/>
<method type64='@32@0:8@16q24' type='@16@0:4@8i12' selector='tableView:pasteboardWriterForRow:'/>
<method type64='v48@0:8@16@24@32q40' type='v24@0:4@8@12@16i20' selector='tableView:setObjectValue:forTableColumn:row:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='tableView:sortDescriptorsDidChange:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='tableView:updateDraggingItemsForDrag:'/>
<method type64='Q48@0:8@16@24q32Q40' type='I24@0:4@8@12i16I20' selector='tableView:validateDrop:proposedRow:proposedDropOperation:'/>
<method type64='B40@0:8@16@24@32' type='B20@0:4@8@12@16' selector='tableView:writeRowsWithIndexes:toPasteboard:'/>
</informal_protocol>
<informal_protocol name='NSTableViewDataSourceDeprecated'>
<method type64='B40@0:8@16@24@32' type='B20@0:4@8@12@16' selector='tableView:writeRows:toPasteboard:'/>
</informal_protocol>
<informal_protocol name='NSTableViewDelegate'>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='selectionShouldChangeInTableView:'/>
<method type64='@40@0:8@16@24q32' type='@20@0:4@8@12i16' selector='tableView:dataCellForTableColumn:row:'/>
<method type64='v40@0:8@16@24q32' type='v20@0:4@8@12i16' selector='tableView:didAddRowView:forRow:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='tableView:didClickTableColumn:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='tableView:didDragTableColumn:'/>
<method type64='v40@0:8@16@24q32' type='v20@0:4@8@12i16' selector='tableView:didRemoveRowView:forRow:'/>
<method type64='d32@0:8@16q24' type='f16@0:4@8i12' selector='tableView:heightOfRow:'/>
<method type64='B32@0:8@16q24' type='B16@0:4@8i12' selector='tableView:isGroupRow:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='tableView:mouseDownInHeaderOfTableColumn:'/>
<method type64='q48@0:8@16q24q32@40' type='i24@0:4@8i12i16@20' selector='tableView:nextTypeSelectMatchFromRow:toRow:forString:'/>
<method type64='@32@0:8@16q24' type='@16@0:4@8i12' selector='tableView:rowViewForRow:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='tableView:selectionIndexesForProposedSelection:'/>
<method type64='B40@0:8@16@24q32' type='B20@0:4@8@12i16' selector='tableView:shouldEditTableColumn:row:'/>
<method type64='B40@0:8@16q24q32' type='B20@0:4@8i12i16' selector='tableView:shouldReorderColumn:toColumn:'/>
<method type64='B32@0:8@16q24' type='B16@0:4@8i12' selector='tableView:shouldSelectRow:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='tableView:shouldSelectTableColumn:'/>
<method type64='B40@0:8@16@24q32' type='B20@0:4@8@12i16' selector='tableView:shouldShowCellExpansionForTableColumn:row:'/>
<method type64='B48@0:8@16@24@32q40' type='B24@0:4@8@12@16i20' selector='tableView:shouldTrackCell:forTableColumn:row:'/>
<method type64='B40@0:8@16@24@32' type='B20@0:4@8@12@16' selector='tableView:shouldTypeSelectForEvent:withCurrentSearchString:'/>
<method type64='d32@0:8@16q24' type='f16@0:4@8i12' selector='tableView:sizeToFitWidthOfColumn:'/>
<method type64='@72@0:8@16@24^{CGRect={CGPoint=dd}{CGSize=dd}}32@40q48{CGPoint=dd}56' type='@36@0:4@8@12^{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@20i24{_NSPoint=ff}28' selector='tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:'/>
<method type64='@40@0:8@16@24q32' type='@20@0:4@8@12i16' selector='tableView:typeSelectStringForTableColumn:row:'/>
<method type64='@40@0:8@16@24q32' type='@20@0:4@8@12i16' selector='tableView:viewForTableColumn:row:'/>
<method type64='v48@0:8@16@24@32q40' type='v24@0:4@8@12@16i20' selector='tableView:willDisplayCell:forTableColumn:row:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='tableViewColumnDidMove:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='tableViewColumnDidResize:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='tableViewSelectionDidChange:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='tableViewSelectionIsChanging:'/>
</informal_protocol>
<informal_protocol name='NSTextAttachmentCell'>
<method type64='@16@0:8' type='@8@0:4' selector='attachment'/>
<method type64='{CGPoint=dd}16@0:8' type='{_NSPoint=ff}8@0:4' selector='cellBaselineOffset'/>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGPoint=dd}56Q72' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}40@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12{_NSPoint=ff}28I36' selector='cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:'/>
<method type64='{CGSize=dd}16@0:8' type='{_NSSize=ff}8@0:4' selector='cellSize'/>
<method type64='v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48' type='v28@0:4{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@24' selector='drawWithFrame:inView:'/>
<method type64='v64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48Q56' type='v32@0:4{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@24I28' selector='drawWithFrame:inView:characterIndex:'/>
<method type64='v72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48Q56@64' type='v36@0:4{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@24I28@32' selector='drawWithFrame:inView:characterIndex:layoutManager:'/>
<method type64='v60@0:8B16{CGRect={CGPoint=dd}{CGSize=dd}}20@52' type='v32@0:4B8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28' selector='highlight:withFrame:inView:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='setAttachment:'/>
<method type64='B76@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56Q64B72' type='B40@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28I32B36' selector='trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:'/>
<method type64='B68@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56B64' type='B36@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28B32' selector='trackMouse:inRect:ofView:untilMouseUp:'/>
<method type64='B16@0:8' type='B8@0:4' selector='wantsToTrackMouse'/>
<method type64='B72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56Q64' type='B36@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28I32' selector='wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:'/>
</informal_protocol>
<informal_protocol name='NSTextDelegate'>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='textDidBeginEditing:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='textDidChange:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='textDidEndEditing:'/>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='textShouldBeginEditing:'/>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='textShouldEndEditing:'/>
</informal_protocol>
<informal_protocol name='NSTextFinderBarContainer'>
<method type64='@16@0:8' type='@8@0:4' selector='contentView'/>
<method type64='@16@0:8' type='@8@0:4' selector='findBarView'/>
<method type64='v16@0:8' type='v8@0:4' selector='findBarViewDidChangeHeight'/>
<method type64='B16@0:8' type='B8@0:4' selector='isFindBarVisible'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='setFindBarView:'/>
<method type64='v20@0:8B16' type='v12@0:4B8' selector='setFindBarVisible:'/>
</informal_protocol>
<informal_protocol name='NSTextFinderClient'>
<method type64='B16@0:8' type='B8@0:4' selector='allowsMultipleSelection'/>
<method type64='@32@0:8Q16^{_NSRange=QQ}24' type='@16@0:4I8^{_NSRange=II}12' selector='contentViewAtIndex:effectiveCharacterRange:'/>
<method type64='v16@0:8' type='v8@0:4' selector='didReplaceCharacters'/>
<method type64='v40@0:8{_NSRange=QQ}16@32' type='v20@0:4{_NSRange=II}8@16' selector='drawCharactersInRange:forContentView:'/>
<method type64='{_NSRange=QQ}16@0:8' type='{_NSRange=II}8@0:4' selector='firstSelectedRange'/>
<method type64='B16@0:8' type='B8@0:4' selector='isEditable'/>
<method type64='B16@0:8' type='B8@0:4' selector='isSelectable'/>
<method type64='@32@0:8{_NSRange=QQ}16' type='@16@0:4{_NSRange=II}8' selector='rectsForCharacterRange:'/>
<method type64='v40@0:8{_NSRange=QQ}16@32' type='v20@0:4{_NSRange=II}8@16' selector='replaceCharactersInRange:withString:'/>
<method type64='v32@0:8{_NSRange=QQ}16' type='v16@0:4{_NSRange=II}8' selector='scrollRangeToVisible:'/>
<method type64='@16@0:8' type='@8@0:4' selector='selectedRanges'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='setSelectedRanges:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='shouldReplaceCharactersInRanges:withStrings:'/>
<method type64='@16@0:8' type='@8@0:4' selector='string'/>
<method type64='@40@0:8Q16^{_NSRange=QQ}24^B32' type='@20@0:4I8^{_NSRange=II}12^B16' selector='stringAtIndex:effectiveRange:endsWithSearchBoundary:'/>
<method type64='Q16@0:8' type='I8@0:4' selector='stringLength'/>
<method type64='@16@0:8' type='@8@0:4' selector='visibleCharacterRanges'/>
</informal_protocol>
<informal_protocol name='NSTextInput'>
<method type64='@32@0:8{_NSRange=QQ}16' type='@16@0:4{_NSRange=II}8' selector='attributedSubstringFromRange:'/>
<method type64='Q32@0:8{CGPoint=dd}16' type='I16@0:4{_NSPoint=ff}8' selector='characterIndexForPoint:'/>
<method type64='q16@0:8' type='i8@0:4' selector='conversationIdentifier'/>
<method type64='v24@0:8:16' type='v12@0:4:8' selector='doCommandBySelector:'/>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{_NSRange=QQ}16' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4{_NSRange=II}8' selector='firstRectForCharacterRange:'/>
<method type64='B16@0:8' type='B8@0:4' selector='hasMarkedText'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='insertText:'/>
<method type64='{_NSRange=QQ}16@0:8' type='{_NSRange=II}8@0:4' selector='markedRange'/>
<method type64='{_NSRange=QQ}16@0:8' type='{_NSRange=II}8@0:4' selector='selectedRange'/>
<method type64='v40@0:8@16{_NSRange=QQ}24' type='v20@0:4@8{_NSRange=II}12' selector='setMarkedText:selectedRange:'/>
<method type64='v16@0:8' type='v8@0:4' selector='unmarkText'/>
<method type64='@16@0:8' type='@8@0:4' selector='validAttributesForMarkedText'/>
</informal_protocol>
<informal_protocol name='NSTextInputClient'>
<method type64='@16@0:8' type='@8@0:4' selector='attributedString'/>
<method type64='@40@0:8{_NSRange=QQ}16^{_NSRange=QQ}32' type='@20@0:4{_NSRange=II}8^{_NSRange=II}16' selector='attributedSubstringForProposedRange:actualRange:'/>
<method type64='d24@0:8Q16' type='f12@0:4I8' selector='baselineDeltaForCharacterAtIndex:'/>
<method type64='Q32@0:8{CGPoint=dd}16' type='I16@0:4{_NSPoint=ff}8' selector='characterIndexForPoint:'/>
<method type64='v24@0:8:16' type='v12@0:4:8' selector='doCommandBySelector:'/>
<method type64='B24@0:8Q16' type='B12@0:4I8' selector='drawsVerticallyForCharacterAtIndex:'/>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8{_NSRange=QQ}16^{_NSRange=QQ}32' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}20@0:4{_NSRange=II}8^{_NSRange=II}16' selector='firstRectForCharacterRange:actualRange:'/>
<method type64='d32@0:8{CGPoint=dd}16' type='f16@0:4{_NSPoint=ff}8' selector='fractionOfDistanceThroughGlyphForPoint:'/>
<method type64='B16@0:8' type='B8@0:4' selector='hasMarkedText'/>
<method type64='v40@0:8@16{_NSRange=QQ}24' type='v20@0:4@8{_NSRange=II}12' selector='insertText:replacementRange:'/>
<method type64='{_NSRange=QQ}16@0:8' type='{_NSRange=II}8@0:4' selector='markedRange'/>
<method type64='{_NSRange=QQ}16@0:8' type='{_NSRange=II}8@0:4' selector='selectedRange'/>
<method type64='v56@0:8@16{_NSRange=QQ}24{_NSRange=QQ}40' type='v28@0:4@8{_NSRange=II}12{_NSRange=II}20' selector='setMarkedText:selectedRange:replacementRange:'/>
<method type64='v16@0:8' type='v8@0:4' selector='unmarkText'/>
<method type64='@16@0:8' type='@8@0:4' selector='validAttributesForMarkedText'/>
<method type64='q16@0:8' type='i8@0:4' selector='windowLevel'/>
</informal_protocol>
<informal_protocol name='NSTextLayoutOrientationProvider'>
<method type64='q16@0:8' type='i8@0:4' selector='layoutOrientation'/>
</informal_protocol>
<informal_protocol name='NSTextStorageDelegate'>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='textStorageDidProcessEditing:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='textStorageWillProcessEditing:'/>
</informal_protocol>
<informal_protocol name='NSTextViewDelegate'>
<method type64='@40@0:8@16@24Q32' type='@20@0:4@8@12I16' selector='textView:URLForContentsOfTextAttachment:atIndex:'/>
<method type64='v64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32' type='v32@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16' selector='textView:clickedOnCell:inRect:'/>
<method type64='v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32Q64' type='v36@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16I32' selector='textView:clickedOnCell:inRect:atIndex:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='textView:clickedOnLink:'/>
<method type64='B40@0:8@16@24Q32' type='B20@0:4@8@12I16' selector='textView:clickedOnLink:atIndex:'/>
<method type64='@56@0:8@16@24{_NSRange=QQ}32^q48' type='@28@0:4@8@12{_NSRange=II}16^i24' selector='textView:completions:forPartialWordRange:indexOfSelectedItem:'/>
<method type64='@80@0:8@16{_NSRange=QQ}24Q40@48@56@64q72' type='@44@0:4@8{_NSRange=II}12Q20@28@32@36i40' selector='textView:didCheckTextInRange:types:options:results:orthography:wordCount:'/>
<method type64='B32@0:8@16:24' type='B16@0:4@8:12' selector='textView:doCommandBySelector:'/>
<method type64='v64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32' type='v32@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16' selector='textView:doubleClickedOnCell:inRect:'/>
<method type64='v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32Q64' type='v36@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16I32' selector='textView:doubleClickedOnCell:inRect:atIndex:'/>
<method type64='v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64' type='v36@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@32' selector='textView:draggedCell:inRect:event:'/>
<method type64='v80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64Q72' type='v40@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@32I36' selector='textView:draggedCell:inRect:event:atIndex:'/>
<method type64='@48@0:8@16@24@32Q40' type='@24@0:4@8@12@16I20' selector='textView:menu:forEvent:atIndex:'/>
<method type64='B48@0:8@16{_NSRange=QQ}24@40' type='B24@0:4@8{_NSRange=II}12@20' selector='textView:shouldChangeTextInRange:replacementString:'/>
<method type64='B40@0:8@16@24@32' type='B20@0:4@8@12@16' selector='textView:shouldChangeTextInRanges:replacementStrings:'/>
<method type64='@40@0:8@16@24@32' type='@20@0:4@8@12@16' selector='textView:shouldChangeTypingAttributes:toAttributes:'/>
<method type64='q48@0:8@16q24{_NSRange=QQ}32' type='i24@0:4@8i12{_NSRange=II}16' selector='textView:shouldSetSpellingState:range:'/>
<method type64='{_NSRange=QQ}56@0:8@16{_NSRange=QQ}24{_NSRange=QQ}40' type='{_NSRange=II}28@0:4@8{_NSRange=II}12{_NSRange=II}20' selector='textView:willChangeSelectionFromCharacterRange:toCharacterRange:'/>
<method type64='@40@0:8@16@24@32' type='@20@0:4@8@12@16' selector='textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:'/>
<method type64='@56@0:8@16{_NSRange=QQ}24@40^Q48' type='@28@0:4@8{_NSRange=II}12@20^Q24' selector='textView:willCheckTextInRange:options:types:'/>
<method type64='@40@0:8@16@24Q32' type='@20@0:4@8@12I16' selector='textView:willDisplayToolTip:forCharacterAtIndex:'/>
<method type64='@40@0:8@16@24Q32' type='@20@0:4@8@12I16' selector='textView:writablePasteboardTypesForCell:atIndex:'/>
<method type64='B56@0:8@16@24Q32@40@48' type='B28@0:4@8@12I16@20@24' selector='textView:writeCell:atIndex:toPasteboard:type:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='textViewDidChangeSelection:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='textViewDidChangeTypingAttributes:'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='undoManagerForTextView:'/>
</informal_protocol>
<informal_protocol name='NSTokenFieldCellDelegate'>
<method type64='@48@0:8@16@24q32^q40' type='@24@0:4@8@12i16^i20' selector='tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='tokenFieldCell:displayStringForRepresentedObject:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='tokenFieldCell:editingStringForRepresentedObject:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='tokenFieldCell:hasMenuForRepresentedObject:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='tokenFieldCell:menuForRepresentedObject:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='tokenFieldCell:readFromPasteboard:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='tokenFieldCell:representedObjectForEditingString:'/>
<method type64='@40@0:8@16@24Q32' type='@20@0:4@8@12I16' selector='tokenFieldCell:shouldAddObjects:atIndex:'/>
<method type64='Q32@0:8@16@24' type='I16@0:4@8@12' selector='tokenFieldCell:styleForRepresentedObject:'/>
<method type64='B40@0:8@16@24@32' type='B20@0:4@8@12@16' selector='tokenFieldCell:writeRepresentedObjects:toPasteboard:'/>
</informal_protocol>
<informal_protocol name='NSTokenFieldDelegate'>
<method type64='@48@0:8@16@24q32^q40' type='@24@0:4@8@12i16^i20' selector='tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='tokenField:displayStringForRepresentedObject:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='tokenField:editingStringForRepresentedObject:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='tokenField:hasMenuForRepresentedObject:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='tokenField:menuForRepresentedObject:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='tokenField:readFromPasteboard:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='tokenField:representedObjectForEditingString:'/>
<method type64='@40@0:8@16@24Q32' type='@20@0:4@8@12I16' selector='tokenField:shouldAddObjects:atIndex:'/>
<method type64='Q32@0:8@16@24' type='I16@0:4@8@12' selector='tokenField:styleForRepresentedObject:'/>
<method type64='B40@0:8@16@24@32' type='B20@0:4@8@12@16' selector='tokenField:writeRepresentedObjects:toPasteboard:'/>
</informal_protocol>
<informal_protocol name='NSToolTipOwner'>
<method type64='@56@0:8@16q24{CGPoint=dd}32^v48' type='@28@0:4@8i12{_NSPoint=ff}16^v24' selector='view:stringForToolTip:point:userData:'/>
</informal_protocol>
<informal_protocol name='NSToolbarDelegate'>
<method type64='@36@0:8@16@24B32' type='@20@0:4@8@12B16' selector='toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='toolbarAllowedItemIdentifiers:'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='toolbarDefaultItemIdentifiers:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='toolbarDidRemoveItem:'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='toolbarSelectableItemIdentifiers:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='toolbarWillAddItem:'/>
</informal_protocol>
<informal_protocol name='NSToolbarItemValidation'>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='validateToolbarItem:'/>
</informal_protocol>
<informal_protocol name='NSUserInterfaceItemIdentification'>
<method type64='@16@0:8' type='@8@0:4' selector='identifier'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='setIdentifier:'/>
</informal_protocol>
<informal_protocol name='NSUserInterfaceItemSearching'>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='localizedTitlesForItem:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='performActionForItem:'/>
<method type64='v40@0:8@16q24@?32' type='v20@0:4@8i12@?16' selector='searchForItemsWithSearchString:resultLimit:matchedItemHandler:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='showAllHelpTopicsForSearchString:'/>
</informal_protocol>
<informal_protocol name='NSUserInterfaceValidations'>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='validateUserInterfaceItem:'/>
</informal_protocol>
<informal_protocol name='NSValidatedUserInterfaceItem'>
<method type64=':16@0:8' type=':8@0:4' selector='action'/>
<method type64='q16@0:8' type='i8@0:4' selector='tag'/>
</informal_protocol>
<informal_protocol name='NSWindowDelegate'>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='customWindowsToEnterFullScreenForWindow:'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='customWindowsToExitFullScreenForWindow:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='window:didDecodeRestorableState:'/>
<method type64='B56@0:8@16@24{CGPoint=dd}32@48' type='B28@0:4@8@12{_NSPoint=ff}16@24' selector='window:shouldDragDocumentWithEvent:from:withPasteboard:'/>
<method type64='B32@0:8@16@24' type='B16@0:4@8@12' selector='window:shouldPopUpDocumentPathMenu:'/>
<method type64='v32@0:8@16d24' type='v20@0:4@8d12' selector='window:startCustomAnimationToEnterFullScreenWithDuration:'/>
<method type64='v32@0:8@16d24' type='v20@0:4@8d12' selector='window:startCustomAnimationToExitFullScreenWithDuration:'/>
<method type64='v32@0:8@16@24' type='v16@0:4@8@12' selector='window:willEncodeRestorableState:'/>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}32@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16' selector='window:willPositionSheet:usingRect:'/>
<method type64='{CGSize=dd}56@0:8@16{CGSize=dd}24{CGSize=dd}40' type='{_NSSize=ff}28@0:4@8{_NSSize=ff}12{_NSSize=ff}20' selector='window:willResizeForVersionBrowserWithMaxPreferredSize:maxAllowedSize:'/>
<method type64='{CGSize=dd}40@0:8@16{CGSize=dd}24' type='{_NSSize=ff}20@0:4@8{_NSSize=ff}12' selector='window:willUseFullScreenContentSize:'/>
<method type64='Q32@0:8@16Q24' type='I16@0:4@8I12' selector='window:willUseFullScreenPresentationOptions:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidBecomeKey:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidBecomeMain:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidChangeScreen:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidChangeScreenProfile:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidDeminiaturize:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidEndLiveResize:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidEndSheet:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidEnterFullScreen:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidEnterVersionBrowser:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidExitFullScreen:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidExitVersionBrowser:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidExpose:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidFailToEnterFullScreen:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidFailToExitFullScreen:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidMiniaturize:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidMove:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidResignKey:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidResignMain:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidResize:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowDidUpdate:'/>
<method type64='B24@0:8@16' type='B12@0:4@8' selector='windowShouldClose:'/>
<method type64='B56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24' type='B28@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12' selector='windowShouldZoom:toFrame:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowWillBeginSheet:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowWillClose:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowWillEnterFullScreen:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowWillEnterVersionBrowser:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowWillExitFullScreen:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowWillExitVersionBrowser:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowWillMiniaturize:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowWillMove:'/>
<method type64='{CGSize=dd}40@0:8@16{CGSize=dd}24' type='{_NSSize=ff}20@0:4@8{_NSSize=ff}12' selector='windowWillResize:toSize:'/>
<method type64='@32@0:8@16@24' type='@16@0:4@8@12' selector='windowWillReturnFieldEditor:toObject:'/>
<method type64='@24@0:8@16' type='@12@0:4@8' selector='windowWillReturnUndoManager:'/>
<method type64='v24@0:8@16' type='v12@0:4@8' selector='windowWillStartLiveResize:'/>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}28@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12' selector='windowWillUseStandardFrame:defaultFrame:'/>
</informal_protocol>
<informal_protocol name='NSWindowRestoration'>
<method type64='v40@0:8@16@24@?32' type='v20@0:4@8@12@?16' selector='restoreWindowWithIdentifier:state:completionHandler:' class_method='true'/>
</informal_protocol>
</signatures>
