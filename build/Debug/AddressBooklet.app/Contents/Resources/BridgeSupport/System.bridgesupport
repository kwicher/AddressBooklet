<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
<struct name='CCHmacContext' type='{_CCHmacContext=&quot;ctx&quot;[96I]}'/>
<struct name='CC_MD2_CTX' type='{CC_MD2state_st=&quot;num&quot;i&quot;data&quot;[16C]&quot;cksm&quot;[16I]&quot;state&quot;[16I]}'/>
<struct name='CC_MD2state_st' type='{CC_MD2state_st=&quot;num&quot;i&quot;data&quot;[16C]&quot;cksm&quot;[16I]&quot;state&quot;[16I]}'/>
<struct name='CC_MD4_CTX' type='{CC_MD4state_st=&quot;A&quot;I&quot;B&quot;I&quot;C&quot;I&quot;D&quot;I&quot;Nl&quot;I&quot;Nh&quot;I&quot;data&quot;[16I]&quot;num&quot;i}'/>
<struct name='CC_MD4state_st' type='{CC_MD4state_st=&quot;A&quot;I&quot;B&quot;I&quot;C&quot;I&quot;D&quot;I&quot;Nl&quot;I&quot;Nh&quot;I&quot;data&quot;[16I]&quot;num&quot;i}'/>
<struct name='CC_MD5_CTX' type='{CC_MD5state_st=&quot;A&quot;I&quot;B&quot;I&quot;C&quot;I&quot;D&quot;I&quot;Nl&quot;I&quot;Nh&quot;I&quot;data&quot;[16I]&quot;num&quot;i}'/>
<struct name='CC_MD5state_st' type='{CC_MD5state_st=&quot;A&quot;I&quot;B&quot;I&quot;C&quot;I&quot;D&quot;I&quot;Nl&quot;I&quot;Nh&quot;I&quot;data&quot;[16I]&quot;num&quot;i}'/>
<struct name='CC_SHA1_CTX' type='{CC_SHA1state_st=&quot;h0&quot;I&quot;h1&quot;I&quot;h2&quot;I&quot;h3&quot;I&quot;h4&quot;I&quot;Nl&quot;I&quot;Nh&quot;I&quot;data&quot;[16I]&quot;num&quot;i}'/>
<struct name='CC_SHA1state_st' type='{CC_SHA1state_st=&quot;h0&quot;I&quot;h1&quot;I&quot;h2&quot;I&quot;h3&quot;I&quot;h4&quot;I&quot;Nl&quot;I&quot;Nh&quot;I&quot;data&quot;[16I]&quot;num&quot;i}'/>
<struct name='CC_SHA256_CTX' type='{CC_SHA256state_st=&quot;count&quot;[2I]&quot;hash&quot;[8I]&quot;wbuf&quot;[16I]}'/>
<struct name='CC_SHA256state_st' type='{CC_SHA256state_st=&quot;count&quot;[2I]&quot;hash&quot;[8I]&quot;wbuf&quot;[16I]}'/>
<struct name='CC_SHA512_CTX' type='{CC_SHA512state_st=&quot;count&quot;[2Q]&quot;hash&quot;[8Q]&quot;wbuf&quot;[16Q]}'/>
<struct name='CC_SHA512state_st' type='{CC_SHA512state_st=&quot;count&quot;[2Q]&quot;hash&quot;[8Q]&quot;wbuf&quot;[16Q]}'/>
<struct name='NDR_record_t' type='{_NDR_record_t=&quot;mig_vers&quot;C&quot;if_vers&quot;C&quot;reserved1&quot;C&quot;mig_encoding&quot;C&quot;int_rep&quot;C&quot;char_rep&quot;C&quot;float_rep&quot;C&quot;reserved2&quot;C}'/>
<struct name='audit_token_t' type='{_audit_token_t=&quot;val&quot;[8I]}'/>
<struct name='host_basic_info' type='{host_basic_info=&quot;max_cpus&quot;i&quot;avail_cpus&quot;i&quot;memory_size&quot;I&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;cpu_threadtype&quot;i&quot;physical_cpu&quot;i&quot;physical_cpu_max&quot;i&quot;logical_cpu&quot;i&quot;logical_cpu_max&quot;i&quot;max_mem&quot;Q}'/>
<struct name='host_basic_info_data_t' type='{host_basic_info=&quot;max_cpus&quot;i&quot;avail_cpus&quot;i&quot;memory_size&quot;I&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;cpu_threadtype&quot;i&quot;physical_cpu&quot;i&quot;physical_cpu_max&quot;i&quot;logical_cpu&quot;i&quot;logical_cpu_max&quot;i&quot;max_mem&quot;Q}'/>
<struct name='host_basic_info_t' type='{host_basic_info=&quot;max_cpus&quot;i&quot;avail_cpus&quot;i&quot;memory_size&quot;I&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;cpu_threadtype&quot;i&quot;physical_cpu&quot;i&quot;physical_cpu_max&quot;i&quot;logical_cpu&quot;i&quot;logical_cpu_max&quot;i&quot;max_mem&quot;Q}'/>
<struct name='host_cpu_load_info' type='{host_cpu_load_info=&quot;cpu_ticks&quot;[4I]}'/>
<struct name='host_cpu_load_info_data_t' type='{host_cpu_load_info=&quot;cpu_ticks&quot;[4I]}'/>
<struct name='host_cpu_load_info_t' type='{host_cpu_load_info=&quot;cpu_ticks&quot;[4I]}'/>
<struct name='host_load_info' type='{host_load_info=&quot;avenrun&quot;[3i]&quot;mach_factor&quot;[3i]}'/>
<struct name='host_load_info_data_t' type='{host_load_info=&quot;avenrun&quot;[3i]&quot;mach_factor&quot;[3i]}'/>
<struct name='host_load_info_t' type='{host_load_info=&quot;avenrun&quot;[3i]&quot;mach_factor&quot;[3i]}'/>
<struct name='host_priority_info' type='{host_priority_info=&quot;kernel_priority&quot;i&quot;system_priority&quot;i&quot;server_priority&quot;i&quot;user_priority&quot;i&quot;depress_priority&quot;i&quot;idle_priority&quot;i&quot;minimum_priority&quot;i&quot;maximum_priority&quot;i}'/>
<struct name='host_priority_info_data_t' type='{host_priority_info=&quot;kernel_priority&quot;i&quot;system_priority&quot;i&quot;server_priority&quot;i&quot;user_priority&quot;i&quot;depress_priority&quot;i&quot;idle_priority&quot;i&quot;minimum_priority&quot;i&quot;maximum_priority&quot;i}'/>
<struct name='host_priority_info_t' type='{host_priority_info=&quot;kernel_priority&quot;i&quot;system_priority&quot;i&quot;server_priority&quot;i&quot;user_priority&quot;i&quot;depress_priority&quot;i&quot;idle_priority&quot;i&quot;minimum_priority&quot;i&quot;maximum_priority&quot;i}'/>
<struct name='host_sched_info' type='{host_sched_info=&quot;min_timeout&quot;i&quot;min_quantum&quot;i}'/>
<struct name='host_sched_info_data_t' type='{host_sched_info=&quot;min_timeout&quot;i&quot;min_quantum&quot;i}'/>
<struct name='host_sched_info_t' type='{host_sched_info=&quot;min_timeout&quot;i&quot;min_quantum&quot;i}'/>
<struct name='i386_exception_state_t' type='{__darwin_i386_exception_state=&quot;__trapno&quot;S&quot;__cpu&quot;S&quot;__err&quot;I&quot;__faultvaddr&quot;I}'/>
<struct name='i386_float_state_t' type='{__darwin_i386_float_state=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[224c]&quot;__fpu_reserved1&quot;i}'/>
<struct name='i386_thread_state_t' type='{__darwin_i386_thread_state=&quot;__eax&quot;I&quot;__ebx&quot;I&quot;__ecx&quot;I&quot;__edx&quot;I&quot;__edi&quot;I&quot;__esi&quot;I&quot;__ebp&quot;I&quot;__esp&quot;I&quot;__ss&quot;I&quot;__eflags&quot;I&quot;__eip&quot;I&quot;__cs&quot;I&quot;__ds&quot;I&quot;__es&quot;I&quot;__fs&quot;I&quot;__gs&quot;I}'/>
<struct name='kernel_resource_sizes' type='{kernel_resource_sizes=&quot;task&quot;I&quot;thread&quot;I&quot;port&quot;I&quot;memory_region&quot;I&quot;memory_object&quot;I}'/>
<struct name='kernel_resource_sizes_data_t' type='{kernel_resource_sizes=&quot;task&quot;I&quot;thread&quot;I&quot;port&quot;I&quot;memory_region&quot;I&quot;memory_object&quot;I}'/>
<struct name='kernel_resource_sizes_t' type='{kernel_resource_sizes=&quot;task&quot;I&quot;thread&quot;I&quot;port&quot;I&quot;memory_region&quot;I&quot;memory_object&quot;I}'/>
<struct name='kmod_info' type64='{kmod_info=&quot;next&quot;^{kmod_info}&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64c]&quot;version&quot;[64c]&quot;reference_count&quot;i&quot;reference_list&quot;^{kmod_reference}&quot;address&quot;Q&quot;size&quot;Q&quot;hdr_size&quot;Q&quot;start&quot;^?&quot;stop&quot;^?}' type='{kmod_info=&quot;next&quot;^{kmod_info}&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64c]&quot;version&quot;[64c]&quot;reference_count&quot;i&quot;reference_list&quot;^{kmod_reference}&quot;address&quot;I&quot;size&quot;I&quot;hdr_size&quot;I&quot;start&quot;^?&quot;stop&quot;^?}'/>
<struct name='kmod_info_32_v1' type='{kmod_info_32_v1=&quot;next_addr&quot;I&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64C]&quot;version&quot;[64C]&quot;reference_count&quot;i&quot;reference_list_addr&quot;I&quot;address&quot;I&quot;size&quot;I&quot;hdr_size&quot;I&quot;start_addr&quot;I&quot;stop_addr&quot;I}'/>
<struct name='kmod_info_32_v1_t' type='{kmod_info_32_v1=&quot;next_addr&quot;I&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64C]&quot;version&quot;[64C]&quot;reference_count&quot;i&quot;reference_list_addr&quot;I&quot;address&quot;I&quot;size&quot;I&quot;hdr_size&quot;I&quot;start_addr&quot;I&quot;stop_addr&quot;I}'/>
<struct name='kmod_info_64_v1' type='{kmod_info_64_v1=&quot;next_addr&quot;Q&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64C]&quot;version&quot;[64C]&quot;reference_count&quot;i&quot;reference_list_addr&quot;Q&quot;address&quot;Q&quot;size&quot;Q&quot;hdr_size&quot;Q&quot;start_addr&quot;Q&quot;stop_addr&quot;Q}'/>
<struct name='kmod_info_64_v1_t' type='{kmod_info_64_v1=&quot;next_addr&quot;Q&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64C]&quot;version&quot;[64C]&quot;reference_count&quot;i&quot;reference_list_addr&quot;Q&quot;address&quot;Q&quot;size&quot;Q&quot;hdr_size&quot;Q&quot;start_addr&quot;Q&quot;stop_addr&quot;Q}'/>
<struct name='kmod_info_t' type64='{kmod_info=&quot;next&quot;^{kmod_info}&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64c]&quot;version&quot;[64c]&quot;reference_count&quot;i&quot;reference_list&quot;^{kmod_reference}&quot;address&quot;Q&quot;size&quot;Q&quot;hdr_size&quot;Q&quot;start&quot;^?&quot;stop&quot;^?}' type='{kmod_info=&quot;next&quot;^{kmod_info}&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64c]&quot;version&quot;[64c]&quot;reference_count&quot;i&quot;reference_list&quot;^{kmod_reference}&quot;address&quot;I&quot;size&quot;I&quot;hdr_size&quot;I&quot;start&quot;^?&quot;stop&quot;^?}'/>
<struct name='kmod_reference' type='{kmod_reference=&quot;next&quot;^{kmod_reference}&quot;info&quot;^{kmod_info}}'/>
<struct name='kmod_reference_t' type='{kmod_reference=&quot;next&quot;^{kmod_reference}&quot;info&quot;^{kmod_info}}'/>
<struct name='mach_dead_name_notification_t' type='{_mach_dead_name_notification_t=&quot;not_header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;NDR&quot;{_NDR_record_t=&quot;mig_vers&quot;C&quot;if_vers&quot;C&quot;reserved1&quot;C&quot;mig_encoding&quot;C&quot;int_rep&quot;C&quot;char_rep&quot;C&quot;float_rep&quot;C&quot;reserved2&quot;C}&quot;not_port&quot;I&quot;trailer&quot;{_mach_msg_format_0_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}}'/>
<struct name='mach_msg_audit_trailer_t' type='{_mach_msg_audit_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}&quot;msgh_audit&quot;{_audit_token_t=&quot;val&quot;[8I]}}'/>
<struct name='mach_msg_base_t' type='{_mach_msg_base_t=&quot;header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;body&quot;{_mach_msg_body_t=&quot;msgh_descriptor_count&quot;I}}'/>
<struct name='mach_msg_body_t' type='{_mach_msg_body_t=&quot;msgh_descriptor_count&quot;I}'/>
<struct name='mach_msg_context_trailer_t' type='{_mach_msg_context_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}&quot;msgh_audit&quot;{_audit_token_t=&quot;val&quot;[8I]}&quot;msgh_context&quot;Q}'/>
<struct name='mach_msg_empty_rcv_t' type='{_mach_msg_empty_rcv_t=&quot;header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;trailer&quot;{_mach_msg_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I}}'/>
<struct name='mach_msg_empty_send_t' type='{_mach_msg_empty_send_t=&quot;header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}}'/>
<struct name='mach_msg_format_0_trailer_t' type='{_mach_msg_format_0_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}'/>
<struct name='mach_msg_header_t' type='{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}'/>
<struct name='mach_msg_mac_trailer_t' type='{_mach_msg_mac_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}&quot;msgh_audit&quot;{_audit_token_t=&quot;val&quot;[8I]}&quot;msgh_context&quot;Q&quot;msgh_ad&quot;i&quot;msgh_labels&quot;{_msg_labels_t=&quot;sender&quot;I}}'/>
<struct name='mach_msg_max_trailer_t' type='{_mach_msg_max_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}&quot;msgh_audit&quot;{_audit_token_t=&quot;val&quot;[8I]}&quot;msgh_context&quot;Q&quot;msgh_ad&quot;i&quot;msgh_labels&quot;{_msg_labels_t=&quot;sender&quot;I}}'/>
<struct name='mach_msg_ool_descriptor32_t' type='{_mach_msg_ool_descriptor32_t=&quot;address&quot;I&quot;size&quot;I&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;pad1&quot;b8&quot;type&quot;b8}'/>
<struct name='mach_msg_ool_descriptor64_t' type='{_mach_msg_ool_descriptor64_t=&quot;address&quot;Q&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;pad1&quot;b8&quot;type&quot;b8&quot;size&quot;I}'/>
<struct name='mach_msg_ool_descriptor_t' type64='{_mach_msg_ool_descriptor_t=&quot;address&quot;^v&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;pad1&quot;b8&quot;type&quot;b8&quot;size&quot;I}' type='{_mach_msg_ool_descriptor_t=&quot;address&quot;^v&quot;size&quot;I&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;pad1&quot;b8&quot;type&quot;b8}'/>
<struct name='mach_msg_ool_ports_descriptor32_t' type='{_mach_msg_ool_ports_descriptor32_t=&quot;address&quot;I&quot;count&quot;I&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;disposition&quot;b8&quot;type&quot;b8}'/>
<struct name='mach_msg_ool_ports_descriptor64_t' type='{_mach_msg_ool_ports_descriptor64_t=&quot;address&quot;Q&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;disposition&quot;b8&quot;type&quot;b8&quot;count&quot;I}'/>
<struct name='mach_msg_ool_ports_descriptor_t' type64='{_mach_msg_ool_ports_descriptor_t=&quot;address&quot;^v&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;disposition&quot;b8&quot;type&quot;b8&quot;count&quot;I}' type='{_mach_msg_ool_ports_descriptor_t=&quot;address&quot;^v&quot;count&quot;I&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;disposition&quot;b8&quot;type&quot;b8}'/>
<struct name='mach_msg_port_descriptor_t' type='{_mach_msg_port_descriptor_t=&quot;name&quot;I&quot;pad1&quot;I&quot;pad2&quot;b16&quot;disposition&quot;b8&quot;type&quot;b8}'/>
<struct name='mach_msg_security_trailer_t' type='{_mach_msg_security_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}'/>
<struct name='mach_msg_seqno_trailer_t' type='{_mach_msg_seqno_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I}'/>
<struct name='mach_msg_trailer_t' type='{_mach_msg_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I}'/>
<struct name='mach_msg_type_descriptor_t' type='{_mach_msg_type_descriptor_t=&quot;pad1&quot;I&quot;pad2&quot;I&quot;pad3&quot;b24&quot;type&quot;b8}'/>
<struct name='mach_no_senders_notification_t' type='{_mach_no_senders_notification_t=&quot;not_header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;NDR&quot;{_NDR_record_t=&quot;mig_vers&quot;C&quot;if_vers&quot;C&quot;reserved1&quot;C&quot;mig_encoding&quot;C&quot;int_rep&quot;C&quot;char_rep&quot;C&quot;float_rep&quot;C&quot;reserved2&quot;C}&quot;not_count&quot;I&quot;trailer&quot;{_mach_msg_format_0_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}}'/>
<struct name='mach_port_deleted_notification_t' type='{_mach_port_deleted_notification_t=&quot;not_header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;NDR&quot;{_NDR_record_t=&quot;mig_vers&quot;C&quot;if_vers&quot;C&quot;reserved1&quot;C&quot;mig_encoding&quot;C&quot;int_rep&quot;C&quot;char_rep&quot;C&quot;float_rep&quot;C&quot;reserved2&quot;C}&quot;not_port&quot;I&quot;trailer&quot;{_mach_msg_format_0_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}}'/>
<struct name='mach_port_destroyed_notification_t' type='{_mach_port_destroyed_notification_t=&quot;not_header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;not_body&quot;{_mach_msg_body_t=&quot;msgh_descriptor_count&quot;I}&quot;not_port&quot;{_mach_msg_port_descriptor_t=&quot;name&quot;I&quot;pad1&quot;I&quot;pad2&quot;b16&quot;disposition&quot;b8&quot;type&quot;b8}&quot;trailer&quot;{_mach_msg_format_0_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}}'/>
<struct name='mach_port_limits' type='{mach_port_limits=&quot;mpl_qlimit&quot;I}'/>
<struct name='mach_port_limits_t' type='{mach_port_limits=&quot;mpl_qlimit&quot;I}'/>
<struct name='mach_port_qos' type='{mach_port_qos=&quot;name&quot;b1&quot;prealloc&quot;b1&quot;pad1&quot;b30&quot;len&quot;I}'/>
<struct name='mach_port_qos_t' type='{mach_port_qos=&quot;name&quot;b1&quot;prealloc&quot;b1&quot;pad1&quot;b30&quot;len&quot;I}'/>
<struct name='mach_port_status' type64='{mach_port_status=&quot;mps_pset&quot;I&quot;mps_seqno&quot;I&quot;mps_mscount&quot;I&quot;mps_qlimit&quot;I&quot;mps_msgcount&quot;I&quot;mps_sorights&quot;I&quot;mps_srights&quot;I&quot;mps_pdrequest&quot;I&quot;mps_nsrequest&quot;I&quot;mps_flags&quot;I}' type='{mach_port_status=&quot;mps_pset&quot;I&quot;mps_seqno&quot;I&quot;mps_mscount&quot;I&quot;mps_qlimit&quot;I&quot;mps_msgcount&quot;I&quot;mps_sorights&quot;I&quot;mps_srights&quot;i&quot;mps_pdrequest&quot;i&quot;mps_nsrequest&quot;i&quot;mps_flags&quot;I}'/>
<struct name='mach_port_status_t' type64='{mach_port_status=&quot;mps_pset&quot;I&quot;mps_seqno&quot;I&quot;mps_mscount&quot;I&quot;mps_qlimit&quot;I&quot;mps_msgcount&quot;I&quot;mps_sorights&quot;I&quot;mps_srights&quot;I&quot;mps_pdrequest&quot;I&quot;mps_nsrequest&quot;I&quot;mps_flags&quot;I}' type='{mach_port_status=&quot;mps_pset&quot;I&quot;mps_seqno&quot;I&quot;mps_mscount&quot;I&quot;mps_qlimit&quot;I&quot;mps_msgcount&quot;I&quot;mps_sorights&quot;I&quot;mps_srights&quot;i&quot;mps_pdrequest&quot;i&quot;mps_nsrequest&quot;i&quot;mps_flags&quot;I}'/>
<struct name='mach_send_once_notification_t' type='{_mach_send_once_notification_t=&quot;not_header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;trailer&quot;{_mach_msg_format_0_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}}'/>
<struct name='mach_send_possible_notification_t' type='{_mach_send_possible_notification_t=&quot;not_header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;NDR&quot;{_NDR_record_t=&quot;mig_vers&quot;C&quot;if_vers&quot;C&quot;reserved1&quot;C&quot;mig_encoding&quot;C&quot;int_rep&quot;C&quot;char_rep&quot;C&quot;float_rep&quot;C&quot;reserved2&quot;C}&quot;not_port&quot;I&quot;trailer&quot;{_mach_msg_format_0_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}}'/>
<struct name='mach_timebase_info' type='{mach_timebase_info=&quot;numer&quot;I&quot;denom&quot;I}'/>
<struct name='mach_timebase_info_data_t' type='{mach_timebase_info=&quot;numer&quot;I&quot;denom&quot;I}'/>
<struct name='mach_timebase_info_t' type='{mach_timebase_info=&quot;numer&quot;I&quot;denom&quot;I}'/>
<struct name='mach_timespec' type='{mach_timespec=&quot;tv_sec&quot;I&quot;tv_nsec&quot;i}'/>
<struct name='mach_timespec_t' type='{mach_timespec=&quot;tv_sec&quot;I&quot;tv_nsec&quot;i}'/>
<struct name='mach_vm_read_entry' type='{mach_vm_read_entry=&quot;address&quot;Q&quot;size&quot;Q}'/>
<struct name='memory_object_attr_info' type64='{memory_object_attr_info=&quot;copy_strategy&quot;i&quot;cluster_size&quot;I&quot;may_cache_object&quot;I&quot;temporary&quot;I}' type='{memory_object_attr_info=&quot;copy_strategy&quot;i&quot;cluster_size&quot;I&quot;may_cache_object&quot;i&quot;temporary&quot;i}'/>
<struct name='memory_object_attr_info_data_t' type64='{memory_object_attr_info=&quot;copy_strategy&quot;i&quot;cluster_size&quot;I&quot;may_cache_object&quot;I&quot;temporary&quot;I}' type='{memory_object_attr_info=&quot;copy_strategy&quot;i&quot;cluster_size&quot;I&quot;may_cache_object&quot;i&quot;temporary&quot;i}'/>
<struct name='memory_object_attr_info_t' type64='{memory_object_attr_info=&quot;copy_strategy&quot;i&quot;cluster_size&quot;I&quot;may_cache_object&quot;I&quot;temporary&quot;I}' type='{memory_object_attr_info=&quot;copy_strategy&quot;i&quot;cluster_size&quot;I&quot;may_cache_object&quot;i&quot;temporary&quot;i}'/>
<struct name='memory_object_behave_info' type64='{memory_object_behave_info=&quot;copy_strategy&quot;i&quot;temporary&quot;I&quot;invalidate&quot;I&quot;silent_overwrite&quot;I&quot;advisory_pageout&quot;I}' type='{memory_object_behave_info=&quot;copy_strategy&quot;i&quot;temporary&quot;i&quot;invalidate&quot;i&quot;silent_overwrite&quot;i&quot;advisory_pageout&quot;i}'/>
<struct name='memory_object_behave_info_data_t' type64='{memory_object_behave_info=&quot;copy_strategy&quot;i&quot;temporary&quot;I&quot;invalidate&quot;I&quot;silent_overwrite&quot;I&quot;advisory_pageout&quot;I}' type='{memory_object_behave_info=&quot;copy_strategy&quot;i&quot;temporary&quot;i&quot;invalidate&quot;i&quot;silent_overwrite&quot;i&quot;advisory_pageout&quot;i}'/>
<struct name='memory_object_behave_info_t' type64='{memory_object_behave_info=&quot;copy_strategy&quot;i&quot;temporary&quot;I&quot;invalidate&quot;I&quot;silent_overwrite&quot;I&quot;advisory_pageout&quot;I}' type='{memory_object_behave_info=&quot;copy_strategy&quot;i&quot;temporary&quot;i&quot;invalidate&quot;i&quot;silent_overwrite&quot;i&quot;advisory_pageout&quot;i}'/>
<struct name='memory_object_perf_info' type64='{memory_object_perf_info=&quot;cluster_size&quot;I&quot;may_cache&quot;I}' type='{memory_object_perf_info=&quot;cluster_size&quot;I&quot;may_cache&quot;i}'/>
<struct name='memory_object_perf_info_data_t' type64='{memory_object_perf_info=&quot;cluster_size&quot;I&quot;may_cache&quot;I}' type='{memory_object_perf_info=&quot;cluster_size&quot;I&quot;may_cache&quot;i}'/>
<struct name='memory_object_perf_info_t' type64='{memory_object_perf_info=&quot;cluster_size&quot;I&quot;may_cache&quot;I}' type='{memory_object_perf_info=&quot;cluster_size&quot;I&quot;may_cache&quot;i}'/>
<struct name='mig_reply_error_t' type='{_mig_reply_error_t=&quot;Head&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;NDR&quot;{_NDR_record_t=&quot;mig_vers&quot;C&quot;if_vers&quot;C&quot;reserved1&quot;C&quot;mig_encoding&quot;C&quot;int_rep&quot;C&quot;char_rep&quot;C&quot;float_rep&quot;C&quot;reserved2&quot;C}&quot;RetCode&quot;i}'/>
<struct name='mig_routine_descriptor' type='{routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{?}&quot;max_reply_msg&quot;I}'/>
<struct name='mig_subsystem' type='{routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{?}&quot;max_reply_msg&quot;I}'/>
<struct name='mig_subsystem_t' type='{routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{?}&quot;max_reply_msg&quot;I}'/>
<struct name='mig_symtab' type='{mig_symtab=&quot;ms_routine_name&quot;*&quot;ms_routine_number&quot;i&quot;ms_routine&quot;^?}'/>
<struct name='mig_symtab_t' type='{mig_symtab=&quot;ms_routine_name&quot;*&quot;ms_routine_number&quot;i&quot;ms_routine&quot;^?}'/>
<struct name='msg_labels_t' type='{_msg_labels_t=&quot;sender&quot;I}'/>
<struct name='policy_base_data_t' type='{policy_bases=&quot;ts&quot;{policy_timeshare_base=&quot;base_priority&quot;i}&quot;rr&quot;{policy_rr_base=&quot;base_priority&quot;i&quot;quantum&quot;i}&quot;fifo&quot;{policy_fifo_base=&quot;base_priority&quot;i}}'/>
<struct name='policy_bases' type='{policy_bases=&quot;ts&quot;{policy_timeshare_base=&quot;base_priority&quot;i}&quot;rr&quot;{policy_rr_base=&quot;base_priority&quot;i&quot;quantum&quot;i}&quot;fifo&quot;{policy_fifo_base=&quot;base_priority&quot;i}}'/>
<struct name='policy_fifo_base' type='{policy_fifo_base=&quot;base_priority&quot;i}'/>
<struct name='policy_fifo_base_data_t' type='{policy_fifo_base=&quot;base_priority&quot;i}'/>
<struct name='policy_fifo_base_t' type='{policy_fifo_base=&quot;base_priority&quot;i}'/>
<struct name='policy_fifo_info' type64='{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' type='{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}'/>
<struct name='policy_fifo_info_data_t' type64='{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' type='{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}'/>
<struct name='policy_fifo_info_t' type64='{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' type='{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}'/>
<struct name='policy_fifo_limit' type='{policy_fifo_limit=&quot;max_priority&quot;i}'/>
<struct name='policy_fifo_limit_data_t' type='{policy_fifo_limit=&quot;max_priority&quot;i}'/>
<struct name='policy_fifo_limit_t' type='{policy_fifo_limit=&quot;max_priority&quot;i}'/>
<struct name='policy_info_data_t' type64='{policy_infos=&quot;ts&quot;{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}&quot;rr&quot;{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}&quot;fifo&quot;{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}}' type='{policy_infos=&quot;ts&quot;{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}&quot;rr&quot;{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}&quot;fifo&quot;{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}}'/>
<struct name='policy_infos' type64='{policy_infos=&quot;ts&quot;{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}&quot;rr&quot;{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}&quot;fifo&quot;{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}}' type='{policy_infos=&quot;ts&quot;{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}&quot;rr&quot;{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}&quot;fifo&quot;{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}}'/>
<struct name='policy_limit_data_t' type='{policy_limits=&quot;ts&quot;{policy_timeshare_limit=&quot;max_priority&quot;i}&quot;rr&quot;{policy_rr_limit=&quot;max_priority&quot;i}&quot;fifo&quot;{policy_fifo_limit=&quot;max_priority&quot;i}}'/>
<struct name='policy_limits' type='{policy_limits=&quot;ts&quot;{policy_timeshare_limit=&quot;max_priority&quot;i}&quot;rr&quot;{policy_rr_limit=&quot;max_priority&quot;i}&quot;fifo&quot;{policy_fifo_limit=&quot;max_priority&quot;i}}'/>
<struct name='policy_rr_base' type='{policy_rr_base=&quot;base_priority&quot;i&quot;quantum&quot;i}'/>
<struct name='policy_rr_base_data_t' type='{policy_rr_base=&quot;base_priority&quot;i&quot;quantum&quot;i}'/>
<struct name='policy_rr_base_t' type='{policy_rr_base=&quot;base_priority&quot;i&quot;quantum&quot;i}'/>
<struct name='policy_rr_info' type64='{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' type='{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}'/>
<struct name='policy_rr_info_data_t' type64='{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' type='{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}'/>
<struct name='policy_rr_info_t' type64='{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' type='{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}'/>
<struct name='policy_rr_limit' type='{policy_rr_limit=&quot;max_priority&quot;i}'/>
<struct name='policy_rr_limit_data_t' type='{policy_rr_limit=&quot;max_priority&quot;i}'/>
<struct name='policy_rr_limit_t' type='{policy_rr_limit=&quot;max_priority&quot;i}'/>
<struct name='policy_timeshare_base' type='{policy_timeshare_base=&quot;base_priority&quot;i}'/>
<struct name='policy_timeshare_base_data_t' type='{policy_timeshare_base=&quot;base_priority&quot;i}'/>
<struct name='policy_timeshare_base_t' type='{policy_timeshare_base=&quot;base_priority&quot;i}'/>
<struct name='policy_timeshare_info' type64='{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' type='{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}'/>
<struct name='policy_timeshare_info_data_t' type64='{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' type='{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}'/>
<struct name='policy_timeshare_info_t' type64='{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' type='{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}'/>
<struct name='policy_timeshare_limit' type='{policy_timeshare_limit=&quot;max_priority&quot;i}'/>
<struct name='policy_timeshare_limit_data_t' type='{policy_timeshare_limit=&quot;max_priority&quot;i}'/>
<struct name='policy_timeshare_limit_t' type='{policy_timeshare_limit=&quot;max_priority&quot;i}'/>
<struct name='port_obj_tentry' type='{port_obj_tentry=&quot;pos_value&quot;^v&quot;pos_type&quot;i}'/>
<struct name='processor_basic_info' type64='{processor_basic_info=&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;running&quot;I&quot;slot_num&quot;i&quot;is_master&quot;I}' type='{processor_basic_info=&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;running&quot;i&quot;slot_num&quot;i&quot;is_master&quot;i}'/>
<struct name='processor_basic_info_data_t' type64='{processor_basic_info=&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;running&quot;I&quot;slot_num&quot;i&quot;is_master&quot;I}' type='{processor_basic_info=&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;running&quot;i&quot;slot_num&quot;i&quot;is_master&quot;i}'/>
<struct name='processor_basic_info_t' type64='{processor_basic_info=&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;running&quot;I&quot;slot_num&quot;i&quot;is_master&quot;I}' type='{processor_basic_info=&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;running&quot;i&quot;slot_num&quot;i&quot;is_master&quot;i}'/>
<struct name='processor_cpu_load_info' type='{processor_cpu_load_info=&quot;cpu_ticks&quot;[4I]}'/>
<struct name='processor_cpu_load_info_data_t' type='{processor_cpu_load_info=&quot;cpu_ticks&quot;[4I]}'/>
<struct name='processor_cpu_load_info_t' type='{processor_cpu_load_info=&quot;cpu_ticks&quot;[4I]}'/>
<struct name='processor_set_basic_info' type='{processor_set_basic_info=&quot;processor_count&quot;i&quot;default_policy&quot;i}'/>
<struct name='processor_set_basic_info_data_t' type='{processor_set_basic_info=&quot;processor_count&quot;i&quot;default_policy&quot;i}'/>
<struct name='processor_set_basic_info_t' type='{processor_set_basic_info=&quot;processor_count&quot;i&quot;default_policy&quot;i}'/>
<struct name='processor_set_load_info' type='{processor_set_load_info=&quot;task_count&quot;i&quot;thread_count&quot;i&quot;load_average&quot;i&quot;mach_factor&quot;i}'/>
<struct name='processor_set_load_info_data_t' type='{processor_set_load_info=&quot;task_count&quot;i&quot;thread_count&quot;i&quot;load_average&quot;i&quot;mach_factor&quot;i}'/>
<struct name='processor_set_load_info_t' type='{processor_set_load_info=&quot;task_count&quot;i&quot;thread_count&quot;i&quot;load_average&quot;i&quot;mach_factor&quot;i}'/>
<struct name='routine_arg_descriptor' type='{_routine_arg_descriptor=&quot;pad1&quot;I&quot;pad2&quot;I&quot;pad3&quot;b24&quot;type&quot;b8}'/>
<struct name='routine_descriptor' type='{routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{?}&quot;max_reply_msg&quot;I}'/>
<struct name='routine_descriptor_t' type='{routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{?}&quot;max_reply_msg&quot;I}'/>
<struct name='rpc_routine_arg_descriptor' type='{rpc_routine_arg_descriptor=&quot;type&quot;I&quot;size&quot;I&quot;count&quot;I&quot;offset&quot;I}'/>
<struct name='rpc_routine_arg_descriptor_t' type='{rpc_routine_arg_descriptor=&quot;type&quot;I&quot;size&quot;I&quot;count&quot;I&quot;offset&quot;I}'/>
<struct name='rpc_routine_descriptor' type='{rpc_routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{rpc_routine_arg_descriptor}&quot;max_reply_msg&quot;I}'/>
<struct name='rpc_routine_descriptor_t' type='{rpc_routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{rpc_routine_arg_descriptor}&quot;max_reply_msg&quot;I}'/>
<struct name='rpc_signature' type='{rpc_signature=&quot;rd&quot;{rpc_routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{rpc_routine_arg_descriptor}&quot;max_reply_msg&quot;I}&quot;rad&quot;[1{rpc_routine_arg_descriptor=&quot;type&quot;I&quot;size&quot;I&quot;count&quot;I&quot;offset&quot;I}]}'/>
<struct name='rpc_subsystem' type64='{rpc_subsystem=&quot;reserved&quot;^v&quot;start&quot;i&quot;end&quot;i&quot;maxsize&quot;I&quot;base_addr&quot;Q&quot;routine&quot;[1{rpc_routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{rpc_routine_arg_descriptor}&quot;max_reply_msg&quot;I}]&quot;arg_descriptor&quot;[1{rpc_routine_arg_descriptor=&quot;type&quot;I&quot;size&quot;I&quot;count&quot;I&quot;offset&quot;I}]}' type='{rpc_subsystem=&quot;reserved&quot;^v&quot;start&quot;i&quot;end&quot;i&quot;maxsize&quot;I&quot;base_addr&quot;I&quot;routine&quot;[1{rpc_routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{rpc_routine_arg_descriptor}&quot;max_reply_msg&quot;I}]&quot;arg_descriptor&quot;[1{rpc_routine_arg_descriptor=&quot;type&quot;I&quot;size&quot;I&quot;count&quot;I&quot;offset&quot;I}]}'/>
<struct name='rpc_subsystem_t' type64='{rpc_subsystem=&quot;reserved&quot;^v&quot;start&quot;i&quot;end&quot;i&quot;maxsize&quot;I&quot;base_addr&quot;Q&quot;routine&quot;[1{rpc_routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{rpc_routine_arg_descriptor}&quot;max_reply_msg&quot;I}]&quot;arg_descriptor&quot;[1{rpc_routine_arg_descriptor=&quot;type&quot;I&quot;size&quot;I&quot;count&quot;I&quot;offset&quot;I}]}' type='{rpc_subsystem=&quot;reserved&quot;^v&quot;start&quot;i&quot;end&quot;i&quot;maxsize&quot;I&quot;base_addr&quot;I&quot;routine&quot;[1{rpc_routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{rpc_routine_arg_descriptor}&quot;max_reply_msg&quot;I}]&quot;arg_descriptor&quot;[1{rpc_routine_arg_descriptor=&quot;type&quot;I&quot;size&quot;I&quot;count&quot;I&quot;offset&quot;I}]}'/>
<struct name='security_token_t' type='{_security_token_t=&quot;val&quot;[2I]}'/>
<struct name='shared_file_mapping_np' type='{shared_file_mapping_np=&quot;sfm_address&quot;Q&quot;sfm_size&quot;Q&quot;sfm_file_offset&quot;Q&quot;sfm_max_prot&quot;i&quot;sfm_init_prot&quot;i}'/>
<struct name='shared_region_range_np' type='{shared_region_range_np=&quot;srr_address&quot;Q&quot;srr_size&quot;Q}'/>
<struct name='task_absolutetime_info' type='{task_absolutetime_info=&quot;total_user&quot;Q&quot;total_system&quot;Q&quot;threads_user&quot;Q&quot;threads_system&quot;Q}'/>
<struct name='task_absolutetime_info_data_t' type='{task_absolutetime_info=&quot;total_user&quot;Q&quot;total_system&quot;Q&quot;threads_user&quot;Q&quot;threads_system&quot;Q}'/>
<struct name='task_absolutetime_info_t' type='{task_absolutetime_info=&quot;total_user&quot;Q&quot;total_system&quot;Q&quot;threads_user&quot;Q&quot;threads_system&quot;Q}'/>
<struct name='task_affinity_tag_info' type='{task_affinity_tag_info=&quot;set_count&quot;i&quot;min&quot;i&quot;max&quot;i&quot;task_count&quot;i}'/>
<struct name='task_affinity_tag_info_data_t' type='{task_affinity_tag_info=&quot;set_count&quot;i&quot;min&quot;i&quot;max&quot;i&quot;task_count&quot;i}'/>
<struct name='task_affinity_tag_info_t' type='{task_affinity_tag_info=&quot;set_count&quot;i&quot;min&quot;i&quot;max&quot;i&quot;task_count&quot;i}'/>
<struct name='task_basic_info' type64='{task_basic_info=&quot;suspend_count&quot;i&quot;virtual_size&quot;Q&quot;resident_size&quot;Q&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}' type='{task_basic_info=&quot;suspend_count&quot;i&quot;virtual_size&quot;I&quot;resident_size&quot;I&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}'/>
<struct name='task_basic_info_32' type='{task_basic_info_32=&quot;suspend_count&quot;i&quot;virtual_size&quot;I&quot;resident_size&quot;I&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}'/>
<struct name='task_basic_info_32_data_t' type='{task_basic_info_32=&quot;suspend_count&quot;i&quot;virtual_size&quot;I&quot;resident_size&quot;I&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}'/>
<struct name='task_basic_info_32_t' type='{task_basic_info_32=&quot;suspend_count&quot;i&quot;virtual_size&quot;I&quot;resident_size&quot;I&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}'/>
<struct name='task_basic_info_64' type='{task_basic_info_64=&quot;suspend_count&quot;i&quot;virtual_size&quot;Q&quot;resident_size&quot;Q&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}'/>
<struct name='task_basic_info_64_data_t' type='{task_basic_info_64=&quot;suspend_count&quot;i&quot;virtual_size&quot;Q&quot;resident_size&quot;Q&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}'/>
<struct name='task_basic_info_64_t' type='{task_basic_info_64=&quot;suspend_count&quot;i&quot;virtual_size&quot;Q&quot;resident_size&quot;Q&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}'/>
<struct name='task_basic_info_data_t' type64='{task_basic_info=&quot;suspend_count&quot;i&quot;virtual_size&quot;Q&quot;resident_size&quot;Q&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}' type='{task_basic_info=&quot;suspend_count&quot;i&quot;virtual_size&quot;I&quot;resident_size&quot;I&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}'/>
<struct name='task_basic_info_t' type64='{task_basic_info=&quot;suspend_count&quot;i&quot;virtual_size&quot;Q&quot;resident_size&quot;Q&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}' type='{task_basic_info=&quot;suspend_count&quot;i&quot;virtual_size&quot;I&quot;resident_size&quot;I&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}'/>
<struct name='task_category_policy' type='{task_category_policy=&quot;role&quot;i}'/>
<struct name='task_category_policy_data_t' type='{task_category_policy=&quot;role&quot;i}'/>
<struct name='task_category_policy_t' type='{task_category_policy=&quot;role&quot;i}'/>
<struct name='task_dyld_info' type='{task_dyld_info=&quot;all_image_info_addr&quot;Q&quot;all_image_info_size&quot;Q&quot;all_image_info_format&quot;i}'/>
<struct name='task_dyld_info_data_t' type='{task_dyld_info=&quot;all_image_info_addr&quot;Q&quot;all_image_info_size&quot;Q&quot;all_image_info_format&quot;i}'/>
<struct name='task_dyld_info_t' type='{task_dyld_info=&quot;all_image_info_addr&quot;Q&quot;all_image_info_size&quot;Q&quot;all_image_info_format&quot;i}'/>
<struct name='task_events_info' type='{task_events_info=&quot;faults&quot;i&quot;pageins&quot;i&quot;cow_faults&quot;i&quot;messages_sent&quot;i&quot;messages_received&quot;i&quot;syscalls_mach&quot;i&quot;syscalls_unix&quot;i&quot;csw&quot;i}'/>
<struct name='task_events_info_data_t' type='{task_events_info=&quot;faults&quot;i&quot;pageins&quot;i&quot;cow_faults&quot;i&quot;messages_sent&quot;i&quot;messages_received&quot;i&quot;syscalls_mach&quot;i&quot;syscalls_unix&quot;i&quot;csw&quot;i}'/>
<struct name='task_events_info_t' type='{task_events_info=&quot;faults&quot;i&quot;pageins&quot;i&quot;cow_faults&quot;i&quot;messages_sent&quot;i&quot;messages_received&quot;i&quot;syscalls_mach&quot;i&quot;syscalls_unix&quot;i&quot;csw&quot;i}'/>
<struct name='task_extmod_info' type='{task_extmod_info=&quot;task_uuid&quot;[16C]&quot;extmod_statistics&quot;{vm_extmod_statistics=&quot;task_for_pid_count&quot;q&quot;task_for_pid_caller_count&quot;q&quot;thread_creation_count&quot;q&quot;thread_creation_caller_count&quot;q&quot;thread_set_state_count&quot;q&quot;thread_set_state_caller_count&quot;q}}'/>
<struct name='task_extmod_info_data_t' type='{task_extmod_info=&quot;task_uuid&quot;[16C]&quot;extmod_statistics&quot;{vm_extmod_statistics=&quot;task_for_pid_count&quot;q&quot;task_for_pid_caller_count&quot;q&quot;thread_creation_count&quot;q&quot;thread_creation_caller_count&quot;q&quot;thread_set_state_count&quot;q&quot;thread_set_state_caller_count&quot;q}}'/>
<struct name='task_extmod_info_t' type='{task_extmod_info=&quot;task_uuid&quot;[16C]&quot;extmod_statistics&quot;{vm_extmod_statistics=&quot;task_for_pid_count&quot;q&quot;task_for_pid_caller_count&quot;q&quot;thread_creation_count&quot;q&quot;thread_creation_caller_count&quot;q&quot;thread_set_state_count&quot;q&quot;thread_set_state_caller_count&quot;q}}'/>
<struct name='task_kernelmemory_info' type='{task_kernelmemory_info=&quot;total_palloc&quot;Q&quot;total_pfree&quot;Q&quot;total_salloc&quot;Q&quot;total_sfree&quot;Q}'/>
<struct name='task_kernelmemory_info_data_t' type='{task_kernelmemory_info=&quot;total_palloc&quot;Q&quot;total_pfree&quot;Q&quot;total_salloc&quot;Q&quot;total_sfree&quot;Q}'/>
<struct name='task_kernelmemory_info_t' type='{task_kernelmemory_info=&quot;total_palloc&quot;Q&quot;total_pfree&quot;Q&quot;total_salloc&quot;Q&quot;total_sfree&quot;Q}'/>
<struct name='task_thread_times_info' type='{task_thread_times_info=&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}}'/>
<struct name='task_thread_times_info_data_t' type='{task_thread_times_info=&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}}'/>
<struct name='task_thread_times_info_t' type='{task_thread_times_info=&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}}'/>
<struct name='thread_affinity_policy' type='{thread_affinity_policy=&quot;affinity_tag&quot;i}'/>
<struct name='thread_affinity_policy_data_t' type='{thread_affinity_policy=&quot;affinity_tag&quot;i}'/>
<struct name='thread_affinity_policy_t' type='{thread_affinity_policy=&quot;affinity_tag&quot;i}'/>
<struct name='thread_background_policy' type='{thread_background_policy=&quot;priority&quot;i}'/>
<struct name='thread_background_policy_data_t' type='{thread_background_policy=&quot;priority&quot;i}'/>
<struct name='thread_background_policy_t' type='{thread_background_policy=&quot;priority&quot;i}'/>
<struct name='thread_basic_info' type='{thread_basic_info=&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;cpu_usage&quot;i&quot;policy&quot;i&quot;run_state&quot;i&quot;flags&quot;i&quot;suspend_count&quot;i&quot;sleep_time&quot;i}'/>
<struct name='thread_basic_info_data_t' type='{thread_basic_info=&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;cpu_usage&quot;i&quot;policy&quot;i&quot;run_state&quot;i&quot;flags&quot;i&quot;suspend_count&quot;i&quot;sleep_time&quot;i}'/>
<struct name='thread_basic_info_t' type='{thread_basic_info=&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;cpu_usage&quot;i&quot;policy&quot;i&quot;run_state&quot;i&quot;flags&quot;i&quot;suspend_count&quot;i&quot;sleep_time&quot;i}'/>
<struct name='thread_extended_policy' type64='{thread_extended_policy=&quot;timeshare&quot;I}' type='{thread_extended_policy=&quot;timeshare&quot;i}'/>
<struct name='thread_extended_policy_data_t' type64='{thread_extended_policy=&quot;timeshare&quot;I}' type='{thread_extended_policy=&quot;timeshare&quot;i}'/>
<struct name='thread_extended_policy_t' type64='{thread_extended_policy=&quot;timeshare&quot;I}' type='{thread_extended_policy=&quot;timeshare&quot;i}'/>
<struct name='thread_identifier_info' type='{thread_identifier_info=&quot;thread_id&quot;Q&quot;thread_handle&quot;Q&quot;dispatch_qaddr&quot;Q}'/>
<struct name='thread_identifier_info_data_t' type='{thread_identifier_info=&quot;thread_id&quot;Q&quot;thread_handle&quot;Q&quot;dispatch_qaddr&quot;Q}'/>
<struct name='thread_identifier_info_t' type='{thread_identifier_info=&quot;thread_id&quot;Q&quot;thread_handle&quot;Q&quot;dispatch_qaddr&quot;Q}'/>
<struct name='thread_precedence_policy' type='{thread_precedence_policy=&quot;importance&quot;i}'/>
<struct name='thread_precedence_policy_data_t' type='{thread_precedence_policy=&quot;importance&quot;i}'/>
<struct name='thread_precedence_policy_t' type='{thread_precedence_policy=&quot;importance&quot;i}'/>
<struct name='thread_standard_policy' type='{thread_standard_policy=&quot;no_data&quot;I}'/>
<struct name='thread_standard_policy_data_t' type='{thread_standard_policy=&quot;no_data&quot;I}'/>
<struct name='thread_standard_policy_t' type='{thread_standard_policy=&quot;no_data&quot;I}'/>
<struct name='thread_time_constraint_policy' type64='{thread_time_constraint_policy=&quot;period&quot;I&quot;computation&quot;I&quot;constraint&quot;I&quot;preemptible&quot;I}' type='{thread_time_constraint_policy=&quot;period&quot;I&quot;computation&quot;I&quot;constraint&quot;I&quot;preemptible&quot;i}'/>
<struct name='thread_time_constraint_policy_data_t' type64='{thread_time_constraint_policy=&quot;period&quot;I&quot;computation&quot;I&quot;constraint&quot;I&quot;preemptible&quot;I}' type='{thread_time_constraint_policy=&quot;period&quot;I&quot;computation&quot;I&quot;constraint&quot;I&quot;preemptible&quot;i}'/>
<struct name='thread_time_constraint_policy_t' type64='{thread_time_constraint_policy=&quot;period&quot;I&quot;computation&quot;I&quot;constraint&quot;I&quot;preemptible&quot;I}' type='{thread_time_constraint_policy=&quot;period&quot;I&quot;computation&quot;I&quot;constraint&quot;I&quot;preemptible&quot;i}'/>
<struct name='time_value' type='{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}'/>
<struct name='time_value_t' type='{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}'/>
<struct name='vm_extmod_statistics' type='{vm_extmod_statistics=&quot;task_for_pid_count&quot;q&quot;task_for_pid_caller_count&quot;q&quot;thread_creation_count&quot;q&quot;thread_creation_caller_count&quot;q&quot;thread_set_state_count&quot;q&quot;thread_set_state_caller_count&quot;q}'/>
<struct name='vm_extmod_statistics_data_t' type='{vm_extmod_statistics=&quot;task_for_pid_count&quot;q&quot;task_for_pid_caller_count&quot;q&quot;thread_creation_count&quot;q&quot;thread_creation_caller_count&quot;q&quot;thread_set_state_count&quot;q&quot;thread_set_state_caller_count&quot;q}'/>
<struct name='vm_extmod_statistics_t' type='{vm_extmod_statistics=&quot;task_for_pid_count&quot;q&quot;task_for_pid_caller_count&quot;q&quot;thread_creation_count&quot;q&quot;thread_creation_caller_count&quot;q&quot;thread_set_state_count&quot;q&quot;thread_set_state_caller_count&quot;q}'/>
<struct name='vm_page_info_basic' type='{vm_page_info_basic=&quot;disposition&quot;i&quot;ref_count&quot;i&quot;object_id&quot;Q&quot;offset&quot;Q&quot;depth&quot;i&quot;__pad&quot;i}'/>
<struct name='vm_page_info_basic_data_t' type='{vm_page_info_basic=&quot;disposition&quot;i&quot;ref_count&quot;i&quot;object_id&quot;Q&quot;offset&quot;Q&quot;depth&quot;i&quot;__pad&quot;i}'/>
<struct name='vm_page_info_basic_t' type='{vm_page_info_basic=&quot;disposition&quot;i&quot;ref_count&quot;i&quot;object_id&quot;Q&quot;offset&quot;Q&quot;depth&quot;i&quot;__pad&quot;i}'/>
<struct name='vm_read_entry' type64='{vm_read_entry=&quot;address&quot;Q&quot;size&quot;Q}' type='{vm_read_entry=&quot;address&quot;I&quot;size&quot;I}'/>
<struct name='vm_region_basic_info' type64='{vm_region_basic_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;I&quot;reserved&quot;I&quot;offset&quot;I&quot;behavior&quot;i&quot;user_wired_count&quot;S}' type='{vm_region_basic_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;i&quot;reserved&quot;i&quot;offset&quot;I&quot;behavior&quot;i&quot;user_wired_count&quot;S}'/>
<struct name='vm_region_basic_info_64' type64='{vm_region_basic_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;I&quot;reserved&quot;I&quot;offset&quot;Q&quot;behavior&quot;i&quot;user_wired_count&quot;S}' type='{vm_region_basic_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;i&quot;reserved&quot;i&quot;offset&quot;Q&quot;behavior&quot;i&quot;user_wired_count&quot;S}'/>
<struct name='vm_region_basic_info_64_t' type64='{vm_region_basic_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;I&quot;reserved&quot;I&quot;offset&quot;Q&quot;behavior&quot;i&quot;user_wired_count&quot;S}' type='{vm_region_basic_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;i&quot;reserved&quot;i&quot;offset&quot;Q&quot;behavior&quot;i&quot;user_wired_count&quot;S}'/>
<struct name='vm_region_basic_info_data_64_t' type64='{vm_region_basic_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;I&quot;reserved&quot;I&quot;offset&quot;Q&quot;behavior&quot;i&quot;user_wired_count&quot;S}' type='{vm_region_basic_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;i&quot;reserved&quot;i&quot;offset&quot;Q&quot;behavior&quot;i&quot;user_wired_count&quot;S}'/>
<struct name='vm_region_basic_info_data_t' type64='{vm_region_basic_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;I&quot;reserved&quot;I&quot;offset&quot;I&quot;behavior&quot;i&quot;user_wired_count&quot;S}' type='{vm_region_basic_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;i&quot;reserved&quot;i&quot;offset&quot;I&quot;behavior&quot;i&quot;user_wired_count&quot;S}'/>
<struct name='vm_region_basic_info_t' type64='{vm_region_basic_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;I&quot;reserved&quot;I&quot;offset&quot;I&quot;behavior&quot;i&quot;user_wired_count&quot;S}' type='{vm_region_basic_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;i&quot;reserved&quot;i&quot;offset&quot;I&quot;behavior&quot;i&quot;user_wired_count&quot;S}'/>
<struct name='vm_region_extended_info' type='{vm_region_extended_info=&quot;protection&quot;i&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C}'/>
<struct name='vm_region_extended_info_data_t' type='{vm_region_extended_info=&quot;protection&quot;i&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C}'/>
<struct name='vm_region_extended_info_t' type='{vm_region_extended_info=&quot;protection&quot;i&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C}'/>
<struct name='vm_region_submap_info' type64='{vm_region_submap_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;I&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type='{vm_region_submap_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;I&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}'/>
<struct name='vm_region_submap_info_64' type64='{vm_region_submap_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type='{vm_region_submap_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}'/>
<struct name='vm_region_submap_info_64_t' type64='{vm_region_submap_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type='{vm_region_submap_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}'/>
<struct name='vm_region_submap_info_data_64_t' type64='{vm_region_submap_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type='{vm_region_submap_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}'/>
<struct name='vm_region_submap_info_data_t' type64='{vm_region_submap_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;I&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type='{vm_region_submap_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;I&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}'/>
<struct name='vm_region_submap_info_t' type64='{vm_region_submap_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;I&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type='{vm_region_submap_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;I&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}'/>
<struct name='vm_region_submap_short_info_64' type64='{vm_region_submap_short_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type='{vm_region_submap_short_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}'/>
<struct name='vm_region_submap_short_info_64_t' type64='{vm_region_submap_short_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type='{vm_region_submap_short_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}'/>
<struct name='vm_region_submap_short_info_data_64_t' type64='{vm_region_submap_short_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type='{vm_region_submap_short_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}'/>
<struct name='vm_region_top_info' type='{vm_region_top_info=&quot;obj_id&quot;I&quot;ref_count&quot;I&quot;private_pages_resident&quot;I&quot;shared_pages_resident&quot;I&quot;share_mode&quot;C}'/>
<struct name='vm_region_top_info_data_t' type='{vm_region_top_info=&quot;obj_id&quot;I&quot;ref_count&quot;I&quot;private_pages_resident&quot;I&quot;shared_pages_resident&quot;I&quot;share_mode&quot;C}'/>
<struct name='vm_region_top_info_t' type='{vm_region_top_info=&quot;obj_id&quot;I&quot;ref_count&quot;I&quot;private_pages_resident&quot;I&quot;shared_pages_resident&quot;I&quot;share_mode&quot;C}'/>
<struct name='vm_statistics' type='{vm_statistics=&quot;free_count&quot;I&quot;active_count&quot;I&quot;inactive_count&quot;I&quot;wire_count&quot;I&quot;zero_fill_count&quot;I&quot;reactivations&quot;I&quot;pageins&quot;I&quot;pageouts&quot;I&quot;faults&quot;I&quot;cow_faults&quot;I&quot;lookups&quot;I&quot;hits&quot;I&quot;purgeable_count&quot;I&quot;purges&quot;I&quot;speculative_count&quot;I}'/>
<struct name='vm_statistics64' type='{vm_statistics64=&quot;free_count&quot;I&quot;active_count&quot;I&quot;inactive_count&quot;I&quot;wire_count&quot;I&quot;zero_fill_count&quot;Q&quot;reactivations&quot;Q&quot;pageins&quot;Q&quot;pageouts&quot;Q&quot;faults&quot;Q&quot;cow_faults&quot;Q&quot;lookups&quot;Q&quot;hits&quot;Q&quot;purges&quot;Q&quot;purgeable_count&quot;I&quot;speculative_count&quot;I}'/>
<struct name='vm_statistics64_data_t' type='{vm_statistics64=&quot;free_count&quot;I&quot;active_count&quot;I&quot;inactive_count&quot;I&quot;wire_count&quot;I&quot;zero_fill_count&quot;Q&quot;reactivations&quot;Q&quot;pageins&quot;Q&quot;pageouts&quot;Q&quot;faults&quot;Q&quot;cow_faults&quot;Q&quot;lookups&quot;Q&quot;hits&quot;Q&quot;purges&quot;Q&quot;purgeable_count&quot;I&quot;speculative_count&quot;I}'/>
<struct name='vm_statistics64_t' type='{vm_statistics64=&quot;free_count&quot;I&quot;active_count&quot;I&quot;inactive_count&quot;I&quot;wire_count&quot;I&quot;zero_fill_count&quot;Q&quot;reactivations&quot;Q&quot;pageins&quot;Q&quot;pageouts&quot;Q&quot;faults&quot;Q&quot;cow_faults&quot;Q&quot;lookups&quot;Q&quot;hits&quot;Q&quot;purges&quot;Q&quot;purgeable_count&quot;I&quot;speculative_count&quot;I}'/>
<struct name='vm_statistics_data_t' type='{vm_statistics=&quot;free_count&quot;I&quot;active_count&quot;I&quot;inactive_count&quot;I&quot;wire_count&quot;I&quot;zero_fill_count&quot;I&quot;reactivations&quot;I&quot;pageins&quot;I&quot;pageouts&quot;I&quot;faults&quot;I&quot;cow_faults&quot;I&quot;lookups&quot;I&quot;hits&quot;I&quot;purgeable_count&quot;I&quot;purges&quot;I&quot;speculative_count&quot;I}'/>
<struct name='vm_statistics_t' type='{vm_statistics=&quot;free_count&quot;I&quot;active_count&quot;I&quot;inactive_count&quot;I&quot;wire_count&quot;I&quot;zero_fill_count&quot;I&quot;reactivations&quot;I&quot;pageins&quot;I&quot;pageouts&quot;I&quot;faults&quot;I&quot;cow_faults&quot;I&quot;lookups&quot;I&quot;hits&quot;I&quot;purgeable_count&quot;I&quot;purges&quot;I&quot;speculative_count&quot;I}'/>
<struct name='x86_avx_state32_t' type='{__darwin_i386_avx_state=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[224c]&quot;__fpu_reserved1&quot;i&quot;__avx_reserved1&quot;[64c]&quot;__fpu_ymmh0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}}'/>
<struct name='x86_avx_state64_t' type='{__darwin_x86_avx_state64=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm8&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm9&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm10&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm11&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm12&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm13&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm14&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm15&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[96c]&quot;__fpu_reserved1&quot;i&quot;__avx_reserved1&quot;[64c]&quot;__fpu_ymmh0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh8&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh9&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh10&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh11&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh12&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh13&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh14&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh15&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}}'/>
<struct name='x86_debug_state' type='{x86_debug_state=&quot;dsh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;uds&quot;(?=&quot;ds32&quot;{__darwin_x86_debug_state32=&quot;__dr0&quot;I&quot;__dr1&quot;I&quot;__dr2&quot;I&quot;__dr3&quot;I&quot;__dr4&quot;I&quot;__dr5&quot;I&quot;__dr6&quot;I&quot;__dr7&quot;I}&quot;ds64&quot;{__darwin_x86_debug_state64=&quot;__dr0&quot;Q&quot;__dr1&quot;Q&quot;__dr2&quot;Q&quot;__dr3&quot;Q&quot;__dr4&quot;Q&quot;__dr5&quot;Q&quot;__dr6&quot;Q&quot;__dr7&quot;Q})}'/>
<struct name='x86_debug_state32_t' type='{__darwin_x86_debug_state32=&quot;__dr0&quot;I&quot;__dr1&quot;I&quot;__dr2&quot;I&quot;__dr3&quot;I&quot;__dr4&quot;I&quot;__dr5&quot;I&quot;__dr6&quot;I&quot;__dr7&quot;I}'/>
<struct name='x86_debug_state64_t' type='{__darwin_x86_debug_state64=&quot;__dr0&quot;Q&quot;__dr1&quot;Q&quot;__dr2&quot;Q&quot;__dr3&quot;Q&quot;__dr4&quot;Q&quot;__dr5&quot;Q&quot;__dr6&quot;Q&quot;__dr7&quot;Q}'/>
<struct name='x86_debug_state_t' type='{x86_debug_state=&quot;dsh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;uds&quot;(?=&quot;ds32&quot;{__darwin_x86_debug_state32=&quot;__dr0&quot;I&quot;__dr1&quot;I&quot;__dr2&quot;I&quot;__dr3&quot;I&quot;__dr4&quot;I&quot;__dr5&quot;I&quot;__dr6&quot;I&quot;__dr7&quot;I}&quot;ds64&quot;{__darwin_x86_debug_state64=&quot;__dr0&quot;Q&quot;__dr1&quot;Q&quot;__dr2&quot;Q&quot;__dr3&quot;Q&quot;__dr4&quot;Q&quot;__dr5&quot;Q&quot;__dr6&quot;Q&quot;__dr7&quot;Q})}'/>
<struct name='x86_exception_state' type='{x86_exception_state=&quot;esh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;ues&quot;(?=&quot;es32&quot;{__darwin_i386_exception_state=&quot;__trapno&quot;S&quot;__cpu&quot;S&quot;__err&quot;I&quot;__faultvaddr&quot;I}&quot;es64&quot;{__darwin_x86_exception_state64=&quot;__trapno&quot;S&quot;__cpu&quot;S&quot;__err&quot;I&quot;__faultvaddr&quot;Q})}'/>
<struct name='x86_exception_state32_t' type='{__darwin_i386_exception_state=&quot;__trapno&quot;S&quot;__cpu&quot;S&quot;__err&quot;I&quot;__faultvaddr&quot;I}'/>
<struct name='x86_exception_state64_t' type='{__darwin_x86_exception_state64=&quot;__trapno&quot;S&quot;__cpu&quot;S&quot;__err&quot;I&quot;__faultvaddr&quot;Q}'/>
<struct name='x86_exception_state_t' type='{x86_exception_state=&quot;esh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;ues&quot;(?=&quot;es32&quot;{__darwin_i386_exception_state=&quot;__trapno&quot;S&quot;__cpu&quot;S&quot;__err&quot;I&quot;__faultvaddr&quot;I}&quot;es64&quot;{__darwin_x86_exception_state64=&quot;__trapno&quot;S&quot;__cpu&quot;S&quot;__err&quot;I&quot;__faultvaddr&quot;Q})}'/>
<struct name='x86_float_state' type='{x86_float_state=&quot;fsh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;ufs&quot;(?=&quot;fs32&quot;{__darwin_i386_float_state=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[224c]&quot;__fpu_reserved1&quot;i}&quot;fs64&quot;{__darwin_x86_float_state64=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm8&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm9&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm10&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm11&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm12&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm13&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm14&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm15&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[96c]&quot;__fpu_reserved1&quot;i})}'/>
<struct name='x86_float_state32_t' type='{__darwin_i386_float_state=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[224c]&quot;__fpu_reserved1&quot;i}'/>
<struct name='x86_float_state64_t' type='{__darwin_x86_float_state64=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm8&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm9&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm10&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm11&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm12&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm13&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm14&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm15&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[96c]&quot;__fpu_reserved1&quot;i}'/>
<struct name='x86_float_state_t' type='{x86_float_state=&quot;fsh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;ufs&quot;(?=&quot;fs32&quot;{__darwin_i386_float_state=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[224c]&quot;__fpu_reserved1&quot;i}&quot;fs64&quot;{__darwin_x86_float_state64=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm8&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm9&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm10&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm11&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm12&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm13&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm14&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm15&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[96c]&quot;__fpu_reserved1&quot;i})}'/>
<struct name='x86_seg_load_fault32' type='{x86_seg_load_fault32=&quot;trapno&quot;S&quot;cpu&quot;S&quot;err&quot;I&quot;eip&quot;I&quot;cs&quot;I&quot;efl&quot;I}'/>
<struct name='x86_state_hdr' type='{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}'/>
<struct name='x86_state_hdr_t' type='{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}'/>
<struct name='x86_thread_state' type='{x86_thread_state=&quot;tsh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;uts&quot;(?=&quot;ts32&quot;{__darwin_i386_thread_state=&quot;__eax&quot;I&quot;__ebx&quot;I&quot;__ecx&quot;I&quot;__edx&quot;I&quot;__edi&quot;I&quot;__esi&quot;I&quot;__ebp&quot;I&quot;__esp&quot;I&quot;__ss&quot;I&quot;__eflags&quot;I&quot;__eip&quot;I&quot;__cs&quot;I&quot;__ds&quot;I&quot;__es&quot;I&quot;__fs&quot;I&quot;__gs&quot;I}&quot;ts64&quot;{__darwin_x86_thread_state64=&quot;__rax&quot;Q&quot;__rbx&quot;Q&quot;__rcx&quot;Q&quot;__rdx&quot;Q&quot;__rdi&quot;Q&quot;__rsi&quot;Q&quot;__rbp&quot;Q&quot;__rsp&quot;Q&quot;__r8&quot;Q&quot;__r9&quot;Q&quot;__r10&quot;Q&quot;__r11&quot;Q&quot;__r12&quot;Q&quot;__r13&quot;Q&quot;__r14&quot;Q&quot;__r15&quot;Q&quot;__rip&quot;Q&quot;__rflags&quot;Q&quot;__cs&quot;Q&quot;__fs&quot;Q&quot;__gs&quot;Q})}'/>
<struct name='x86_thread_state32_t' type='{__darwin_i386_thread_state=&quot;__eax&quot;I&quot;__ebx&quot;I&quot;__ecx&quot;I&quot;__edx&quot;I&quot;__edi&quot;I&quot;__esi&quot;I&quot;__ebp&quot;I&quot;__esp&quot;I&quot;__ss&quot;I&quot;__eflags&quot;I&quot;__eip&quot;I&quot;__cs&quot;I&quot;__ds&quot;I&quot;__es&quot;I&quot;__fs&quot;I&quot;__gs&quot;I}'/>
<struct name='x86_thread_state64_t' type='{__darwin_x86_thread_state64=&quot;__rax&quot;Q&quot;__rbx&quot;Q&quot;__rcx&quot;Q&quot;__rdx&quot;Q&quot;__rdi&quot;Q&quot;__rsi&quot;Q&quot;__rbp&quot;Q&quot;__rsp&quot;Q&quot;__r8&quot;Q&quot;__r9&quot;Q&quot;__r10&quot;Q&quot;__r11&quot;Q&quot;__r12&quot;Q&quot;__r13&quot;Q&quot;__r14&quot;Q&quot;__r15&quot;Q&quot;__rip&quot;Q&quot;__rflags&quot;Q&quot;__cs&quot;Q&quot;__fs&quot;Q&quot;__gs&quot;Q}'/>
<struct name='x86_thread_state_t' type='{x86_thread_state=&quot;tsh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;uts&quot;(?=&quot;ts32&quot;{__darwin_i386_thread_state=&quot;__eax&quot;I&quot;__ebx&quot;I&quot;__ecx&quot;I&quot;__edx&quot;I&quot;__edi&quot;I&quot;__esi&quot;I&quot;__ebp&quot;I&quot;__esp&quot;I&quot;__ss&quot;I&quot;__eflags&quot;I&quot;__eip&quot;I&quot;__cs&quot;I&quot;__ds&quot;I&quot;__es&quot;I&quot;__fs&quot;I&quot;__gs&quot;I}&quot;ts64&quot;{__darwin_x86_thread_state64=&quot;__rax&quot;Q&quot;__rbx&quot;Q&quot;__rcx&quot;Q&quot;__rdx&quot;Q&quot;__rdi&quot;Q&quot;__rsi&quot;Q&quot;__rbp&quot;Q&quot;__rsp&quot;Q&quot;__r8&quot;Q&quot;__r9&quot;Q&quot;__r10&quot;Q&quot;__r11&quot;Q&quot;__r12&quot;Q&quot;__r13&quot;Q&quot;__r14&quot;Q&quot;__r15&quot;Q&quot;__rip&quot;Q&quot;__rflags&quot;Q&quot;__cs&quot;Q&quot;__fs&quot;Q&quot;__gs&quot;Q})}'/>
<opaque name='CCCryptorRef' type='^{_CCCryptor=}'/>
<opaque name='aslclient' type='^{__aslclient=}'/>
<opaque name='aslmsg' type='^{__aslmsg=}'/>
<opaque name='aslresponse' type='^{__aslresponse=}'/>
<opaque name='copyfile_state_t' type='^{_copyfile_state=}'/>
<opaque name='launch_data_t' type='^{_launch_data=}'/>
<constant name='CCrfc3394_iv' type='*'/>
<constant name='CCrfc3394_ivLen' type64='Q' type='L'/>
<constant name='KERNEL_AUDIT_TOKEN' type='{_audit_token_t=[8I]}'/>
<constant name='KERNEL_SECURITY_TOKEN' type='{_security_token_t=[2I]}'/>
<constant name='NDR_record' type='{_NDR_record_t=CCCCCCCC}'/>
<constant name='bootstrap_port' type='I'/>
<constant name='kSBXProfileNoInternet' type='^c'/>
<constant name='kSBXProfileNoNetwork' type='^c'/>
<constant name='kSBXProfileNoWrite' type='^c'/>
<constant name='kSBXProfileNoWriteExceptTemporary' type='^c'/>
<constant name='kSBXProfilePureComputation' type='^c'/>
<constant name='mach_task_self_' type='I'/>
<constant name='port_obj_table' type='^{port_obj_tentry=^vi}'/>
<constant name='port_obj_table_size' type='i'/>
<constant name='vm_page_mask' type64='Q' type='I'/>
<constant name='vm_page_shift' type='i'/>
<constant name='vm_page_size' type64='Q' type='I'/>
<string_constant name='ASL_KEY_AUX_DATA' value='ASLAuxData'/>
<string_constant name='ASL_KEY_AUX_TITLE' value='ASLAuxTitle'/>
<string_constant name='ASL_KEY_AUX_URL' value='ASLAuxURL'/>
<string_constant name='ASL_KEY_AUX_UTI' value='ASLAuxUTI'/>
<string_constant name='ASL_KEY_EXPIRE_TIME' value='ASLExpireTime'/>
<string_constant name='ASL_KEY_FACILITY' value='Facility'/>
<string_constant name='ASL_KEY_GID' value='GID'/>
<string_constant name='ASL_KEY_HOST' value='Host'/>
<string_constant name='ASL_KEY_LEVEL' value='Level'/>
<string_constant name='ASL_KEY_MSG' value='Message'/>
<string_constant name='ASL_KEY_MSG_ID' value='ASLMessageID'/>
<string_constant name='ASL_KEY_OPTION' value='ASLOption'/>
<string_constant name='ASL_KEY_PID' value='PID'/>
<string_constant name='ASL_KEY_READ_GID' value='ReadGID'/>
<string_constant name='ASL_KEY_READ_UID' value='ReadUID'/>
<string_constant name='ASL_KEY_REF_PID' value='RefPID'/>
<string_constant name='ASL_KEY_REF_PROC' value='RefProc'/>
<string_constant name='ASL_KEY_SENDER' value='Sender'/>
<string_constant name='ASL_KEY_SENDER_INSTANCE' value='SenderInstance'/>
<string_constant name='ASL_KEY_SESSION' value='Session'/>
<string_constant name='ASL_KEY_TIME' value='Time'/>
<string_constant name='ASL_KEY_TIME_NSEC' value='TimeNanoSec'/>
<string_constant name='ASL_KEY_UID' value='UID'/>
<string_constant name='ASL_STRING_ALERT' value='Alert'/>
<string_constant name='ASL_STRING_CRIT' value='Critical'/>
<string_constant name='ASL_STRING_DEBUG' value='Debug'/>
<string_constant name='ASL_STRING_EMERG' value='Emergency'/>
<string_constant name='ASL_STRING_ERR' value='Error'/>
<string_constant name='ASL_STRING_INFO' value='Info'/>
<string_constant name='ASL_STRING_NOTICE' value='Notice'/>
<string_constant name='ASL_STRING_WARNING' value='Warning'/>
<string_constant name='COPYFILE_DISABLE_VAR' value='COPYFILE_DISABLE'/>
<string_constant name='LAUNCH_JOBINETDCOMPATIBILITY_WAIT' value='Wait'/>
<string_constant name='LAUNCH_JOBKEY_ABANDONPROCESSGROUP' value='AbandonProcessGroup'/>
<string_constant name='LAUNCH_JOBKEY_BONJOURFDS' value='BonjourFDs'/>
<string_constant name='LAUNCH_JOBKEY_CAL_DAY' value='Day'/>
<string_constant name='LAUNCH_JOBKEY_CAL_HOUR' value='Hour'/>
<string_constant name='LAUNCH_JOBKEY_CAL_MINUTE' value='Minute'/>
<string_constant name='LAUNCH_JOBKEY_CAL_MONTH' value='Month'/>
<string_constant name='LAUNCH_JOBKEY_CAL_WEEKDAY' value='Weekday'/>
<string_constant name='LAUNCH_JOBKEY_DEBUG' value='Debug'/>
<string_constant name='LAUNCH_JOBKEY_DISABLED' value='Disabled'/>
<string_constant name='LAUNCH_JOBKEY_DISABLED_MACHINETYPE' value='MachineType'/>
<string_constant name='LAUNCH_JOBKEY_DISABLED_MODELNAME' value='ModelName'/>
<string_constant name='LAUNCH_JOBKEY_ENABLEGLOBBING' value='EnableGlobbing'/>
<string_constant name='LAUNCH_JOBKEY_ENABLETRANSACTIONS' value='EnableTransactions'/>
<string_constant name='LAUNCH_JOBKEY_ENVIRONMENTVARIABLES' value='EnvironmentVariables'/>
<string_constant name='LAUNCH_JOBKEY_EXITTIMEOUT' value='ExitTimeOut'/>
<string_constant name='LAUNCH_JOBKEY_GROUPNAME' value='GroupName'/>
<string_constant name='LAUNCH_JOBKEY_HARDRESOURCELIMITS' value='HardResourceLimits'/>
<string_constant name='LAUNCH_JOBKEY_HOPEFULLYEXITSFIRST' value='HopefullyExitsFirst'/>
<string_constant name='LAUNCH_JOBKEY_HOPEFULLYEXITSLAST' value='HopefullyExitsLast'/>
<string_constant name='LAUNCH_JOBKEY_IGNOREPROCESSGROUPATSHUTDOWN' value='IgnoreProcessGroupAtShutdown'/>
<string_constant name='LAUNCH_JOBKEY_INETDCOMPATIBILITY' value='inetdCompatibility'/>
<string_constant name='LAUNCH_JOBKEY_INITGROUPS' value='InitGroups'/>
<string_constant name='LAUNCH_JOBKEY_KEEPALIVE' value='KeepAlive'/>
<string_constant name='LAUNCH_JOBKEY_KEEPALIVE_AFTERINITIALDEMAND' value='AfterInitialDemand'/>
<string_constant name='LAUNCH_JOBKEY_KEEPALIVE_CRASHED' value='Crashed'/>
<string_constant name='LAUNCH_JOBKEY_KEEPALIVE_NETWORKSTATE' value='NetworkState'/>
<string_constant name='LAUNCH_JOBKEY_KEEPALIVE_OTHERJOBACTIVE' value='OtherJobActive'/>
<string_constant name='LAUNCH_JOBKEY_KEEPALIVE_OTHERJOBENABLED' value='OtherJobEnabled'/>
<string_constant name='LAUNCH_JOBKEY_KEEPALIVE_PATHSTATE' value='PathState'/>
<string_constant name='LAUNCH_JOBKEY_KEEPALIVE_SUCCESSFULEXIT' value='SuccessfulExit'/>
<string_constant name='LAUNCH_JOBKEY_LABEL' value='Label'/>
<string_constant name='LAUNCH_JOBKEY_LASTEXITSTATUS' value='LastExitStatus'/>
<string_constant name='LAUNCH_JOBKEY_LAUNCHEVENTS' value='LaunchEvents'/>
<string_constant name='LAUNCH_JOBKEY_LAUNCHONLYONCE' value='LaunchOnlyOnce'/>
<string_constant name='LAUNCH_JOBKEY_LIMITLOADFROMHARDWARE' value='LimitLoadFromHardware'/>
<string_constant name='LAUNCH_JOBKEY_LIMITLOADFROMHOSTS' value='LimitLoadFromHosts'/>
<string_constant name='LAUNCH_JOBKEY_LIMITLOADTOHARDWARE' value='LimitLoadToHardware'/>
<string_constant name='LAUNCH_JOBKEY_LIMITLOADTOHOSTS' value='LimitLoadToHosts'/>
<string_constant name='LAUNCH_JOBKEY_LIMITLOADTOSESSIONTYPE' value='LimitLoadToSessionType'/>
<string_constant name='LAUNCH_JOBKEY_LOWPRIORITYIO' value='LowPriorityIO'/>
<string_constant name='LAUNCH_JOBKEY_MACHSERVICELOOKUPPOLICIES' value='MachServiceLookupPolicies'/>
<string_constant name='LAUNCH_JOBKEY_MACHSERVICES' value='MachServices'/>
<string_constant name='LAUNCH_JOBKEY_MACH_DRAINMESSAGESONCRASH' value='DrainMessagesOnCrash'/>
<string_constant name='LAUNCH_JOBKEY_MACH_HIDEUNTILCHECKIN' value='HideUntilCheckIn'/>
<string_constant name='LAUNCH_JOBKEY_MACH_PINGEVENTUPDATES' value='PingEventUpdates'/>
<string_constant name='LAUNCH_JOBKEY_MACH_RESETATCLOSE' value='ResetAtClose'/>
<string_constant name='LAUNCH_JOBKEY_NICE' value='Nice'/>
<string_constant name='LAUNCH_JOBKEY_ONDEMAND' value='OnDemand'/>
<string_constant name='LAUNCH_JOBKEY_PID' value='PID'/>
<string_constant name='LAUNCH_JOBKEY_POLICIES' value='Policies'/>
<string_constant name='LAUNCH_JOBKEY_PROGRAM' value='Program'/>
<string_constant name='LAUNCH_JOBKEY_PROGRAMARGUMENTS' value='ProgramArguments'/>
<string_constant name='LAUNCH_JOBKEY_QUEUEDIRECTORIES' value='QueueDirectories'/>
<string_constant name='LAUNCH_JOBKEY_RESOURCELIMIT_CORE' value='Core'/>
<string_constant name='LAUNCH_JOBKEY_RESOURCELIMIT_CPU' value='CPU'/>
<string_constant name='LAUNCH_JOBKEY_RESOURCELIMIT_DATA' value='Data'/>
<string_constant name='LAUNCH_JOBKEY_RESOURCELIMIT_FSIZE' value='FileSize'/>
<string_constant name='LAUNCH_JOBKEY_RESOURCELIMIT_MEMLOCK' value='MemoryLock'/>
<string_constant name='LAUNCH_JOBKEY_RESOURCELIMIT_NOFILE' value='NumberOfFiles'/>
<string_constant name='LAUNCH_JOBKEY_RESOURCELIMIT_NPROC' value='NumberOfProcesses'/>
<string_constant name='LAUNCH_JOBKEY_RESOURCELIMIT_RSS' value='ResidentSetSize'/>
<string_constant name='LAUNCH_JOBKEY_RESOURCELIMIT_STACK' value='Stack'/>
<string_constant name='LAUNCH_JOBKEY_ROOTDIRECTORY' value='RootDirectory'/>
<string_constant name='LAUNCH_JOBKEY_RUNATLOAD' value='RunAtLoad'/>
<string_constant name='LAUNCH_JOBKEY_SESSIONCREATE' value='SessionCreate'/>
<string_constant name='LAUNCH_JOBKEY_SOCKETS' value='Sockets'/>
<string_constant name='LAUNCH_JOBKEY_SOFTRESOURCELIMITS' value='SoftResourceLimits'/>
<string_constant name='LAUNCH_JOBKEY_STANDARDERRORPATH' value='StandardErrorPath'/>
<string_constant name='LAUNCH_JOBKEY_STANDARDINPATH' value='StandardInPath'/>
<string_constant name='LAUNCH_JOBKEY_STANDARDOUTPATH' value='StandardOutPath'/>
<string_constant name='LAUNCH_JOBKEY_STARTCALENDARINTERVAL' value='StartCalendarInterval'/>
<string_constant name='LAUNCH_JOBKEY_STARTINTERVAL' value='StartInterval'/>
<string_constant name='LAUNCH_JOBKEY_STARTONMOUNT' value='StartOnMount'/>
<string_constant name='LAUNCH_JOBKEY_THROTTLEINTERVAL' value='ThrottleInterval'/>
<string_constant name='LAUNCH_JOBKEY_TIMEOUT' value='TimeOut'/>
<string_constant name='LAUNCH_JOBKEY_UMASK' value='Umask'/>
<string_constant name='LAUNCH_JOBKEY_USERENVIRONMENTVARIABLES' value='UserEnvironmentVariables'/>
<string_constant name='LAUNCH_JOBKEY_USERNAME' value='UserName'/>
<string_constant name='LAUNCH_JOBKEY_WAITFORDEBUGGER' value='WaitForDebugger'/>
<string_constant name='LAUNCH_JOBKEY_WATCHPATHS' value='WatchPaths'/>
<string_constant name='LAUNCH_JOBKEY_WORKINGDIRECTORY' value='WorkingDirectory'/>
<string_constant name='LAUNCH_JOBPOLICY_DENYCREATINGOTHERJOBS' value='DenyCreatingOtherJobs'/>
<string_constant name='LAUNCH_JOBSOCKETKEY_BONJOUR' value='Bonjour'/>
<string_constant name='LAUNCH_JOBSOCKETKEY_FAMILY' value='SockFamily'/>
<string_constant name='LAUNCH_JOBSOCKETKEY_MULTICASTGROUP' value='MulticastGroup'/>
<string_constant name='LAUNCH_JOBSOCKETKEY_NODENAME' value='SockNodeName'/>
<string_constant name='LAUNCH_JOBSOCKETKEY_PASSIVE' value='SockPassive'/>
<string_constant name='LAUNCH_JOBSOCKETKEY_PATHMODE' value='SockPathMode'/>
<string_constant name='LAUNCH_JOBSOCKETKEY_PATHNAME' value='SockPathName'/>
<string_constant name='LAUNCH_JOBSOCKETKEY_PROTOCOL' value='SockProtocol'/>
<string_constant name='LAUNCH_JOBSOCKETKEY_SECUREWITHKEY' value='SecureSocketWithKey'/>
<string_constant name='LAUNCH_JOBSOCKETKEY_SERVICENAME' value='SockServiceName'/>
<string_constant name='LAUNCH_JOBSOCKETKEY_TYPE' value='SockType'/>
<string_constant name='LAUNCH_KEY_CHECKIN' value='CheckIn'/>
<string_constant name='LAUNCH_KEY_GETJOB' value='GetJob'/>
<string_constant name='LAUNCH_KEY_GETJOBS' value='GetJobs'/>
<string_constant name='LAUNCH_KEY_REMOVEJOB' value='RemoveJob'/>
<string_constant name='LAUNCH_KEY_STARTJOB' value='StartJob'/>
<string_constant name='LAUNCH_KEY_STOPJOB' value='StopJob'/>
<string_constant name='LAUNCH_KEY_SUBMITJOB' value='SubmitJob'/>
<string_constant name='kNotifyASLDBUpdate' value='com.apple.system.logger.message'/>
<string_constant name='kNotifyClockSet' value='com.apple.system.clock_set'/>
<string_constant name='kNotifyDSCacheInvalidation' value='com.apple.system.DirectoryService.InvalidateCache'/>
<string_constant name='kNotifyDSCacheInvalidationGroup' value='com.apple.system.DirectoryService.InvalidateCache.group'/>
<string_constant name='kNotifyDSCacheInvalidationHost' value='com.apple.system.DirectoryService.InvalidateCache.host'/>
<string_constant name='kNotifyDSCacheInvalidationService' value='com.apple.system.DirectoryService.InvalidateCache.service'/>
<string_constant name='kNotifyDSCacheInvalidationUser' value='com.apple.system.DirectoryService.InvalidateCache.user'/>
<string_constant name='kNotifySCHostNameChange' value='com.apple.system.hostname'/>
<string_constant name='kNotifySCNetworkChange' value='com.apple.system.config.network_change'/>
<string_constant name='kNotifyTimeZoneChange' value='com.apple.system.timezone'/>
<string_constant name='kNotifyVFSLowDiskSpace' value='com.apple.system.lowdiskspace'/>
<string_constant name='kNotifyVFSLowDiskSpaceOtherFS' value='com.apple.system.lowdiskspace.user'/>
<string_constant name='kNotifyVFSLowDiskSpaceRootFS' value='com.apple.system.lowdiskspace.system'/>
<string_constant name='kNotifyVFSMount' value='com.apple.system.kernel.mount'/>
<string_constant name='kNotifyVFSUnmount' value='com.apple.system.kernel.unmount'/>
<enum name='ALARM_NULL' value='0'/>
<enum name='ALRMTYPE' value='255'/>
<enum name='ASL_FILTER_MASK_ALERT' value='2'/>
<enum name='ASL_FILTER_MASK_CRIT' value='4'/>
<enum name='ASL_FILTER_MASK_DEBUG' value='128'/>
<enum name='ASL_FILTER_MASK_EMERG' value='1'/>
<enum name='ASL_FILTER_MASK_ERR' value='8'/>
<enum name='ASL_FILTER_MASK_INFO' value='64'/>
<enum name='ASL_FILTER_MASK_NOTICE' value='32'/>
<enum name='ASL_FILTER_MASK_WARNING' value='16'/>
<enum name='ASL_LEVEL_ALERT' value='1'/>
<enum name='ASL_LEVEL_CRIT' value='2'/>
<enum name='ASL_LEVEL_DEBUG' value='7'/>
<enum name='ASL_LEVEL_EMERG' value='0'/>
<enum name='ASL_LEVEL_ERR' value='3'/>
<enum name='ASL_LEVEL_INFO' value='6'/>
<enum name='ASL_LEVEL_NOTICE' value='5'/>
<enum name='ASL_LEVEL_WARNING' value='4'/>
<enum name='ASL_OPT_NO_DELAY' value='2'/>
<enum name='ASL_OPT_NO_REMOTE' value='4'/>
<enum name='ASL_OPT_STDERR' value='1'/>
<enum name='ASL_QUERY_OP_CASEFOLD' value='16'/>
<enum name='ASL_QUERY_OP_EQUAL' value='1'/>
<enum name='ASL_QUERY_OP_GREATER' value='2'/>
<enum name='ASL_QUERY_OP_GREATER_EQUAL' value='3'/>
<enum name='ASL_QUERY_OP_LESS' value='4'/>
<enum name='ASL_QUERY_OP_LESS_EQUAL' value='5'/>
<enum name='ASL_QUERY_OP_NOT_EQUAL' value='6'/>
<enum name='ASL_QUERY_OP_NUMERIC' value='128'/>
<enum name='ASL_QUERY_OP_PREFIX' value='32'/>
<enum name='ASL_QUERY_OP_REGEX' value='256'/>
<enum name='ASL_QUERY_OP_SUBSTRING' value='96'/>
<enum name='ASL_QUERY_OP_SUFFIX' value='64'/>
<enum name='ASL_QUERY_OP_TRUE' value='7'/>
<enum name='ASL_TYPE_MSG' value='0'/>
<enum name='ASL_TYPE_QUERY' value='1'/>
<enum name='BYTE_SIZE' value='8'/>
<enum name='CALENDAR_CLOCK' value='1'/>
<enum name='CC_HMAC_CONTEXT_SIZE' value='96'/>
<enum name='CC_MD2_BLOCK_BYTES' value='64'/>
<enum name='CC_MD2_BLOCK_LONG' value='16'/>
<enum name='CC_MD2_DIGEST_LENGTH' value='16'/>
<enum name='CC_MD4_BLOCK_BYTES' value='64'/>
<enum name='CC_MD4_BLOCK_LONG' value='16'/>
<enum name='CC_MD4_DIGEST_LENGTH' value='16'/>
<enum name='CC_MD5_BLOCK_BYTES' value='64'/>
<enum name='CC_MD5_BLOCK_LONG' value='16'/>
<enum name='CC_MD5_DIGEST_LENGTH' value='16'/>
<enum name='CC_SHA1_BLOCK_BYTES' value='64'/>
<enum name='CC_SHA1_BLOCK_LONG' value='16'/>
<enum name='CC_SHA1_DIGEST_LENGTH' value='20'/>
<enum name='CC_SHA224_BLOCK_BYTES' value='64'/>
<enum name='CC_SHA224_DIGEST_LENGTH' value='28'/>
<enum name='CC_SHA256_BLOCK_BYTES' value='64'/>
<enum name='CC_SHA256_DIGEST_LENGTH' value='32'/>
<enum name='CC_SHA384_BLOCK_BYTES' value='128'/>
<enum name='CC_SHA384_DIGEST_LENGTH' value='48'/>
<enum name='CC_SHA512_BLOCK_BYTES' value='128'/>
<enum name='CC_SHA512_DIGEST_LENGTH' value='64'/>
<enum name='CLOCK_ALARM_CURRES' value='3'/>
<enum name='CLOCK_ALARM_MAXRES' value='5'/>
<enum name='CLOCK_ALARM_MINRES' value='4'/>
<enum name='CLOCK_GET_TIME_RES' value='1'/>
<enum name='CLOCK_NULL' value='0'/>
<enum name='COPYFILE_ACL' value='1'/>
<enum name='COPYFILE_ALL' value='15'/>
<enum name='COPYFILE_CHECK' value='65536'/>
<enum name='COPYFILE_CONTINUE' value='0'/>
<enum name='COPYFILE_COPY_DATA' value='4'/>
<enum name='COPYFILE_COPY_XATTR' value='5'/>
<enum name='COPYFILE_DATA' value='8'/>
<enum name='COPYFILE_ERR' value='3'/>
<enum name='COPYFILE_EXCL' value='131072'/>
<enum name='COPYFILE_FINISH' value='2'/>
<enum name='COPYFILE_METADATA' value='7'/>
<enum name='COPYFILE_MOVE' value='1048576'/>
<enum name='COPYFILE_NOFOLLOW' value='786432'/>
<enum name='COPYFILE_NOFOLLOW_DST' value='524288'/>
<enum name='COPYFILE_NOFOLLOW_SRC' value='262144'/>
<enum name='COPYFILE_PACK' value='4194304'/>
<enum name='COPYFILE_PROGRESS' value='4'/>
<enum name='COPYFILE_QUIT' value='2'/>
<enum name='COPYFILE_RECURSE_DIR' value='2'/>
<enum name='COPYFILE_RECURSE_DIR_CLEANUP' value='3'/>
<enum name='COPYFILE_RECURSE_ERROR' value='0'/>
<enum name='COPYFILE_RECURSE_FILE' value='1'/>
<enum name='COPYFILE_RECURSIVE' value='32768'/>
<enum name='COPYFILE_SECURITY' value='3'/>
<enum name='COPYFILE_SKIP' value='1'/>
<enum name='COPYFILE_START' value='1'/>
<enum name='COPYFILE_STAT' value='2'/>
<enum name='COPYFILE_STATE_COPIED' value='8'/>
<enum name='COPYFILE_STATE_DST_FD' value='3'/>
<enum name='COPYFILE_STATE_DST_FILENAME' value='4'/>
<enum name='COPYFILE_STATE_QUARANTINE' value='5'/>
<enum name='COPYFILE_STATE_SRC_FD' value='1'/>
<enum name='COPYFILE_STATE_SRC_FILENAME' value='2'/>
<enum name='COPYFILE_STATE_STATUS_CB' value='6'/>
<enum name='COPYFILE_STATE_STATUS_CTX' value='7'/>
<enum name='COPYFILE_STATE_XATTRNAME' value='9'/>
<enum name='COPYFILE_UNLINK' value='2097152'/>
<enum name='COPYFILE_UNPACK' value='8388608'/>
<enum name='COPYFILE_VERBOSE' value='1073741824'/>
<enum name='COPYFILE_XATTR' value='4'/>
<enum name='CPUFAMILY_ARM_11' value='2415272152'/>
<enum name='CPUFAMILY_ARM_13' value='214503012'/>
<enum name='CPUFAMILY_ARM_14' value='2517073649'/>
<enum name='CPUFAMILY_ARM_9' value='3878847406'/>
<enum name='CPUFAMILY_ARM_XSCALE' value='1404044789'/>
<enum name='CPUFAMILY_INTEL_6_13' value='2855483691'/>
<enum name='CPUFAMILY_INTEL_6_14' value='1943433984'/>
<enum name='CPUFAMILY_INTEL_6_15' value='1114597871'/>
<enum name='CPUFAMILY_INTEL_6_23' value='2028621756'/>
<enum name='CPUFAMILY_INTEL_6_26' value='1801080018'/>
<enum name='CPUFAMILY_INTEL_CORE' value='1943433984'/>
<enum name='CPUFAMILY_INTEL_CORE2' value='1114597871'/>
<enum name='CPUFAMILY_INTEL_MEROM' value='1114597871'/>
<enum name='CPUFAMILY_INTEL_NEHALEM' value='1801080018'/>
<enum name='CPUFAMILY_INTEL_PENRYN' value='2028621756'/>
<enum name='CPUFAMILY_INTEL_SANDYBRIDGE' value='1418770316'/>
<enum name='CPUFAMILY_INTEL_WESTMERE' value='1463508716'/>
<enum name='CPUFAMILY_INTEL_YONAH' value='1943433984'/>
<enum name='CPUFAMILY_POWERPC_G3' value='3471054153'/>
<enum name='CPUFAMILY_POWERPC_G4' value='2009171118'/>
<enum name='CPUFAMILY_POWERPC_G5' value='3983988906'/>
<enum name='CPUFAMILY_UNKNOWN' value='0'/>
<enum name='CPU_ARCH_ABI64' value='16777216'/>
<enum name='CPU_ARCH_MASK' value='4278190080'/>
<enum name='CPU_STATE_IDLE' value='2'/>
<enum name='CPU_STATE_MAX' value='4'/>
<enum name='CPU_STATE_NICE' value='3'/>
<enum name='CPU_STATE_SYSTEM' value='1'/>
<enum name='CPU_STATE_USER' value='0'/>
<enum name='CPU_SUBTYPE_386' value='3'/>
<enum name='CPU_SUBTYPE_486' value='4'/>
<enum name='CPU_SUBTYPE_486SX' value='132'/>
<enum name='CPU_SUBTYPE_586' value='5'/>
<enum name='CPU_SUBTYPE_ARM_ALL' value='0'/>
<enum name='CPU_SUBTYPE_ARM_V4T' value='5'/>
<enum name='CPU_SUBTYPE_ARM_V5TEJ' value='7'/>
<enum name='CPU_SUBTYPE_ARM_V6' value='6'/>
<enum name='CPU_SUBTYPE_ARM_V7' value='9'/>
<enum name='CPU_SUBTYPE_ARM_XSCALE' value='8'/>
<enum name='CPU_SUBTYPE_BIG_ENDIAN' value='1'/>
<enum name='CPU_SUBTYPE_CELERON' value='103'/>
<enum name='CPU_SUBTYPE_CELERON_MOBILE' value='119'/>
<enum name='CPU_SUBTYPE_HPPA_7100' value='0'/>
<enum name='CPU_SUBTYPE_HPPA_7100LC' value='1'/>
<enum name='CPU_SUBTYPE_HPPA_ALL' value='0'/>
<enum name='CPU_SUBTYPE_I386_ALL' value='3'/>
<enum name='CPU_SUBTYPE_I860_860' value='1'/>
<enum name='CPU_SUBTYPE_I860_ALL' value='0'/>
<enum name='CPU_SUBTYPE_INTEL_FAMILY_MAX' value='15'/>
<enum name='CPU_SUBTYPE_INTEL_MODEL_ALL' value='0'/>
<enum name='CPU_SUBTYPE_ITANIUM' value='11'/>
<enum name='CPU_SUBTYPE_ITANIUM_2' value='27'/>
<enum name='CPU_SUBTYPE_LIB64' value='2147483648'/>
<enum name='CPU_SUBTYPE_LITTLE_ENDIAN' value='0'/>
<enum name='CPU_SUBTYPE_MASK' value='4278190080'/>
<enum name='CPU_SUBTYPE_MC68030' value='1'/>
<enum name='CPU_SUBTYPE_MC68030_ONLY' value='3'/>
<enum name='CPU_SUBTYPE_MC68040' value='2'/>
<enum name='CPU_SUBTYPE_MC680x0_ALL' value='1'/>
<enum name='CPU_SUBTYPE_MC88000_ALL' value='0'/>
<enum name='CPU_SUBTYPE_MC88100' value='1'/>
<enum name='CPU_SUBTYPE_MC88110' value='2'/>
<enum name='CPU_SUBTYPE_MC98000_ALL' value='0'/>
<enum name='CPU_SUBTYPE_MC98601' value='1'/>
<enum name='CPU_SUBTYPE_MIPS_ALL' value='0'/>
<enum name='CPU_SUBTYPE_MIPS_R2000' value='5'/>
<enum name='CPU_SUBTYPE_MIPS_R2000a' value='4'/>
<enum name='CPU_SUBTYPE_MIPS_R2300' value='1'/>
<enum name='CPU_SUBTYPE_MIPS_R2600' value='2'/>
<enum name='CPU_SUBTYPE_MIPS_R2800' value='3'/>
<enum name='CPU_SUBTYPE_MIPS_R3000' value='7'/>
<enum name='CPU_SUBTYPE_MIPS_R3000a' value='6'/>
<enum name='CPU_SUBTYPE_MULTIPLE' value='-1'/>
<enum name='CPU_SUBTYPE_PENT' value='5'/>
<enum name='CPU_SUBTYPE_PENTII_M3' value='54'/>
<enum name='CPU_SUBTYPE_PENTII_M5' value='86'/>
<enum name='CPU_SUBTYPE_PENTIUM_3' value='8'/>
<enum name='CPU_SUBTYPE_PENTIUM_3_M' value='24'/>
<enum name='CPU_SUBTYPE_PENTIUM_3_XEON' value='40'/>
<enum name='CPU_SUBTYPE_PENTIUM_4' value='10'/>
<enum name='CPU_SUBTYPE_PENTIUM_4_M' value='26'/>
<enum name='CPU_SUBTYPE_PENTIUM_M' value='9'/>
<enum name='CPU_SUBTYPE_PENTPRO' value='22'/>
<enum name='CPU_SUBTYPE_POWERPC_601' value='1'/>
<enum name='CPU_SUBTYPE_POWERPC_602' value='2'/>
<enum name='CPU_SUBTYPE_POWERPC_603' value='3'/>
<enum name='CPU_SUBTYPE_POWERPC_603e' value='4'/>
<enum name='CPU_SUBTYPE_POWERPC_603ev' value='5'/>
<enum name='CPU_SUBTYPE_POWERPC_604' value='6'/>
<enum name='CPU_SUBTYPE_POWERPC_604e' value='7'/>
<enum name='CPU_SUBTYPE_POWERPC_620' value='8'/>
<enum name='CPU_SUBTYPE_POWERPC_7400' value='10'/>
<enum name='CPU_SUBTYPE_POWERPC_7450' value='11'/>
<enum name='CPU_SUBTYPE_POWERPC_750' value='9'/>
<enum name='CPU_SUBTYPE_POWERPC_970' value='100'/>
<enum name='CPU_SUBTYPE_POWERPC_ALL' value='0'/>
<enum name='CPU_SUBTYPE_SPARC_ALL' value='0'/>
<enum name='CPU_SUBTYPE_UVAXI' value='5'/>
<enum name='CPU_SUBTYPE_UVAXII' value='6'/>
<enum name='CPU_SUBTYPE_UVAXIII' value='12'/>
<enum name='CPU_SUBTYPE_VAX730' value='4'/>
<enum name='CPU_SUBTYPE_VAX750' value='3'/>
<enum name='CPU_SUBTYPE_VAX780' value='1'/>
<enum name='CPU_SUBTYPE_VAX785' value='2'/>
<enum name='CPU_SUBTYPE_VAX8200' value='7'/>
<enum name='CPU_SUBTYPE_VAX8500' value='8'/>
<enum name='CPU_SUBTYPE_VAX8600' value='9'/>
<enum name='CPU_SUBTYPE_VAX8650' value='10'/>
<enum name='CPU_SUBTYPE_VAX8800' value='11'/>
<enum name='CPU_SUBTYPE_VAX_ALL' value='0'/>
<enum name='CPU_SUBTYPE_X86_64_ALL' value='3'/>
<enum name='CPU_SUBTYPE_X86_ALL' value='3'/>
<enum name='CPU_SUBTYPE_X86_ARCH1' value='4'/>
<enum name='CPU_SUBTYPE_XEON' value='12'/>
<enum name='CPU_SUBTYPE_XEON_MP' value='28'/>
<enum name='CPU_THREADTYPE_INTEL_HTT' value='1'/>
<enum name='CPU_THREADTYPE_NONE' value='0'/>
<enum name='CPU_TYPE_ANY' value='-1'/>
<enum name='CPU_TYPE_ARM' value='12'/>
<enum name='CPU_TYPE_HPPA' value='11'/>
<enum name='CPU_TYPE_I386' value='7'/>
<enum name='CPU_TYPE_I860' value='15'/>
<enum name='CPU_TYPE_MC680x0' value='6'/>
<enum name='CPU_TYPE_MC88000' value='13'/>
<enum name='CPU_TYPE_MC98000' value='10'/>
<enum name='CPU_TYPE_POWERPC' value='18'/>
<enum name='CPU_TYPE_POWERPC64' value='16777234'/>
<enum name='CPU_TYPE_SPARC' value='14'/>
<enum name='CPU_TYPE_VAX' value='1'/>
<enum name='CPU_TYPE_X86' value='7'/>
<enum name='CPU_TYPE_X86_64' value='16777223'/>
<enum name='ENVIRONMENT_SLOT' value='1'/>
<enum name='ERR_SUCCESS' value='0'/>
<enum name='EXCEPTION_CODE_MAX' value='2'/>
<enum name='EXCEPTION_DEFAULT' value='1'/>
<enum name='EXCEPTION_STATE' value='2'/>
<enum name='EXCEPTION_STATE_IDENTITY' value='3'/>
<enum name='EXC_ARITHMETIC' value='3'/>
<enum name='EXC_BAD_ACCESS' value='1'/>
<enum name='EXC_BAD_INSTRUCTION' value='2'/>
<enum name='EXC_BREAKPOINT' value='6'/>
<enum name='EXC_CRASH' value='10'/>
<enum name='EXC_EMULATION' value='4'/>
<enum name='EXC_I386_ALIGNFLT' value='17'/>
<enum name='EXC_I386_BOUND' value='7'/>
<enum name='EXC_I386_BOUNDFLT' value='5'/>
<enum name='EXC_I386_BPT' value='2'/>
<enum name='EXC_I386_BPTFLT' value='3'/>
<enum name='EXC_I386_DBLFLT' value='8'/>
<enum name='EXC_I386_DIV' value='1'/>
<enum name='EXC_I386_DIVERR' value='0'/>
<enum name='EXC_I386_EMERR' value='6'/>
<enum name='EXC_I386_ENDPERR' value='33'/>
<enum name='EXC_I386_ENOEXTFLT' value='32'/>
<enum name='EXC_I386_EXTERR' value='5'/>
<enum name='EXC_I386_EXTERRFLT' value='16'/>
<enum name='EXC_I386_EXTOVR' value='4'/>
<enum name='EXC_I386_EXTOVRFLT' value='9'/>
<enum name='EXC_I386_GPFLT' value='13'/>
<enum name='EXC_I386_INTO' value='2'/>
<enum name='EXC_I386_INTOFLT' value='4'/>
<enum name='EXC_I386_INVOP' value='1'/>
<enum name='EXC_I386_INVOPFLT' value='6'/>
<enum name='EXC_I386_INVTSSFLT' value='10'/>
<enum name='EXC_I386_NMIFLT' value='2'/>
<enum name='EXC_I386_NOEXT' value='3'/>
<enum name='EXC_I386_NOEXTFLT' value='7'/>
<enum name='EXC_I386_PGFLT' value='14'/>
<enum name='EXC_I386_SEGNPFLT' value='11'/>
<enum name='EXC_I386_SGL' value='1'/>
<enum name='EXC_I386_SGLSTP' value='1'/>
<enum name='EXC_I386_SSEEXTERR' value='8'/>
<enum name='EXC_I386_STKFLT' value='12'/>
<enum name='EXC_MACH_SYSCALL' value='8'/>
<enum name='EXC_MASK_ALL' value='1022'/>
<enum name='EXC_MASK_ARITHMETIC' value='8'/>
<enum name='EXC_MASK_BAD_ACCESS' value='2'/>
<enum name='EXC_MASK_BAD_INSTRUCTION' value='4'/>
<enum name='EXC_MASK_BREAKPOINT' value='64'/>
<enum name='EXC_MASK_CRASH' value='1024'/>
<enum name='EXC_MASK_EMULATION' value='16'/>
<enum name='EXC_MASK_MACHINE' value='0'/>
<enum name='EXC_MASK_MACH_SYSCALL' value='256'/>
<enum name='EXC_MASK_RPC_ALERT' value='512'/>
<enum name='EXC_MASK_SOFTWARE' value='32'/>
<enum name='EXC_MASK_SYSCALL' value='128'/>
<enum name='EXC_RPC_ALERT' value='9'/>
<enum name='EXC_SOFTWARE' value='5'/>
<enum name='EXC_SOFT_SIGNAL' value='65539'/>
<enum name='EXC_SYSCALL' value='7'/>
<enum name='EXC_TYPES_COUNT' value='11'/>
<enum name='FIRST_EXCEPTION' value='1'/>
<enum name='GLOBAL_SHARED_DATA_SEGMENT' value='2684354560'/>
<enum name='GLOBAL_SHARED_SEGMENT_MASK' value='4026531840'/>
<enum name='GLOBAL_SHARED_TEXT_SEGMENT' value='2415919104'/>
<enum name='HOST_AMFID_PORT' value='18'/>
<enum name='HOST_AUDIT_CONTROL_PORT' value='9'/>
<enum name='HOST_AUTOMOUNTD_PORT' value='11'/>
<enum name='HOST_BASIC_INFO' value='1'/>
<enum name='HOST_BASIC_INFO_COUNT' value='12'/>
<enum name='HOST_CALENDAR_CHANGED_REPLYID' value='950'/>
<enum name='HOST_CHUD_PORT' value='16'/>
<enum name='HOST_CPU_LOAD_INFO' value='3'/>
<enum name='HOST_CPU_LOAD_INFO_COUNT' value='4'/>
<enum name='HOST_DYNAMIC_PAGER_PORT' value='8'/>
<enum name='HOST_EXTMOD_INFO64' value='5'/>
<enum name='HOST_EXTMOD_INFO64_COUNT' value='12'/>
<enum name='HOST_EXTMOD_INFO64_LATEST_COUNT' value='12'/>
<enum name='HOST_INFO_MAX' value='1024'/>
<enum name='HOST_IO_MASTER_PORT' value='3'/>
<enum name='HOST_KEXTD_PORT' value='15'/>
<enum name='HOST_LOAD_INFO' value='1'/>
<enum name='HOST_LOAD_INFO_COUNT' value='6'/>
<enum name='HOST_LOCAL_NODE' value='-1'/>
<enum name='HOST_LOCKD_PORT' value='12'/>
<enum name='HOST_MACH_MSG_TRAP' value='8'/>
<enum name='HOST_MAX_SPECIAL_KERNEL_PORT' value='7'/>
<enum name='HOST_MAX_SPECIAL_PORT' value='19'/>
<enum name='HOST_NOTIFY_CALENDAR_CHANGE' value='0'/>
<enum name='HOST_NOTIFY_TYPE_MAX' value='0'/>
<enum name='HOST_NULL' value='0'/>
<enum name='HOST_PORT' value='1'/>
<enum name='HOST_PRIORITY_INFO' value='5'/>
<enum name='HOST_PRIORITY_INFO_COUNT' value='8'/>
<enum name='HOST_PRIV_NULL' value='0'/>
<enum name='HOST_PRIV_PORT' value='2'/>
<enum name='HOST_REBOOT_DEBUGGER' value='4096'/>
<enum name='HOST_REBOOT_HALT' value='8'/>
<enum name='HOST_REBOOT_UPSDELAY' value='256'/>
<enum name='HOST_RESOURCE_SIZES' value='4'/>
<enum name='HOST_RESOURCE_SIZES_COUNT' value='5'/>
<enum name='HOST_SCHED_INFO' value='3'/>
<enum name='HOST_SCHED_INFO_COUNT' value='2'/>
<enum name='HOST_SEATBELT_PORT' value='14'/>
<enum name='HOST_SECURITY_NULL' value='0'/>
<enum name='HOST_SECURITY_PORT' value='0'/>
<enum name='HOST_SEMAPHORE_TRAPS' value='7'/>
<enum name='HOST_UNFREED_PORT' value='17'/>
<enum name='HOST_USER_NOTIFICATION_PORT' value='10'/>
<enum name='HOST_VM_INFO' value='2'/>
<enum name='HOST_VM_INFO64' value='4'/>
<enum name='HOST_VM_INFO64_COUNT' value='24'/>
<enum name='HOST_VM_INFO64_LATEST_COUNT' value='24'/>
<enum name='HOST_VM_INFO_COUNT' value='15'/>
<enum name='HOST_VM_INFO_LATEST_COUNT' value='15'/>
<enum name='HOST_VM_INFO_REV0_COUNT' value='12'/>
<enum name='HOST_VM_INFO_REV1_COUNT' value='14'/>
<enum name='HOST_VM_INFO_REV2_COUNT' value='15'/>
<enum name='I386_EXCEPTION_STATE_COUNT' value='3'/>
<enum name='I386_LPGBYTES' value='2097152'/>
<enum name='I386_LPGMASK' value='2097151'/>
<enum name='I386_LPGSHIFT' value='21'/>
<enum name='I386_PGBYTES' value='4096'/>
<enum name='I386_PGSHIFT' value='12'/>
<enum name='IPC_SPACE_NULL' value='0'/>
<enum name='ITEM_TASKS' value='1'/>
<enum name='ITEM_THREADS' value='0'/>
<enum name='ITEM_VM' value='2'/>
<enum name='KERNEL_BOOT_INFO_MAX' value='4096'/>
<enum name='KERNEL_VERSION_MAX' value='512'/>
<enum name='KERN_ABORTED' value='14'/>
<enum name='KERN_ALREADY_IN_SET' value='11'/>
<enum name='KERN_ALREADY_WAITING' value='30'/>
<enum name='KERN_CODESIGN_ERROR' value='50'/>
<enum name='KERN_CODE_SELECTOR' value='8'/>
<enum name='KERN_DATA_SELECTOR' value='16'/>
<enum name='KERN_DEFAULT_SET' value='31'/>
<enum name='KERN_EXCEPTION_PROTECTED' value='32'/>
<enum name='KERN_FAILURE' value='5'/>
<enum name='KERN_INVALID_ADDRESS' value='1'/>
<enum name='KERN_INVALID_ARGUMENT' value='4'/>
<enum name='KERN_INVALID_CAPABILITY' value='20'/>
<enum name='KERN_INVALID_HOST' value='22'/>
<enum name='KERN_INVALID_LEDGER' value='33'/>
<enum name='KERN_INVALID_MEMORY_CONTROL' value='34'/>
<enum name='KERN_INVALID_NAME' value='15'/>
<enum name='KERN_INVALID_OBJECT' value='29'/>
<enum name='KERN_INVALID_POLICY' value='28'/>
<enum name='KERN_INVALID_PROCESSOR_SET' value='26'/>
<enum name='KERN_INVALID_RIGHT' value='17'/>
<enum name='KERN_INVALID_SECURITY' value='35'/>
<enum name='KERN_INVALID_TASK' value='16'/>
<enum name='KERN_INVALID_VALUE' value='18'/>
<enum name='KERN_LOCK_OWNED' value='40'/>
<enum name='KERN_LOCK_OWNED_SELF' value='41'/>
<enum name='KERN_LOCK_SET_DESTROYED' value='38'/>
<enum name='KERN_LOCK_UNSTABLE' value='39'/>
<enum name='KERN_MEMORY_DATA_MOVED' value='24'/>
<enum name='KERN_MEMORY_ERROR' value='10'/>
<enum name='KERN_MEMORY_FAILURE' value='9'/>
<enum name='KERN_MEMORY_PRESENT' value='23'/>
<enum name='KERN_MEMORY_RESTART_COPY' value='25'/>
<enum name='KERN_NAME_EXISTS' value='13'/>
<enum name='KERN_NODE_DOWN' value='47'/>
<enum name='KERN_NOT_DEPRESSED' value='36'/>
<enum name='KERN_NOT_IN_SET' value='12'/>
<enum name='KERN_NOT_RECEIVER' value='7'/>
<enum name='KERN_NOT_SUPPORTED' value='46'/>
<enum name='KERN_NOT_WAITING' value='48'/>
<enum name='KERN_NO_ACCESS' value='8'/>
<enum name='KERN_NO_SPACE' value='3'/>
<enum name='KERN_OPERATION_TIMED_OUT' value='49'/>
<enum name='KERN_POLICY_LIMIT' value='27'/>
<enum name='KERN_PROTECTION_FAILURE' value='2'/>
<enum name='KERN_RESOURCE_SHORTAGE' value='6'/>
<enum name='KERN_RETURN_MAX' value='256'/>
<enum name='KERN_RIGHT_EXISTS' value='21'/>
<enum name='KERN_RPC_CONTINUE_ORPHAN' value='45'/>
<enum name='KERN_RPC_SERVER_TERMINATED' value='43'/>
<enum name='KERN_RPC_TERMINATE_ORPHAN' value='44'/>
<enum name='KERN_SEMAPHORE_DESTROYED' value='42'/>
<enum name='KERN_SUCCESS' value='0'/>
<enum name='KERN_TERMINATED' value='37'/>
<enum name='KERN_UREFS_OVERFLOW' value='19'/>
<enum name='KMOD_INFO_VERSION' value='1'/>
<enum name='KMOD_MAX_NAME' value='64'/>
<enum name='KMOD_RETURN_FAILURE' value='5'/>
<enum name='KMOD_RETURN_SUCCESS' value='0'/>
<enum name='LAUNCH_DATA_ARRAY' value='2'/>
<enum name='LAUNCH_DATA_BOOL' value='6'/>
<enum name='LAUNCH_DATA_DICTIONARY' value='1'/>
<enum name='LAUNCH_DATA_ERRNO' value='9'/>
<enum name='LAUNCH_DATA_FD' value='3'/>
<enum name='LAUNCH_DATA_INTEGER' value='4'/>
<enum name='LAUNCH_DATA_MACHPORT' value='10'/>
<enum name='LAUNCH_DATA_OPAQUE' value='8'/>
<enum name='LAUNCH_DATA_REAL' value='5'/>
<enum name='LAUNCH_DATA_STRING' value='7'/>
<enum name='LEDGER_ITEM_INFINITY' value='4294967295'/>
<enum name='LEDGER_NULL' value='0'/>
<enum name='LEDGER_N_ITEMS' value='3'/>
<enum name='LEDGER_UNLIMITED' value='0'/>
<enum name='LOAD_SCALE' value='1000'/>
<enum name='LOCK_SET_NULL' value='0'/>
<enum name='MACHINE_THREAD_STATE' value='7'/>
<enum name='MACHINE_THREAD_STATE_COUNT' value='44'/>
<enum name='MACH_EXCEPTION_CODES' value='2147483648'/>
<enum name='MACH_MSGH_BITS_CIRCULAR' value='1073741824'/>
<enum name='MACH_MSGH_BITS_COMPLEX' value='2147483648'/>
<enum name='MACH_MSGH_BITS_LOCAL_MASK' value='65280'/>
<enum name='MACH_MSGH_BITS_PORTS_MASK' value='65535'/>
<enum name='MACH_MSGH_BITS_REMOTE_MASK' value='255'/>
<enum name='MACH_MSGH_BITS_USED' value='3221291007'/>
<enum name='MACH_MSGH_BITS_USER' value='2147549183'/>
<enum name='MACH_MSGH_BITS_ZERO' value='0'/>
<enum name='MACH_MSGH_KIND_NORMAL' value='0'/>
<enum name='MACH_MSGH_KIND_NOTIFICATION' value='1'/>
<enum name='MACH_MSG_ALLOCATE' value='2'/>
<enum name='MACH_MSG_IPC_KERNEL' value='2048'/>
<enum name='MACH_MSG_IPC_SPACE' value='8192'/>
<enum name='MACH_MSG_MASK' value='15872'/>
<enum name='MACH_MSG_OOL_DESCRIPTOR' value='1'/>
<enum name='MACH_MSG_OOL_PORTS_DESCRIPTOR' value='2'/>
<enum name='MACH_MSG_OOL_VOLATILE_DESCRIPTOR' value='3'/>
<enum name='MACH_MSG_OPTION_NONE' value='0'/>
<enum name='MACH_MSG_OVERWRITE' value='3'/>
<enum name='MACH_MSG_PHYSICAL_COPY' value='0'/>
<enum name='MACH_MSG_PORT_DESCRIPTOR' value='0'/>
<enum name='MACH_MSG_SIZE_MAX' value='4294967295'/>
<enum name='MACH_MSG_SUCCESS' value='0'/>
<enum name='MACH_MSG_TIMEOUT_NONE' value='0'/>
<enum name='MACH_MSG_TRAILER_FORMAT_0' value='0'/>
<enum name='MACH_MSG_TRAILER_FORMAT_0_SIZE' value='20'/>
<enum name='MACH_MSG_TRAILER_MINIMUM_SIZE' value='8'/>
<enum name='MACH_MSG_TYPE_COPY_RECEIVE' value='22'/>
<enum name='MACH_MSG_TYPE_COPY_SEND' value='19'/>
<enum name='MACH_MSG_TYPE_LAST' value='22'/>
<enum name='MACH_MSG_TYPE_MAKE_SEND' value='20'/>
<enum name='MACH_MSG_TYPE_MAKE_SEND_ONCE' value='21'/>
<enum name='MACH_MSG_TYPE_MOVE_RECEIVE' value='16'/>
<enum name='MACH_MSG_TYPE_MOVE_SEND' value='17'/>
<enum name='MACH_MSG_TYPE_MOVE_SEND_ONCE' value='18'/>
<enum name='MACH_MSG_TYPE_POLYMORPHIC' value='4294967295'/>
<enum name='MACH_MSG_TYPE_PORT_NAME' value='15'/>
<enum name='MACH_MSG_TYPE_PORT_NONE' value='0'/>
<enum name='MACH_MSG_TYPE_PORT_RECEIVE' value='16'/>
<enum name='MACH_MSG_TYPE_PORT_SEND' value='17'/>
<enum name='MACH_MSG_TYPE_PORT_SEND_ONCE' value='18'/>
<enum name='MACH_MSG_VIRTUAL_COPY' value='1'/>
<enum name='MACH_MSG_VM_KERNEL' value='1024'/>
<enum name='MACH_MSG_VM_SPACE' value='4096'/>
<enum name='MACH_NOTIFY_DEAD_NAME' value='72'/>
<enum name='MACH_NOTIFY_FIRST' value='64'/>
<enum name='MACH_NOTIFY_LAST' value='77'/>
<enum name='MACH_NOTIFY_NO_SENDERS' value='70'/>
<enum name='MACH_NOTIFY_PORT_DELETED' value='65'/>
<enum name='MACH_NOTIFY_PORT_DESTROYED' value='69'/>
<enum name='MACH_NOTIFY_SEND_ONCE' value='71'/>
<enum name='MACH_NOTIFY_SEND_POSSIBLE' value='66'/>
<enum name='MACH_PORTS_SLOTS_USED' value='3'/>
<enum name='MACH_PORT_DEAD' value='4294967295'/>
<enum name='MACH_PORT_DNREQUESTS_SIZE' value='3'/>
<enum name='MACH_PORT_DNREQUESTS_SIZE_COUNT' value='1'/>
<enum name='MACH_PORT_LIMITS_INFO' value='1'/>
<enum name='MACH_PORT_LIMITS_INFO_COUNT' value='1'/>
<enum name='MACH_PORT_NULL' value='0'/>
<enum name='MACH_PORT_QLIMIT_BASIC' value='5'/>
<enum name='MACH_PORT_QLIMIT_DEFAULT' value='5'/>
<enum name='MACH_PORT_QLIMIT_KERNEL' value='65536'/>
<enum name='MACH_PORT_QLIMIT_LARGE' value='1024'/>
<enum name='MACH_PORT_QLIMIT_MAX' value='1024'/>
<enum name='MACH_PORT_QLIMIT_MIN' value='0'/>
<enum name='MACH_PORT_QLIMIT_SMALL' value='16'/>
<enum name='MACH_PORT_QLIMIT_ZERO' value='0'/>
<enum name='MACH_PORT_RECEIVE_STATUS' value='2'/>
<enum name='MACH_PORT_RECEIVE_STATUS_COUNT' value='10'/>
<enum name='MACH_PORT_RIGHT_DEAD_NAME' value='4'/>
<enum name='MACH_PORT_RIGHT_LABELH' value='5'/>
<enum name='MACH_PORT_RIGHT_NUMBER' value='6'/>
<enum name='MACH_PORT_RIGHT_PORT_SET' value='3'/>
<enum name='MACH_PORT_RIGHT_RECEIVE' value='1'/>
<enum name='MACH_PORT_RIGHT_SEND' value='0'/>
<enum name='MACH_PORT_RIGHT_SEND_ONCE' value='2'/>
<enum name='MACH_PORT_SRIGHTS_NONE' value='0'/>
<enum name='MACH_PORT_SRIGHTS_PRESENT' value='1'/>
<enum name='MACH_PORT_TYPE_ALL_RIGHTS' value='2031616'/>
<enum name='MACH_PORT_TYPE_DEAD_NAME' value='1048576'/>
<enum name='MACH_PORT_TYPE_DNREQUEST' value='2147483648'/>
<enum name='MACH_PORT_TYPE_LABELH' value='2097152'/>
<enum name='MACH_PORT_TYPE_NONE' value='0'/>
<enum name='MACH_PORT_TYPE_PORT_OR_DEAD' value='1507328'/>
<enum name='MACH_PORT_TYPE_PORT_RIGHTS' value='458752'/>
<enum name='MACH_PORT_TYPE_PORT_SET' value='524288'/>
<enum name='MACH_PORT_TYPE_RECEIVE' value='131072'/>
<enum name='MACH_PORT_TYPE_SEND' value='65536'/>
<enum name='MACH_PORT_TYPE_SEND_ONCE' value='262144'/>
<enum name='MACH_PORT_TYPE_SEND_RECEIVE' value='196608'/>
<enum name='MACH_PORT_TYPE_SEND_RIGHTS' value='327680'/>
<enum name='MACH_PORT_TYPE_SPREQUEST' value='1073741824'/>
<enum name='MACH_PORT_TYPE_SPREQUEST_DELAYED' value='536870912'/>
<enum name='MACH_RCV_BODY_ERROR' value='268451852'/>
<enum name='MACH_RCV_HEADER_ERROR' value='268451851'/>
<enum name='MACH_RCV_INTERRUPT' value='1024'/>
<enum name='MACH_RCV_INTERRUPTED' value='268451845'/>
<enum name='MACH_RCV_INVALID_DATA' value='268451848'/>
<enum name='MACH_RCV_INVALID_NAME' value='268451842'/>
<enum name='MACH_RCV_INVALID_NOTIFY' value='268451847'/>
<enum name='MACH_RCV_INVALID_TRAILER' value='268451855'/>
<enum name='MACH_RCV_INVALID_TYPE' value='268451853'/>
<enum name='MACH_RCV_IN_PROGRESS' value='268451841'/>
<enum name='MACH_RCV_IN_PROGRESS_TIMED' value='268451857'/>
<enum name='MACH_RCV_IN_SET' value='268451850'/>
<enum name='MACH_RCV_LARGE' value='4'/>
<enum name='MACH_RCV_MSG' value='2'/>
<enum name='MACH_RCV_NOTIFY' value='512'/>
<enum name='MACH_RCV_OVERWRITE' value='4096'/>
<enum name='MACH_RCV_PORT_CHANGED' value='268451846'/>
<enum name='MACH_RCV_PORT_DIED' value='268451849'/>
<enum name='MACH_RCV_SCATTER_SMALL' value='268451854'/>
<enum name='MACH_RCV_TIMED_OUT' value='268451843'/>
<enum name='MACH_RCV_TIMEOUT' value='256'/>
<enum name='MACH_RCV_TOO_LARGE' value='268451844'/>
<enum name='MACH_RCV_TRAILER_AUDIT' value='3'/>
<enum name='MACH_RCV_TRAILER_AV' value='7'/>
<enum name='MACH_RCV_TRAILER_CTX' value='4'/>
<enum name='MACH_RCV_TRAILER_LABELS' value='8'/>
<enum name='MACH_RCV_TRAILER_MASK' value='-16777216'/>
<enum name='MACH_RCV_TRAILER_NULL' value='0'/>
<enum name='MACH_RCV_TRAILER_SENDER' value='2'/>
<enum name='MACH_RCV_TRAILER_SEQNO' value='1'/>
<enum name='MACH_SEND_ALWAYS' value='65536'/>
<enum name='MACH_SEND_INTERRUPT' value='64'/>
<enum name='MACH_SEND_INTERRUPTED' value='268435463'/>
<enum name='MACH_SEND_INVALID_DATA' value='268435458'/>
<enum name='MACH_SEND_INVALID_DEST' value='268435459'/>
<enum name='MACH_SEND_INVALID_HEADER' value='268435472'/>
<enum name='MACH_SEND_INVALID_MEMORY' value='268435468'/>
<enum name='MACH_SEND_INVALID_NOTIFY' value='268435467'/>
<enum name='MACH_SEND_INVALID_REPLY' value='268435465'/>
<enum name='MACH_SEND_INVALID_RIGHT' value='268435466'/>
<enum name='MACH_SEND_INVALID_RT_OOL_SIZE' value='268435477'/>
<enum name='MACH_SEND_INVALID_TRAILER' value='268435473'/>
<enum name='MACH_SEND_INVALID_TYPE' value='268435471'/>
<enum name='MACH_SEND_IN_PROGRESS' value='268435457'/>
<enum name='MACH_SEND_MSG' value='1'/>
<enum name='MACH_SEND_MSG_TOO_SMALL' value='268435464'/>
<enum name='MACH_SEND_NOTIFY' value='128'/>
<enum name='MACH_SEND_NO_BUFFER' value='268435469'/>
<enum name='MACH_SEND_TIMED_OUT' value='268435460'/>
<enum name='MACH_SEND_TIMEOUT' value='16'/>
<enum name='MACH_SEND_TOO_LARGE' value='268435470'/>
<enum name='MACH_SEND_TRAILER' value='131072'/>
<enum name='MACH_VM_MAX_ADDRESS' value='140737486258176'/>
<enum name='MACH_VM_MIN_ADDRESS' value='0'/>
<enum name='MAP_MEM_COPYBACK' value='1'/>
<enum name='MAP_MEM_IO' value='2'/>
<enum name='MAP_MEM_NAMED_CREATE' value='131072'/>
<enum name='MAP_MEM_NAMED_REUSE' value='524288'/>
<enum name='MAP_MEM_NOOP' value='0'/>
<enum name='MAP_MEM_ONLY' value='65536'/>
<enum name='MAP_MEM_PURGABLE' value='262144'/>
<enum name='MAP_MEM_WCOMB' value='4'/>
<enum name='MAP_MEM_WTHRU' value='3'/>
<enum name='MATTR_CACHE' value='1'/>
<enum name='MATTR_MIGRATE' value='2'/>
<enum name='MATTR_REPLICATE' value='4'/>
<enum name='MATTR_VAL_CACHE_FLUSH' value='6'/>
<enum name='MATTR_VAL_CACHE_SYNC' value='9'/>
<enum name='MATTR_VAL_DCACHE_FLUSH' value='7'/>
<enum name='MATTR_VAL_GET' value='2'/>
<enum name='MATTR_VAL_GET_INFO' value='10'/>
<enum name='MATTR_VAL_ICACHE_FLUSH' value='8'/>
<enum name='MATTR_VAL_OFF' value='0'/>
<enum name='MATTR_VAL_ON' value='1'/>
<enum name='MAX_TRAILER_SIZE' value='68'/>
<enum name='MEMORY_OBJECT_ATTRIBUTE_INFO' value='14'/>
<enum name='MEMORY_OBJECT_ATTR_INFO_COUNT' value='4'/>
<enum name='MEMORY_OBJECT_BEHAVE_INFO_COUNT' value='5'/>
<enum name='MEMORY_OBJECT_BEHAVIOR_INFO' value='15'/>
<enum name='MEMORY_OBJECT_CONTROL_NULL' value='0'/>
<enum name='MEMORY_OBJECT_COPY_CALL' value='1'/>
<enum name='MEMORY_OBJECT_COPY_DELAY' value='2'/>
<enum name='MEMORY_OBJECT_COPY_INVALID' value='5'/>
<enum name='MEMORY_OBJECT_COPY_NONE' value='0'/>
<enum name='MEMORY_OBJECT_COPY_SYMMETRIC' value='4'/>
<enum name='MEMORY_OBJECT_COPY_SYNC' value='8'/>
<enum name='MEMORY_OBJECT_COPY_TEMPORARY' value='3'/>
<enum name='MEMORY_OBJECT_DATA_FLUSH' value='1'/>
<enum name='MEMORY_OBJECT_DATA_FLUSH_ALL' value='64'/>
<enum name='MEMORY_OBJECT_DATA_NO_CHANGE' value='2'/>
<enum name='MEMORY_OBJECT_DATA_PURGE' value='4'/>
<enum name='MEMORY_OBJECT_DATA_SYNC' value='16'/>
<enum name='MEMORY_OBJECT_DEFAULT_NULL' value='0'/>
<enum name='MEMORY_OBJECT_INFO_MAX' value='1024'/>
<enum name='MEMORY_OBJECT_IO_SYNC' value='32'/>
<enum name='MEMORY_OBJECT_NAME_NULL' value='0'/>
<enum name='MEMORY_OBJECT_NULL' value='0'/>
<enum name='MEMORY_OBJECT_PERFORMANCE_INFO' value='11'/>
<enum name='MEMORY_OBJECT_PERF_INFO_COUNT' value='2'/>
<enum name='MEMORY_OBJECT_RELEASE_NO_OP' value='4'/>
<enum name='MEMORY_OBJECT_RESPECT_CACHE' value='2'/>
<enum name='MEMORY_OBJECT_RETURN_ALL' value='2'/>
<enum name='MEMORY_OBJECT_RETURN_ANYTHING' value='3'/>
<enum name='MEMORY_OBJECT_RETURN_DIRTY' value='1'/>
<enum name='MEMORY_OBJECT_RETURN_NONE' value='0'/>
<enum name='MEMORY_OBJECT_TERMINATE_IDLE' value='1'/>
<enum name='MIG_ARRAY_TOO_LARGE' value='-307'/>
<enum name='MIG_BAD_ARGUMENTS' value='-304'/>
<enum name='MIG_BAD_ID' value='-303'/>
<enum name='MIG_EXCEPTION' value='-306'/>
<enum name='MIG_NO_REPLY' value='-305'/>
<enum name='MIG_REMOTE_ERROR' value='-302'/>
<enum name='MIG_REPLY_MISMATCH' value='-301'/>
<enum name='MIG_SERVER_DIED' value='-308'/>
<enum name='MIG_TRAILER_ERROR' value='-309'/>
<enum name='MIG_TYPE_ERROR' value='-300'/>
<enum name='NAME_SERVER_SLOT' value='0'/>
<enum name='NDR_CHAR_ASCII' value='0'/>
<enum name='NDR_CHAR_EBCDIC' value='1'/>
<enum name='NDR_FLOAT_CRAY' value='2'/>
<enum name='NDR_FLOAT_IBM' value='3'/>
<enum name='NDR_FLOAT_IEEE' value='0'/>
<enum name='NDR_FLOAT_VAX' value='1'/>
<enum name='NDR_INT_BIG_ENDIAN' value='0'/>
<enum name='NDR_INT_LITTLE_ENDIAN' value='1'/>
<enum name='NDR_PROTOCOL_2_0' value='0'/>
<enum name='NOTIFY_REUSE' value='1'/>
<enum name='NOTIFY_STATUS_FAILED' value='1000000'/>
<enum name='NOTIFY_STATUS_INVALID_FILE' value='4'/>
<enum name='NOTIFY_STATUS_INVALID_NAME' value='1'/>
<enum name='NOTIFY_STATUS_INVALID_PORT' value='3'/>
<enum name='NOTIFY_STATUS_INVALID_REQUEST' value='6'/>
<enum name='NOTIFY_STATUS_INVALID_SIGNAL' value='5'/>
<enum name='NOTIFY_STATUS_INVALID_TOKEN' value='2'/>
<enum name='NOTIFY_STATUS_NOT_AUTHORIZED' value='7'/>
<enum name='NOTIFY_STATUS_OK' value='0'/>
<enum name='PAGE_MASK' value='4095'/>
<enum name='PAGE_SHIFT' value='12'/>
<enum name='PAGE_SIZE' value='4096'/>
<enum name='POLICYCLASS_FIXEDPRI' value='6'/>
<enum name='POLICY_FIFO' value='4'/>
<enum name='POLICY_FIFO_BASE_COUNT' value='1'/>
<enum name='POLICY_FIFO_INFO_COUNT' value='4'/>
<enum name='POLICY_FIFO_LIMIT_COUNT' value='1'/>
<enum name='POLICY_NULL' value='0'/>
<enum name='POLICY_RR' value='2'/>
<enum name='POLICY_RR_BASE_COUNT' value='2'/>
<enum name='POLICY_RR_INFO_COUNT' value='5'/>
<enum name='POLICY_RR_LIMIT_COUNT' value='1'/>
<enum name='POLICY_TIMESHARE' value='1'/>
<enum name='POLICY_TIMESHARE_BASE_COUNT' value='1'/>
<enum name='POLICY_TIMESHARE_INFO_COUNT' value='5'/>
<enum name='POLICY_TIMESHARE_LIMIT_COUNT' value='1'/>
<enum name='PPNUM_MAX' value='4294967295'/>
<enum name='PROCESSOR_BASIC_INFO' value='1'/>
<enum name='PROCESSOR_BASIC_INFO_COUNT' value='5'/>
<enum name='PROCESSOR_CPU_LOAD_INFO' value='2'/>
<enum name='PROCESSOR_CPU_LOAD_INFO_COUNT' value='4'/>
<enum name='PROCESSOR_INFO_MAX' value='1024'/>
<enum name='PROCESSOR_NULL' value='0'/>
<enum name='PROCESSOR_PM_REGS_INFO' value='268435457'/>
<enum name='PROCESSOR_SET_BASIC_INFO' value='5'/>
<enum name='PROCESSOR_SET_BASIC_INFO_COUNT' value='2'/>
<enum name='PROCESSOR_SET_INFO_MAX' value='1024'/>
<enum name='PROCESSOR_SET_LOAD_INFO' value='4'/>
<enum name='PROCESSOR_SET_LOAD_INFO_COUNT' value='4'/>
<enum name='PROCESSOR_SET_NULL' value='0'/>
<enum name='PROCESSOR_TEMPERATURE' value='268435458'/>
<enum name='REALTIME_CLOCK' value='0'/>
<enum name='RPC_SIGBUF_SIZE' value='8'/>
<enum name='SANDBOX_NAMED' value='1'/>
<enum name='SEMAPHORE_NULL' value='0'/>
<enum name='SERVICE_SLOT' value='2'/>
<enum name='SHARED_DATA_REGION_SIZE' value='268435456'/>
<enum name='SHARED_REGION_BASE' value64='140735072436224' value='2415919104'/>
<enum name='SHARED_REGION_BASE_ARM' value='805306368'/>
<enum name='SHARED_REGION_BASE_I386' value='2415919104'/>
<enum name='SHARED_REGION_BASE_PPC' value='2415919104'/>
<enum name='SHARED_REGION_BASE_PPC64' value='140734804000768'/>
<enum name='SHARED_REGION_BASE_X86_64' value='140735072436224'/>
<enum name='SHARED_REGION_NESTING_BASE' value64='140735340871680' value='2415919104'/>
<enum name='SHARED_REGION_NESTING_BASE_ARM' value='805306368'/>
<enum name='SHARED_REGION_NESTING_BASE_I386' value='2415919104'/>
<enum name='SHARED_REGION_NESTING_BASE_PPC' value='2415919104'/>
<enum name='SHARED_REGION_NESTING_BASE_PPC64' value='140734804000768'/>
<enum name='SHARED_REGION_NESTING_BASE_X86_64' value='140735340871680'/>
<enum name='SHARED_REGION_NESTING_MAX' value64='18446744073707454464' value='4292870144'/>
<enum name='SHARED_REGION_NESTING_MAX_I386' value='4292870144'/>
<enum name='SHARED_REGION_NESTING_MAX_PPC' value='268435456'/>
<enum name='SHARED_REGION_NESTING_MAX_PPC64' value='268435456'/>
<enum name='SHARED_REGION_NESTING_MAX_X86_64' value='18446744073707454464'/>
<enum name='SHARED_REGION_NESTING_MIN' value='2097152'/>
<enum name='SHARED_REGION_NESTING_MIN_I386' value='2097152'/>
<enum name='SHARED_REGION_NESTING_MIN_PPC' value='268435456'/>
<enum name='SHARED_REGION_NESTING_MIN_PPC64' value='268435456'/>
<enum name='SHARED_REGION_NESTING_MIN_X86_64' value='2097152'/>
<enum name='SHARED_REGION_NESTING_SIZE' value64='1073741824' value='536870912'/>
<enum name='SHARED_REGION_NESTING_SIZE_ARM' value='268435456'/>
<enum name='SHARED_REGION_NESTING_SIZE_I386' value='536870912'/>
<enum name='SHARED_REGION_NESTING_SIZE_PPC' value='268435456'/>
<enum name='SHARED_REGION_NESTING_SIZE_PPC64' value='2684354560'/>
<enum name='SHARED_REGION_NESTING_SIZE_X86_64' value='1073741824'/>
<enum name='SHARED_REGION_SIZE' value64='2413821952' value='536870912'/>
<enum name='SHARED_REGION_SIZE_ARM' value='268435456'/>
<enum name='SHARED_REGION_SIZE_I386' value='536870912'/>
<enum name='SHARED_REGION_SIZE_PPC' value='536870912'/>
<enum name='SHARED_REGION_SIZE_PPC64' value='2684354560'/>
<enum name='SHARED_REGION_SIZE_X86_64' value='2413821952'/>
<enum name='SHARED_TEXT_REGION_SIZE' value='268435456'/>
<enum name='SM_COW' value='1'/>
<enum name='SM_EMPTY' value='3'/>
<enum name='SM_LARGE_PAGE' value='8'/>
<enum name='SM_PRIVATE' value='2'/>
<enum name='SM_PRIVATE_ALIASED' value='6'/>
<enum name='SM_SHARED' value='4'/>
<enum name='SM_SHARED_ALIASED' value='7'/>
<enum name='SM_TRUESHARED' value='5'/>
<enum name='SUPERPAGE_NONE' value='0'/>
<enum name='SUPERPAGE_SIZE_2MB' value='2'/>
<enum name='SUPERPAGE_SIZE_ANY' value='1'/>
<enum name='SWITCH_OPTION_DEPRESS' value='1'/>
<enum name='SWITCH_OPTION_NONE' value='0'/>
<enum name='SWITCH_OPTION_WAIT' value='2'/>
<enum name='SYNC_POLICY_FIFO' value='0'/>
<enum name='SYNC_POLICY_FIXED_PRIORITY' value='1'/>
<enum name='SYNC_POLICY_LIFO' value='2'/>
<enum name='SYNC_POLICY_MAX' value='7'/>
<enum name='SYNC_POLICY_ORDER_MASK' value='3'/>
<enum name='SYNC_POLICY_REVERSED' value='2'/>
<enum name='SYSTEM_CLOCK' value='0'/>
<enum name='TASK_ABSOLUTETIME_INFO' value='1'/>
<enum name='TASK_ABSOLUTETIME_INFO_COUNT' value='8'/>
<enum name='TASK_ACCESS_PORT' value='9'/>
<enum name='TASK_AFFINITY_TAG_INFO' value='16'/>
<enum name='TASK_AFFINITY_TAG_INFO_COUNT' value='4'/>
<enum name='TASK_AUDIT_TOKEN' value='15'/>
<enum name='TASK_AUDIT_TOKEN_COUNT' value='8'/>
<enum name='TASK_BACKGROUND_APPLICATION' value='2'/>
<enum name='TASK_BASIC2_INFO_32' value='6'/>
<enum name='TASK_BASIC_INFO' value64='5' value='4'/>
<enum name='TASK_BASIC_INFO_32' value='4'/>
<enum name='TASK_BASIC_INFO_32_COUNT' value='8'/>
<enum name='TASK_BASIC_INFO_64' value='5'/>
<enum name='TASK_BASIC_INFO_64_COUNT' value='10'/>
<enum name='TASK_BASIC_INFO_COUNT' value64='10' value='8'/>
<enum name='TASK_BOOTSTRAP_PORT' value='4'/>
<enum name='TASK_CATEGORY_POLICY' value='1'/>
<enum name='TASK_CATEGORY_POLICY_COUNT' value='1'/>
<enum name='TASK_CONTROL_APPLICATION' value='3'/>
<enum name='TASK_DEFAULT_APPLICATION' value='7'/>
<enum name='TASK_DYLD_ALL_IMAGE_INFO_32' value='0'/>
<enum name='TASK_DYLD_ALL_IMAGE_INFO_64' value='1'/>
<enum name='TASK_DYLD_INFO' value='17'/>
<enum name='TASK_DYLD_INFO_COUNT' value='5'/>
<enum name='TASK_EVENTS_INFO' value='2'/>
<enum name='TASK_EVENTS_INFO_COUNT' value='8'/>
<enum name='TASK_EXTMOD_INFO' value='18'/>
<enum name='TASK_EXTMOD_INFO_COUNT' value='16'/>
<enum name='TASK_FOREGROUND_APPLICATION' value='1'/>
<enum name='TASK_GRAPHICS_SERVER' value='4'/>
<enum name='TASK_GSSD_PORT' value='8'/>
<enum name='TASK_HOST_PORT' value='2'/>
<enum name='TASK_INFO_MAX' value='1024'/>
<enum name='TASK_KERNELMEMORY_INFO' value='7'/>
<enum name='TASK_KERNELMEMORY_INFO_COUNT' value='8'/>
<enum name='TASK_KERNEL_PORT' value='1'/>
<enum name='TASK_NAME_NULL' value='0'/>
<enum name='TASK_NAME_PORT' value='3'/>
<enum name='TASK_NONUI_APPLICATION' value='6'/>
<enum name='TASK_NULL' value='0'/>
<enum name='TASK_PAGED_LEDGER_PORT' value='6'/>
<enum name='TASK_PORT_REGISTER_MAX' value='3'/>
<enum name='TASK_RENICED' value='-1'/>
<enum name='TASK_SCHED_FIFO_INFO' value='12'/>
<enum name='TASK_SCHED_INFO' value='14'/>
<enum name='TASK_SCHED_RR_INFO' value='11'/>
<enum name='TASK_SCHED_TIMESHARE_INFO' value='10'/>
<enum name='TASK_SEATBELT_PORT' value='7'/>
<enum name='TASK_SECURITY_TOKEN' value='13'/>
<enum name='TASK_SECURITY_TOKEN_COUNT' value='2'/>
<enum name='TASK_THREAD_TIMES_INFO' value='3'/>
<enum name='TASK_THREAD_TIMES_INFO_COUNT' value='4'/>
<enum name='TASK_THROTTLE_APPLICATION' value='5'/>
<enum name='TASK_UNSPECIFIED' value='0'/>
<enum name='TASK_WIRED_LEDGER_PORT' value='5'/>
<enum name='THREAD_AFFINITY_POLICY' value='4'/>
<enum name='THREAD_AFFINITY_POLICY_COUNT' value='1'/>
<enum name='THREAD_AFFINITY_TAG_NULL' value='0'/>
<enum name='THREAD_BACKGROUND_POLICY' value='5'/>
<enum name='THREAD_BACKGROUND_POLICY_COUNT' value='1'/>
<enum name='THREAD_BASIC_INFO' value='3'/>
<enum name='THREAD_BASIC_INFO_COUNT' value='10'/>
<enum name='THREAD_EXTENDED_POLICY' value='1'/>
<enum name='THREAD_EXTENDED_POLICY_COUNT' value='1'/>
<enum name='THREAD_IDENTIFIER_INFO' value='4'/>
<enum name='THREAD_IDENTIFIER_INFO_COUNT' value='6'/>
<enum name='THREAD_INFO_MAX' value='1024'/>
<enum name='THREAD_KERNEL_PORT' value='1'/>
<enum name='THREAD_MACHINE_STATE_MAX' value='144'/>
<enum name='THREAD_NULL' value='0'/>
<enum name='THREAD_PRECEDENCE_POLICY' value='3'/>
<enum name='THREAD_PRECEDENCE_POLICY_COUNT' value='1'/>
<enum name='THREAD_SCHED_FIFO_INFO' value='12'/>
<enum name='THREAD_SCHED_RR_INFO' value='11'/>
<enum name='THREAD_SCHED_TIMESHARE_INFO' value='10'/>
<enum name='THREAD_STANDARD_POLICY' value='1'/>
<enum name='THREAD_STANDARD_POLICY_COUNT' value='0'/>
<enum name='THREAD_STATE_FLAVOR_LIST' value='0'/>
<enum name='THREAD_STATE_FLAVOR_LIST_NEW' value='128'/>
<enum name='THREAD_STATE_NONE' value='13'/>
<enum name='THREAD_TIME_CONSTRAINT_POLICY' value='2'/>
<enum name='THREAD_TIME_CONSTRAINT_POLICY_COUNT' value='4'/>
<enum name='THR_ACT_NULL' value='0'/>
<enum name='TH_FLAGS_IDLE' value='2'/>
<enum name='TH_FLAGS_SWAPPED' value='1'/>
<enum name='TH_STATE_HALTED' value='5'/>
<enum name='TH_STATE_RUNNING' value='1'/>
<enum name='TH_STATE_STOPPED' value='2'/>
<enum name='TH_STATE_UNINTERRUPTIBLE' value='4'/>
<enum name='TH_STATE_WAITING' value='3'/>
<enum name='TH_USAGE_SCALE' value='1000'/>
<enum name='TID_NULL' value='0'/>
<enum name='TIME_ABSOLUTE' value='0'/>
<enum name='TIME_MICROS_MAX' value='1000000'/>
<enum name='TIME_RELATIVE' value='1'/>
<enum name='UND_SERVER_NULL' value='0'/>
<enum name='UPL_NULL' value='0'/>
<enum name='USER_CODE_SELECTOR' value='23'/>
<enum name='USER_DATA_SELECTOR' value='31'/>
<enum name='VM_BEHAVIOR_CAN_REUSE' value='10'/>
<enum name='VM_BEHAVIOR_DEFAULT' value='0'/>
<enum name='VM_BEHAVIOR_DONTNEED' value='5'/>
<enum name='VM_BEHAVIOR_FREE' value='6'/>
<enum name='VM_BEHAVIOR_RANDOM' value='1'/>
<enum name='VM_BEHAVIOR_REUSABLE' value='8'/>
<enum name='VM_BEHAVIOR_REUSE' value='9'/>
<enum name='VM_BEHAVIOR_RSEQNTL' value='3'/>
<enum name='VM_BEHAVIOR_SEQUENTIAL' value='2'/>
<enum name='VM_BEHAVIOR_WILLNEED' value='4'/>
<enum name='VM_BEHAVIOR_ZERO_WIRED_PAGES' value='7'/>
<enum name='VM_DYLD64' value='140734799806464'/>
<enum name='VM_FLAGS_ALIAS_MASK' value='4278190080'/>
<enum name='VM_FLAGS_ANYWHERE' value='1'/>
<enum name='VM_FLAGS_FIXED' value='0'/>
<enum name='VM_FLAGS_NO_CACHE' value='16'/>
<enum name='VM_FLAGS_OVERWRITE' value='16384'/>
<enum name='VM_FLAGS_PURGABLE' value='2'/>
<enum name='VM_FLAGS_SUPERPAGE_MASK' value='458752'/>
<enum name='VM_FLAGS_SUPERPAGE_NONE' value='0'/>
<enum name='VM_FLAGS_SUPERPAGE_SHIFT' value='16'/>
<enum name='VM_FLAGS_SUPERPAGE_SIZE_2MB' value='131072'/>
<enum name='VM_FLAGS_SUPERPAGE_SIZE_ANY' value='65536'/>
<enum name='VM_FLAGS_USER_ALLOCATE' value='4278665235'/>
<enum name='VM_FLAGS_USER_MAP' value='4278665235'/>
<enum name='VM_FLAGS_USER_REMAP' value='16385'/>
<enum name='VM_INHERIT_COPY' value='1'/>
<enum name='VM_INHERIT_DEFAULT' value='1'/>
<enum name='VM_INHERIT_DONATE_COPY' value='3'/>
<enum name='VM_INHERIT_LAST_VALID' value='2'/>
<enum name='VM_INHERIT_NONE' value='2'/>
<enum name='VM_INHERIT_SHARE' value='0'/>
<enum name='VM_LIB64_SHR_DATA' value='140734804000768'/>
<enum name='VM_LIB64_SHR_TEXT' value='140735340871680'/>
<enum name='VM_MAP_ENTRY_MAX' value='256'/>
<enum name='VM_MAP_NULL' value='0'/>
<enum name='VM_MAX_ADDRESS' value='4292870144'/>
<enum name='VM_MAX_PAGE_ADDRESS' value='140737486258176'/>
<enum name='VM_MAX_USER_PAGE_ADDRESS' value='140737488351232'/>
<enum name='VM_MEMORY_ANALYSIS_TOOL' value='10'/>
<enum name='VM_MEMORY_APPKIT' value='40'/>
<enum name='VM_MEMORY_APPLICATION_SPECIFIC_1' value='240'/>
<enum name='VM_MEMORY_APPLICATION_SPECIFIC_16' value='255'/>
<enum name='VM_MEMORY_ASSETSD' value='72'/>
<enum name='VM_MEMORY_ATS' value='50'/>
<enum name='VM_MEMORY_CARBON' value='43'/>
<enum name='VM_MEMORY_CGIMAGE' value='52'/>
<enum name='VM_MEMORY_COREGRAPHICS' value='42'/>
<enum name='VM_MEMORY_COREGRAPHICS_BACKINGSTORES' value='57'/>
<enum name='VM_MEMORY_COREGRAPHICS_DATA' value='54'/>
<enum name='VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS' value='56'/>
<enum name='VM_MEMORY_COREGRAPHICS_MISC' value='42'/>
<enum name='VM_MEMORY_COREGRAPHICS_SHARED' value='55'/>
<enum name='VM_MEMORY_COREIMAGE' value='68'/>
<enum name='VM_MEMORY_COREPROFILE' value='71'/>
<enum name='VM_MEMORY_DYLD' value='60'/>
<enum name='VM_MEMORY_DYLD_MALLOC' value='61'/>
<enum name='VM_MEMORY_DYLIB' value='33'/>
<enum name='VM_MEMORY_FOUNDATION' value='41'/>
<enum name='VM_MEMORY_GLSL' value='66'/>
<enum name='VM_MEMORY_GUARD' value='31'/>
<enum name='VM_MEMORY_IMAGEIO' value='70'/>
<enum name='VM_MEMORY_IOKIT' value='21'/>
<enum name='VM_MEMORY_JAVA' value='44'/>
<enum name='VM_MEMORY_JAVASCRIPT_CORE' value='63'/>
<enum name='VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR' value='64'/>
<enum name='VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE' value='65'/>
<enum name='VM_MEMORY_LAYERKIT' value='51'/>
<enum name='VM_MEMORY_MACH_MSG' value='20'/>
<enum name='VM_MEMORY_MALLOC' value='1'/>
<enum name='VM_MEMORY_MALLOC_HUGE' value='4'/>
<enum name='VM_MEMORY_MALLOC_LARGE' value='3'/>
<enum name='VM_MEMORY_MALLOC_LARGE_REUSABLE' value='8'/>
<enum name='VM_MEMORY_MALLOC_LARGE_REUSED' value='9'/>
<enum name='VM_MEMORY_MALLOC_SMALL' value='2'/>
<enum name='VM_MEMORY_MALLOC_TINY' value='7'/>
<enum name='VM_MEMORY_OBJC_DISPATCHERS' value='34'/>
<enum name='VM_MEMORY_OPENCL' value='67'/>
<enum name='VM_MEMORY_REALLOC' value='6'/>
<enum name='VM_MEMORY_SBRK' value='5'/>
<enum name='VM_MEMORY_SHARED_PMAP' value='32'/>
<enum name='VM_MEMORY_SQLITE' value='62'/>
<enum name='VM_MEMORY_STACK' value='30'/>
<enum name='VM_MEMORY_TCMALLOC' value='53'/>
<enum name='VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS' value='69'/>
<enum name='VM_MIN_ADDRESS' value='0'/>
<enum name='VM_MIN_ADDRESS64' value='0'/>
<enum name='VM_NAMED_ENTRY_NULL' value='0'/>
<enum name='VM_PAGE_INFO_BASIC' value='1'/>
<enum name='VM_PAGE_INFO_BASIC_COUNT' value='8'/>
<enum name='VM_PAGE_QUERY_PAGE_COPIED' value='32'/>
<enum name='VM_PAGE_QUERY_PAGE_CS_TAINTED' value='512'/>
<enum name='VM_PAGE_QUERY_PAGE_CS_VALIDATED' value='256'/>
<enum name='VM_PAGE_QUERY_PAGE_DIRTY' value='8'/>
<enum name='VM_PAGE_QUERY_PAGE_EXTERNAL' value='128'/>
<enum name='VM_PAGE_QUERY_PAGE_FICTITIOUS' value='2'/>
<enum name='VM_PAGE_QUERY_PAGE_PAGED_OUT' value='16'/>
<enum name='VM_PAGE_QUERY_PAGE_PRESENT' value='1'/>
<enum name='VM_PAGE_QUERY_PAGE_REF' value='4'/>
<enum name='VM_PAGE_QUERY_PAGE_SPECULATIVE' value='64'/>
<enum name='VM_PROT_ALL' value='7'/>
<enum name='VM_PROT_COPY' value='16'/>
<enum name='VM_PROT_COW' value='8'/>
<enum name='VM_PROT_DEFAULT' value='3'/>
<enum name='VM_PROT_EXECUTE' value='4'/>
<enum name='VM_PROT_IS_MASK' value='64'/>
<enum name='VM_PROT_NONE' value='0'/>
<enum name='VM_PROT_NO_CHANGE' value='8'/>
<enum name='VM_PROT_READ' value='1'/>
<enum name='VM_PROT_SLIDE' value='32'/>
<enum name='VM_PROT_WANTS_COPY' value='16'/>
<enum name='VM_PROT_WRITE' value='2'/>
<enum name='VM_PROT_ZF' value='16'/>
<enum name='VM_PURGABLE_ALL_MASKS' value='14195'/>
<enum name='VM_PURGABLE_BEHAVIOR_FIFO' value='0'/>
<enum name='VM_PURGABLE_BEHAVIOR_LIFO' value='64'/>
<enum name='VM_PURGABLE_BEHAVIOR_MASK' value='64'/>
<enum name='VM_PURGABLE_BEHAVIOR_SHIFT' value='6'/>
<enum name='VM_PURGABLE_DEBUG_EMPTY' value='4096'/>
<enum name='VM_PURGABLE_DEBUG_FAULT' value='8192'/>
<enum name='VM_PURGABLE_DEBUG_MASK' value='12288'/>
<enum name='VM_PURGABLE_DEBUG_SHIFT' value='12'/>
<enum name='VM_PURGABLE_DENY' value='3'/>
<enum name='VM_PURGABLE_EMPTY' value='2'/>
<enum name='VM_PURGABLE_GET_STATE' value='1'/>
<enum name='VM_PURGABLE_NONVOLATILE' value='0'/>
<enum name='VM_PURGABLE_ORDERING_MASK' value='32'/>
<enum name='VM_PURGABLE_ORDERING_NORMAL' value='0'/>
<enum name='VM_PURGABLE_ORDERING_OBSOLETE' value='32'/>
<enum name='VM_PURGABLE_ORDERING_SHIFT' value='5'/>
<enum name='VM_PURGABLE_PURGE_ALL' value='2'/>
<enum name='VM_PURGABLE_SET_STATE' value='0'/>
<enum name='VM_PURGABLE_STATE_MASK' value='3'/>
<enum name='VM_PURGABLE_STATE_MAX' value='3'/>
<enum name='VM_PURGABLE_STATE_MIN' value='0'/>
<enum name='VM_PURGABLE_VOLATILE' value='1'/>
<enum name='VM_REGION_BASIC_INFO' value='10'/>
<enum name='VM_REGION_BASIC_INFO_64' value='9'/>
<enum name='VM_REGION_BASIC_INFO_COUNT' value='8'/>
<enum name='VM_REGION_BASIC_INFO_COUNT_64' value='9'/>
<enum name='VM_REGION_EXTENDED_INFO' value='11'/>
<enum name='VM_REGION_EXTENDED_INFO_COUNT' value='8'/>
<enum name='VM_REGION_INFO_MAX' value='1024'/>
<enum name='VM_REGION_SUBMAP_INFO_COUNT' value='15'/>
<enum name='VM_REGION_SUBMAP_INFO_COUNT_64' value='16'/>
<enum name='VM_REGION_SUBMAP_SHORT_INFO_COUNT_64' value='12'/>
<enum name='VM_REGION_TOP_INFO' value='12'/>
<enum name='VM_REGION_TOP_INFO_COUNT' value='5'/>
<enum name='VM_SYNC_ASYNCHRONOUS' value='1'/>
<enum name='VM_SYNC_CONTIGUOUS' value='32'/>
<enum name='VM_SYNC_DEACTIVATE' value='16'/>
<enum name='VM_SYNC_INVALIDATE' value='4'/>
<enum name='VM_SYNC_KILLPAGES' value='8'/>
<enum name='VM_SYNC_REUSABLEPAGES' value='64'/>
<enum name='VM_SYNC_SYNCHRONOUS' value='2'/>
<enum name='VM_USRSTACK32' value='3221225472'/>
<enum name='VM_USRSTACK64' value='140734799806464'/>
<enum name='VM_VOLATILE_GROUP_0' value='0'/>
<enum name='VM_VOLATILE_GROUP_1' value='256'/>
<enum name='VM_VOLATILE_GROUP_2' value='512'/>
<enum name='VM_VOLATILE_GROUP_3' value='768'/>
<enum name='VM_VOLATILE_GROUP_4' value='1024'/>
<enum name='VM_VOLATILE_GROUP_5' value='1280'/>
<enum name='VM_VOLATILE_GROUP_6' value='1536'/>
<enum name='VM_VOLATILE_GROUP_7' value='1792'/>
<enum name='VM_VOLATILE_GROUP_DEFAULT' value='1792'/>
<enum name='VM_VOLATILE_GROUP_MASK' value='1792'/>
<enum name='VM_VOLATILE_GROUP_SHIFT' value='8'/>
<enum name='VM_VOLATILE_MAKE_FIRST_IN_GROUP' value='16'/>
<enum name='VM_VOLATILE_MAKE_LAST_IN_GROUP' value='0'/>
<enum name='VM_VOLATILE_ORDER_MASK' value='16'/>
<enum name='VM_VOLATILE_ORDER_SHIFT' value='4'/>
<enum name='X86_DEBUG_STATE32_COUNT' value='8'/>
<enum name='X86_DEBUG_STATE64_COUNT' value='16'/>
<enum name='X86_EXCEPTION_STATE64_COUNT' value='4'/>
<enum name='clock_MSG_COUNT' value='3'/>
<enum name='clock_priv_MSG_COUNT' value='2'/>
<enum name='clock_reply_MSG_COUNT' value='1'/>
<enum name='code_emask' value='16383'/>
<enum name='err_dipc' value='469762048'/>
<enum name='err_ipc' value='201326592'/>
<enum name='err_ipc_compat' value='-67108864'/>
<enum name='err_kern' value='0'/>
<enum name='err_local' value='-134217728'/>
<enum name='err_mach_ipc' value='268435456'/>
<enum name='err_max_system' value='63'/>
<enum name='err_none' value='0'/>
<enum name='err_server' value='134217728'/>
<enum name='err_us' value='67108864'/>
<enum name='exc_MSG_COUNT' value='3'/>
<enum name='host_priv_MSG_COUNT' value='26'/>
<enum name='host_security_MSG_COUNT' value='2'/>
<enum name='i386_EXCEPTION_STATE' value='3'/>
<enum name='i386_EXCEPTION_STATE_COUNT' value='3'/>
<enum name='i386_FLOAT_STATE' value='2'/>
<enum name='i386_FLOAT_STATE_COUNT' value='131'/>
<enum name='i386_THREAD_STATE' value='1'/>
<enum name='i386_THREAD_STATE_COUNT' value='16'/>
<enum name='kCCAlgorithm3DES' value='2'/>
<enum name='kCCAlgorithmAES128' value='0'/>
<enum name='kCCAlgorithmCAST' value='3'/>
<enum name='kCCAlgorithmDES' value='1'/>
<enum name='kCCAlgorithmRC2' value='5'/>
<enum name='kCCAlgorithmRC4' value='4'/>
<enum name='kCCAlignmentError' value='-4303'/>
<enum name='kCCBlockSize3DES' value='8'/>
<enum name='kCCBlockSizeAES128' value='16'/>
<enum name='kCCBlockSizeCAST' value='8'/>
<enum name='kCCBlockSizeDES' value='8'/>
<enum name='kCCBlockSizeRC2' value='8'/>
<enum name='kCCBufferTooSmall' value='-4301'/>
<enum name='kCCContextSize3DES' value='4096'/>
<enum name='kCCContextSizeAES128' value='4096'/>
<enum name='kCCContextSizeCAST' value='4096'/>
<enum name='kCCContextSizeDES' value='4096'/>
<enum name='kCCContextSizeGENERIC' value='4096'/>
<enum name='kCCContextSizeRC4' value='4096'/>
<enum name='kCCDecodeError' value='-4304'/>
<enum name='kCCDecrypt' value='1'/>
<enum name='kCCEncrypt' value='0'/>
<enum name='kCCHmacAlgMD5' value='1'/>
<enum name='kCCHmacAlgSHA1' value='0'/>
<enum name='kCCHmacAlgSHA224' value='5'/>
<enum name='kCCHmacAlgSHA256' value='2'/>
<enum name='kCCHmacAlgSHA384' value='3'/>
<enum name='kCCHmacAlgSHA512' value='4'/>
<enum name='kCCKeySize3DES' value='24'/>
<enum name='kCCKeySizeAES128' value='16'/>
<enum name='kCCKeySizeAES192' value='24'/>
<enum name='kCCKeySizeAES256' value='32'/>
<enum name='kCCKeySizeDES' value='8'/>
<enum name='kCCKeySizeMaxCAST' value='16'/>
<enum name='kCCKeySizeMaxRC2' value='128'/>
<enum name='kCCKeySizeMaxRC4' value='512'/>
<enum name='kCCKeySizeMinCAST' value='5'/>
<enum name='kCCKeySizeMinRC2' value='1'/>
<enum name='kCCKeySizeMinRC4' value='1'/>
<enum name='kCCMemoryFailure' value='-4302'/>
<enum name='kCCOptionECBMode' value='2'/>
<enum name='kCCOptionPKCS7Padding' value='1'/>
<enum name='kCCPBKDF2' value='2'/>
<enum name='kCCPRFHmacAlgSHA1' value='1'/>
<enum name='kCCPRFHmacAlgSHA224' value='2'/>
<enum name='kCCPRFHmacAlgSHA256' value='3'/>
<enum name='kCCPRFHmacAlgSHA384' value='4'/>
<enum name='kCCPRFHmacAlgSHA512' value='5'/>
<enum name='kCCParamError' value='-4300'/>
<enum name='kCCSuccess' value='0'/>
<enum name='kCCUnimplemented' value='-4305'/>
<enum name='kCCWRAPAES' value='1'/>
<enum name='ledger_MSG_COUNT' value='4'/>
<enum name='lock_set_MSG_COUNT' value='6'/>
<enum name='mach_host_MSG_COUNT' value='21'/>
<enum name='mach_port_MSG_COUNT' value='31'/>
<enum name='mach_vm_MSG_COUNT' value='20'/>
<enum name='processor_MSG_COUNT' value='6'/>
<enum name='processor_set_MSG_COUNT' value='10'/>
<enum name='sub_emask' value='67092480'/>
<enum name='system_emask' value='-67108864'/>
<enum name='task_MSG_COUNT' value='35'/>
<enum name='thread_act_MSG_COUNT' value='25'/>
<enum name='vm_map_MSG_COUNT' value='31'/>
<enum name='x86_AVX_STATE32' value='16'/>
<enum name='x86_AVX_STATE32_COUNT' value='179'/>
<enum name='x86_AVX_STATE64' value='17'/>
<enum name='x86_AVX_STATE64_COUNT' value='211'/>
<enum name='x86_DEBUG_STATE' value='12'/>
<enum name='x86_DEBUG_STATE32' value='10'/>
<enum name='x86_DEBUG_STATE32_COUNT' value='8'/>
<enum name='x86_DEBUG_STATE64' value='11'/>
<enum name='x86_DEBUG_STATE64_COUNT' value='16'/>
<enum name='x86_DEBUG_STATE_COUNT' value='18'/>
<enum name='x86_EXCEPTION_STATE' value='9'/>
<enum name='x86_EXCEPTION_STATE32' value='3'/>
<enum name='x86_EXCEPTION_STATE32_COUNT' value='3'/>
<enum name='x86_EXCEPTION_STATE64' value='6'/>
<enum name='x86_EXCEPTION_STATE64_COUNT' value='4'/>
<enum name='x86_EXCEPTION_STATE_COUNT' value='6'/>
<enum name='x86_FLOAT_STATE' value='8'/>
<enum name='x86_FLOAT_STATE32' value='2'/>
<enum name='x86_FLOAT_STATE32_COUNT' value='131'/>
<enum name='x86_FLOAT_STATE64' value='5'/>
<enum name='x86_FLOAT_STATE64_COUNT' value='131'/>
<enum name='x86_FLOAT_STATE_COUNT' value='133'/>
<enum name='x86_THREAD_STATE' value='7'/>
<enum name='x86_THREAD_STATE32' value='1'/>
<enum name='x86_THREAD_STATE32_COUNT' value='16'/>
<enum name='x86_THREAD_STATE64' value='4'/>
<enum name='x86_THREAD_STATE64_COUNT' value='42'/>
<enum name='x86_THREAD_STATE_COUNT' value='44'/>
<function name='CCCalibratePBKDF'>
<arg type='I'/>
<arg type64='Q' type='L'/>
<arg type64='Q' type='L'/>
<arg type='I'/>
<arg type64='Q' type='L'/>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CCCrypt'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg c_array_length_in_arg='4' type='^v' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg c_array_of_variable_length='true' type='^v' type_modifier='n'/>
<arg c_array_length_in_arg='7' type='^v' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg c_array_length_in_arg='9' type='^v' type_modifier='o'/>
<arg type64='Q' type='L'/>
<arg type64='^Q' type='^I' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CCCryptorCreate'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg c_array_length_in_arg='4' type='^v' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg c_array_of_variable_length='true' type='^v' type_modifier='n'/>
<arg type='^^{_CCCryptor}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CCCryptorCreateFromData'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg c_array_length_in_arg='4' type='^v' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg c_array_of_variable_length='true' type='^v' type_modifier='n'/>
<arg c_array_length_in_arg='7' type='^v' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg type='^^{_CCCryptor}' type_modifier='o'/>
<arg type64='^Q' type='^I' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CCCryptorFinal'>
<arg type='^{_CCCryptor=}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='o'/>
<arg type64='Q' type='L'/>
<arg type64='^Q' type='^I' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CCCryptorGetOutputLength'>
<arg type='^{_CCCryptor=}' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg type='B'/>
<retval type64='Q' type='L'/>
</function>
<function name='CCCryptorRelease'>
<arg type='^{_CCCryptor=}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CCCryptorReset'>
<arg type='^{_CCCryptor=}' type_modifier='N'/>
<arg c_array_of_variable_length='true' type='^v' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CCCryptorUpdate'>
<arg type='^{_CCCryptor=}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg c_array_length_in_arg='4' type='^v' type_modifier='o'/>
<arg type64='Q' type='L'/>
<arg type64='^Q' type='^I' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CCHmac'>
<arg type='I'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg c_array_length_in_arg='4' type='^v' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg c_array_of_variable_length='true' type='^v' type_modifier='o'/>
</function>
<function name='CCHmacFinal'>
<arg type='^{_CCHmacContext=[96I]}' type_modifier='n'/>
<arg c_array_of_variable_length='true' type='^v' type_modifier='o'/>
</function>
<function name='CCHmacInit'>
<arg type='^{_CCHmacContext=[96I]}' type_modifier='o'/>
<arg type='I'/>
<arg c_array_length_in_arg='3' type='^v' type_modifier='n'/>
<arg type64='Q' type='L'/>
</function>
<function name='CCHmacUpdate'>
<arg type='^{_CCHmacContext=[96I]}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type64='Q' type='L'/>
</function>
<function name='CCKeyDerivationPBKDF'>
<arg type='I'/>
<arg c_array_length_in_arg='2' type='*' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg c_array_length_in_arg='4' type='*' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg type='I'/>
<arg type='I'/>
<arg c_array_length_in_arg='8' type='*' type_modifier='o'/>
<arg type64='Q' type='L'/>
<retval type='i'/>
</function>
<function name='CCSymmetricKeyUnwrap'>
<arg type='I'/>
<arg c_array_length_in_arg='2' type='*' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg c_array_length_in_arg='4' type='*' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg c_array_length_in_arg='6' type='*' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg c_array_length_in_arg='8' type='*' type_modifier='o'/>
<arg type64='^Q' type='^I' type_modifier='N'/>
<retval type='i'/>
</function>
<function name='CCSymmetricKeyWrap'>
<arg type='I'/>
<arg c_array_length_in_arg='2' type='*' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg c_array_length_in_arg='4' type='*' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg c_array_length_in_arg='6' type='*' type_modifier='n'/>
<arg type64='Q' type='L'/>
<arg c_array_length_in_arg='8' type='*' type_modifier='o'/>
<arg type64='^Q' type='^I' type_modifier='N'/>
<retval type='i'/>
</function>
<function name='CCSymmetricUnwrappedSize'>
<arg type='I'/>
<arg type64='Q' type='L'/>
<retval type64='Q' type='L'/>
</function>
<function name='CCSymmetricWrappedSize'>
<arg type='I'/>
<arg type64='Q' type='L'/>
<retval type64='Q' type='L'/>
</function>
<function name='CC_MD2'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg c_array_of_fixed_length='16' type='*' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_MD2_Final'>
<arg c_array_of_fixed_length='16' type='*' type_modifier='o'/>
<arg type='^{CC_MD2state_st=i[16C][16I][16I]}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_MD2_Init'>
<arg type='^{CC_MD2state_st=i[16C][16I][16I]}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_MD2_Update'>
<arg type='^{CC_MD2state_st=i[16C][16I][16I]}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CC_MD4'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg c_array_of_fixed_length='16' type='*' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_MD4_Final'>
<arg c_array_of_fixed_length='16' type='*' type_modifier='o'/>
<arg type='^{CC_MD4state_st=IIIIII[16I]i}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_MD4_Init'>
<arg type='^{CC_MD4state_st=IIIIII[16I]i}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_MD4_Update'>
<arg type='^{CC_MD4state_st=IIIIII[16I]i}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CC_MD5'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg c_array_of_fixed_length='16' type='*' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_MD5_Final'>
<arg c_array_of_fixed_length='16' type='*' type_modifier='o'/>
<arg type='^{CC_MD5state_st=IIIIII[16I]i}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_MD5_Init'>
<arg type='^{CC_MD5state_st=IIIIII[16I]i}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_MD5_Update'>
<arg type='^{CC_MD5state_st=IIIIII[16I]i}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CC_SHA1'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg c_array_of_fixed_length='20' type='*' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_SHA1_Final'>
<arg c_array_of_fixed_length='20' type='*' type_modifier='o'/>
<arg type='^{CC_SHA1state_st=IIIIIII[16I]i}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_SHA1_Init'>
<arg type='^{CC_SHA1state_st=IIIIIII[16I]i}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_SHA1_Update'>
<arg type='^{CC_SHA1state_st=IIIIIII[16I]i}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CC_SHA224'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg c_array_of_fixed_length='28' type='*' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_SHA224_Final'>
<arg c_array_of_fixed_length='28' type='*' type_modifier='o'/>
<arg type='^{CC_SHA256state_st=[2I][8I][16I]}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_SHA224_Init'>
<arg type='^{CC_SHA256state_st=[2I][8I][16I]}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_SHA224_Update'>
<arg type='^{CC_SHA256state_st=[2I][8I][16I]}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CC_SHA256'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg c_array_of_fixed_length='32' type='*' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_SHA256_Final'>
<arg c_array_of_fixed_length='32' type='*' type_modifier='o'/>
<arg type='^{CC_SHA256state_st=[2I][8I][16I]}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_SHA256_Init'>
<arg type='^{CC_SHA256state_st=[2I][8I][16I]}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_SHA256_Update'>
<arg type='^{CC_SHA256state_st=[2I][8I][16I]}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CC_SHA384'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg c_array_of_fixed_length='48' type='*' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_SHA384_Final'>
<arg c_array_of_fixed_length='48' type='*' type_modifier='o'/>
<arg type='^{CC_SHA512state_st=[2Q][8Q][16Q]}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_SHA384_Init'>
<arg type='^{CC_SHA512state_st=[2Q][8Q][16Q]}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_SHA384_Update'>
<arg type='^{CC_SHA512state_st=[2Q][8Q][16Q]}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CC_SHA512'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg c_array_of_fixed_length='64' type='*' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_SHA512_Final'>
<arg c_array_of_fixed_length='64' type='*' type_modifier='o'/>
<arg type='^{CC_SHA512state_st=[2Q][8Q][16Q]}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_SHA512_Init'>
<arg type='^{CC_SHA512state_st=[2Q][8Q][16Q]}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_SHA512_Update'>
<arg type='^{CC_SHA512state_st=[2Q][8Q][16Q]}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='act_get_state'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='act_set_state'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='asl_add_log_file'>
<arg type='^{__aslclient=}' type_modifier='n'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='asl_close'>
<arg type='^{__aslclient=}' type_modifier='n'/>
</function>
<function name='asl_close_auxiliary_file'>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='asl_create_auxiliary_file'>
<arg type='^{__aslmsg=}'/>
<arg type='*'/>
<arg type='*'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='asl_free'>
<arg type='^{__aslmsg=}' type_modifier='n'/>
</function>
<function name='asl_get'>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<arg type='*'/>
<retval type='*'/>
</function>
<function name='asl_key'>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<arg type='I'/>
<retval type='*'/>
</function>
<function name='asl_log' variadic='true'>
<arg type='^{__aslclient=}' type_modifier='n'/>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<arg type='i'/>
<arg printf_format='true' type='*'/>
<retval type='i'/>
</function>
<function name='asl_log_auxiliary_location'>
<arg type='^{__aslmsg=}'/>
<arg type='*'/>
<arg type='*'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='asl_new'>
<arg type='I'/>
<retval type='^{__aslmsg=}'/>
</function>
<function name='asl_open'>
<arg type='*'/>
<arg type='*'/>
<arg type='I'/>
<retval type='^{__aslclient=}'/>
</function>
<function name='asl_open_from_file'>
<arg type='i'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{__aslclient=}'/>
</function>
<function name='asl_remove_log_file'>
<arg type='^{__aslclient=}' type_modifier='n'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='asl_search'>
<arg type='^{__aslclient=}' type_modifier='n'/>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<retval type='^{__aslresponse=}'/>
</function>
<function name='asl_send'>
<arg type='^{__aslclient=}' type_modifier='n'/>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='asl_set'>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<arg type='*'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='asl_set_filter'>
<arg type='^{__aslclient=}' type_modifier='n'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='asl_set_query'>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<arg type='*'/>
<arg type='*'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='asl_unset'>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='asl_vlog'>
<arg type='^{__aslclient=}'/>
<arg type='^{__aslmsg=}'/>
<arg type='i'/>
<arg printf_format='true' type='*'/>
<arg type64='^{__va_list_tag=II^v^v}' type='*'/>
<retval type='i'/>
</function>
<function name='aslresponse_free'>
<arg type='^{__aslresponse=}' type_modifier='n'/>
</function>
<function name='aslresponse_next'>
<arg type='^{__aslresponse=}' type_modifier='n'/>
<retval type='^{__aslmsg=}'/>
</function>
<function name='clock_alarm'>
<arg type='I'/>
<arg type='i'/>
<arg type='{mach_timespec=Ii}'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='clock_alarm_reply'>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='{mach_timespec=Ii}'/>
<retval type='i'/>
</function>
<function name='clock_get_attributes'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='clock_get_res'>
<arg type='I'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='clock_get_time'>
<arg type='I'/>
<arg type='^{mach_timespec=Ii}'/>
<retval type='i'/>
</function>
<function name='clock_set_attributes'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='clock_set_res'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='clock_set_time'>
<arg type='I'/>
<arg type='{mach_timespec=Ii}'/>
<retval type='i'/>
</function>
<function name='clock_sleep'>
<arg type='I'/>
<arg type='i'/>
<arg type='{mach_timespec=Ii}'/>
<arg type='^{mach_timespec=Ii}'/>
<retval type='i'/>
</function>
<function name='copyfile'>
<arg type='*'/>
<arg type='*'/>
<arg type='^{_copyfile_state=}' type_modifier='o'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='copyfile_state_alloc'>
<retval type='^{_copyfile_state=}'/>
</function>
<function name='copyfile_state_free'>
<arg type='^{_copyfile_state=}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='copyfile_state_get'>
<arg type='^{_copyfile_state=}' type_modifier='n'/>
<arg type='I'/>
<arg type='^v' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='copyfile_state_set'>
<arg type='^{_copyfile_state=}' type_modifier='n'/>
<arg type='I'/>
<arg type='^v' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='dispatch_semaphore_create'>
<arg type64='q' type='l'/>
<retval type='^{dispatch_semaphore_s=}'/>
</function>
<function name='dispatch_semaphore_signal'>
<arg type='^{dispatch_semaphore_s=}'/>
<retval type64='q' type='l'/>
</function>
<function name='dispatch_semaphore_wait'>
<arg type='^{dispatch_semaphore_s=}'/>
<arg type='Q'/>
<retval type64='q' type='l'/>
</function>
<function name='etap_trace_thread'>
<arg type='I'/>
<arg type64='I' type='i'/>
<retval type='i'/>
</function>
<function name='exception_raise'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='exception_raise_state'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='^I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='exception_raise_state_identity'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='^I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='fcopyfile'>
<arg type='i'/>
<arg type='i'/>
<arg type='^{_copyfile_state=}' type_modifier='o'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='get_dp_control_port'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_default_memory_manager'>
<arg type='I'/>
<arg type='^I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='host_get_UNDServer'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_get_boot_info'>
<arg type='I'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='host_get_clock_control'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_get_clock_service'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_get_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='host_get_io_master'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_get_special_port'>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_info'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_ipc_hash_info'>
<arg type='I'/>
<arg type='^^{hash_info_bucket}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_kernel_version'>
<arg type='I'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='host_load_symbol_table'>
<arg type='I'/>
<arg type='I'/>
<arg type='*'/>
<arg type64='Q' type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='host_lockgroup_info'>
<arg type='I'/>
<arg type='^^{lockgroup_info}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_page_size'>
<arg type='I'/>
<arg type64='^Q' type='^I'/>
<retval type='i'/>
</function>
<function name='host_priv_statistics'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_processor_info'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_processor_set_priv'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_processor_sets'>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_processors'>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_reboot'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='host_request_notification'>
<arg type='I'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='host_security_create_task_token'>
<arg type='I'/>
<arg type='I'/>
<arg type='{_security_token_t=[2I]}'/>
<arg type='{_audit_token_t=[8I]}'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='I'/>
<arg type64='I' type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_security_set_task_token'>
<arg type='I'/>
<arg type='I'/>
<arg type='{_security_token_t=[2I]}'/>
<arg type='{_audit_token_t=[8I]}'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='host_set_UNDServer'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='host_set_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='host_set_special_port'>
<arg type='I'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='host_statistics'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_statistics64'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_swap_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='host_virtual_physical_table_info'>
<arg type='I'/>
<arg type='^^{hash_info_bucket}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_zone_info'>
<arg type='I'/>
<arg type='^^{zone_name}'/>
<arg type='^I'/>
<arg type='^^{zone_info}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='kext_request'>
<arg type='I'/>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type='I'/>
<arg type64='^Q' type='^I'/>
<arg type='^I'/>
<arg type64='^Q' type='^I'/>
<arg type='^I'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='kmod_control'>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='^^v'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='kmod_create'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='kmod_destroy'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='kmod_get_info'>
<arg type='I'/>
<arg type='^^v'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='launch_data_alloc'>
<arg type='i'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_array_get_count'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<retval type64='Q' type='L'/>
</function>
<function name='launch_data_array_get_index'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<arg type64='Q' type='L'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_array_set_index'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<arg type64='Q' type='L'/>
<retval type='B'/>
</function>
<function name='launch_data_copy'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_dict_get_count'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<retval type64='Q' type='L'/>
</function>
<function name='launch_data_dict_insert'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<arg null_accepted='false' type='*'/>
<retval type='B'/>
</function>
<function name='launch_data_dict_iterate'>
<arg null_accepted='false' type='^{_launch_data=}'/>
<arg function_pointer='true' null_accepted='false' type='^?'>
<arg type='^{_launch_data=}'/>
<arg type='*'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='^v'/>
</function>
<function name='launch_data_dict_lookup'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<arg null_accepted='false' type='*'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_dict_remove'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<arg null_accepted='false' type='*'/>
<retval type='B'/>
</function>
<function name='launch_data_free'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
</function>
<function name='launch_data_get_bool'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<retval type='B'/>
</function>
<function name='launch_data_get_errno'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='launch_data_get_fd'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='launch_data_get_integer'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<retval type='q'/>
</function>
<function name='launch_data_get_machport'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<retval type='I'/>
</function>
<function name='launch_data_get_opaque'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<retval type='^v'/>
</function>
<function name='launch_data_get_opaque_size'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<retval type64='Q' type='L'/>
</function>
<function name='launch_data_get_real'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<retval type='d'/>
</function>
<function name='launch_data_get_string'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<retval type='*'/>
</function>
<function name='launch_data_get_type'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='launch_data_new_bool'>
<arg type='B'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_new_fd'>
<arg type='i'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_new_integer'>
<arg type='q'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_new_machport'>
<arg type='I'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_new_opaque'>
<arg null_accepted='false' type='^v' type_modifier='n'/>
<arg type64='Q' type='L'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_new_real'>
<arg type='d'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_new_string'>
<arg null_accepted='false' type='*'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_set_bool'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<arg type='B'/>
<retval type='B'/>
</function>
<function name='launch_data_set_fd'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<arg type='i'/>
<retval type='B'/>
</function>
<function name='launch_data_set_integer'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<arg type='q'/>
<retval type='B'/>
</function>
<function name='launch_data_set_machport'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<arg type='I'/>
<retval type='B'/>
</function>
<function name='launch_data_set_opaque'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<arg null_accepted='false' type='^v' type_modifier='n'/>
<arg type64='Q' type='L'/>
<retval type='B'/>
</function>
<function name='launch_data_set_real'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<arg type='d'/>
<retval type='B'/>
</function>
<function name='launch_data_set_string'>
<arg null_accepted='false' type='^{_launch_data=}' type_modifier='n'/>
<arg null_accepted='false' type='*'/>
<retval type='B'/>
</function>
<function name='launch_get_fd'>
<retval type='i'/>
</function>
<function name='launch_msg'>
<arg type='^{_launch_data=}' type_modifier='n'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='ledger_create'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='ledger_read'>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='ledger_terminate'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='ledger_transfer'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='lock_acquire'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='lock_handoff'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='lock_handoff_accept'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='lock_make_stable'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='lock_release'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='lock_set_create'>
<arg type='I'/>
<arg type='^I'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='lock_set_destroy'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='lock_try'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_absolute_time'>
<retval type='Q'/>
</function>
<function name='mach_error'>
<arg type='*'/>
<arg type='i'/>
</function>
<function name='mach_error_string'>
<arg type='i'/>
<retval type='*'/>
</function>
<function name='mach_error_type'>
<arg type='i'/>
<retval type='*'/>
</function>
<function name='mach_host_self'>
<retval type='I'/>
</function>
<function name='mach_make_memory_entry'>
<arg type='I'/>
<arg type64='^Q' type='^I'/>
<arg type64='Q' type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_make_memory_entry_64'>
<arg type='I'/>
<arg type='^Q'/>
<arg type='Q'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_memory_object_memory_entry'>
<arg type='I'/>
<arg type64='I' type='i'/>
<arg type64='Q' type='I'/>
<arg type='i'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_memory_object_memory_entry_64'>
<arg type='I'/>
<arg type64='I' type='i'/>
<arg type='Q'/>
<arg type='i'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_msg'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<arg type='i'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_msg_destroy'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
</function>
<function name='mach_msg_overwrite'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<arg type='i'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_msg_receive'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<retval type='i'/>
</function>
<function name='mach_msg_send'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<retval type='i'/>
</function>
<function name='mach_msg_server'>
<arg function_pointer='true' type='^?'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<retval type64='I' type='i'/>
</arg>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_msg_server_once'>
<arg function_pointer='true' type='^?'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<retval type64='I' type='i'/>
</arg>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_port_allocate'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_allocate_full'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='^{mach_port_qos=b1b1b30I}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_allocate_name'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_allocate_qos'>
<arg type='I'/>
<arg type='I'/>
<arg type='^{mach_port_qos=b1b1b30I}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_deallocate'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_destroy'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_dnrequest_info'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_extract_member'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_extract_right'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_get_attributes'>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_get_context'>
<arg type='I'/>
<arg type='I'/>
<arg type='^Q'/>
<retval type='i'/>
</function>
<function name='mach_port_get_refs'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_get_set_status'>
<arg type='I'/>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_get_srights'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_insert_member'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_insert_right'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_kernel_object'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_kobject'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^Q'/>
<retval type='i'/>
</function>
<function name='mach_port_mod_refs'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_port_move_member'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_names'>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_rename'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_request_notification'>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_set_attributes'>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_set_context'>
<arg type='I'/>
<arg type='I'/>
<arg type='Q'/>
<retval type='i'/>
</function>
<function name='mach_port_set_mscount'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_set_seqno'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_space_info'>
<arg type='I'/>
<arg type='^{ipc_info_space=IIIIII}'/>
<arg type='^^{ipc_info_name}'/>
<arg type='^I'/>
<arg type='^^{ipc_info_tree_name}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_type'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_ports_lookup'>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_ports_register'>
<arg type='I'/>
<arg type='^I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_thread_self'>
<retval type='I'/>
</function>
<function name='mach_timebase_info'>
<arg type='^{mach_timebase_info=II}'/>
<retval type='i'/>
</function>
<function name='mach_vm_allocate'>
<arg type='I'/>
<arg type='^Q'/>
<arg type='Q'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_vm_behavior_set'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_vm_copy'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='Q'/>
<retval type='i'/>
</function>
<function name='mach_vm_deallocate'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<retval type='i'/>
</function>
<function name='mach_vm_inherit'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_vm_machine_attribute'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='I'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='mach_vm_map'>
<arg type='I'/>
<arg type='^Q'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='i'/>
<arg type='I'/>
<arg type='Q'/>
<arg type64='I' type='i'/>
<arg type='i'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_vm_msync'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_vm_page_info'>
<arg type='I'/>
<arg type='Q'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_vm_page_query'>
<arg type='I'/>
<arg type='Q'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='mach_vm_protect'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type64='I' type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_vm_purgable_control'>
<arg type='I'/>
<arg type='Q'/>
<arg type='i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='mach_vm_read'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type64='^Q' type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_vm_read_list'>
<arg type='I'/>
<arg type='^{mach_vm_read_entry=QQ}'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_vm_read_overwrite'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='^Q'/>
<retval type='i'/>
</function>
<function name='mach_vm_region'>
<arg type='I'/>
<arg type='^Q'/>
<arg type='^Q'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_vm_region_info'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='^{vm_info_region=IIIIIiiIII}' type='^{vm_info_region=IIIIiiiIII}'/>
<arg type='^^{vm_info_object}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_vm_region_info_64'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='^{vm_info_region_64=IIIQIiiIII}' type='^{vm_info_region_64=IIIQiiiIII}'/>
<arg type='^^{vm_info_object}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_vm_region_recurse'>
<arg type='I'/>
<arg type='^Q'/>
<arg type='^Q'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_vm_remap'>
<arg type='I'/>
<arg type='^Q'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='i'/>
<arg type='I'/>
<arg type='Q'/>
<arg type64='I' type='i'/>
<arg type='^i'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_vm_wire'>
<arg type='I'/>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_vm_write'>
<arg type='I'/>
<arg type='Q'/>
<arg type64='Q' type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_wait_until'>
<arg type='Q'/>
<retval type='i'/>
</function>
<function name='mach_zone_info'>
<arg type='I'/>
<arg type='^^{mach_zone_name}'/>
<arg type='^I'/>
<arg type='^^{mach_zone_info_data}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='macx_backing_store_recovery'>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='macx_backing_store_suspend'>
<arg type64='I' type='i'/>
<retval type='i'/>
</function>
<function name='macx_swapoff'>
<arg type='Q'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='macx_swapon'>
<arg type='Q'/>
<arg type='i'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='macx_triggers'>
<arg type='i'/>
<arg type='i'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mig_allocate'>
<arg type64='^Q' type='^I'/>
<arg type64='Q' type='I'/>
</function>
<function name='mig_dealloc_reply_port'>
<arg type='I'/>
</function>
<function name='mig_deallocate'>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
</function>
<function name='mig_get_reply_port'>
<retval type='I'/>
</function>
<function name='mig_put_reply_port'>
<arg type='I'/>
</function>
<function name='mig_reply_setup'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
</function>
<function name='mig_strncpy'>
<arg type='*'/>
<arg type='*'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='notify_cancel'>
<arg type='i'/>
<retval type='I'/>
</function>
<function name='notify_check'>
<arg type='i'/>
<arg type='^i' type_modifier='o'/>
<retval type='I'/>
</function>
<function name='notify_get_state'>
<arg type='i'/>
<arg type='^Q' type_modifier='o'/>
<retval type='I'/>
</function>
<function name='notify_post'>
<arg type='*'/>
<retval type='I'/>
</function>
<function name='notify_register_check'>
<arg type='*'/>
<arg type='^i' type_modifier='o'/>
<retval type='I'/>
</function>
<function name='notify_register_dispatch'>
<arg type='*'/>
<arg type='^i'/>
<arg type='^{dispatch_queue_s=}'/>
<arg function_pointer='true' type='@?'>
<arg type='i'/>
<retval type='v'/>
</arg>
<retval type='I'/>
</function>
<function name='notify_register_file_descriptor'>
<arg type='*'/>
<arg type='^i' type_modifier='o'/>
<arg type='i'/>
<arg type='^i' type_modifier='N'/>
<retval type='I'/>
</function>
<function name='notify_register_mach_port'>
<arg type='*'/>
<arg type='^I' type_modifier='N'/>
<arg type='i'/>
<arg type='^i' type_modifier='o'/>
<retval type='I'/>
</function>
<function name='notify_register_signal'>
<arg type='*'/>
<arg type='i'/>
<arg type='^i' type_modifier='o'/>
<retval type='I'/>
</function>
<function name='notify_resume'>
<arg type='i'/>
<retval type='I'/>
</function>
<function name='notify_set_state'>
<arg type='i'/>
<arg type='Q'/>
<retval type='I'/>
</function>
<function name='notify_suspend'>
<arg type='i'/>
<retval type='I'/>
</function>
<function name='panic' variadic='true'>
<arg type='*'/>
</function>
<function name='panic_init'>
<arg type='I'/>
</function>
<function name='pid_for_task'>
<arg type='I'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='port_obj_init'>
<arg type='i'/>
</function>
<function name='processor_assign'>
<arg type='I'/>
<arg type='I'/>
<arg type64='I' type='i'/>
<retval type='i'/>
</function>
<function name='processor_control'>
<arg type='I'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='processor_exit'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='processor_get_assignment'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_info'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_set_create'>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_set_default'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_set_destroy'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='processor_set_info'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_set_max_priority'>
<arg type='I'/>
<arg type='i'/>
<arg type64='I' type='i'/>
<retval type='i'/>
</function>
<function name='processor_set_policy_control'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<arg type64='I' type='i'/>
<retval type='i'/>
</function>
<function name='processor_set_policy_disable'>
<arg type='I'/>
<arg type='i'/>
<arg type64='I' type='i'/>
<retval type='i'/>
</function>
<function name='processor_set_policy_enable'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='processor_set_stack_usage'>
<arg type='I'/>
<arg type='^I'/>
<arg type64='^Q' type='^I'/>
<arg type64='^Q' type='^I'/>
<arg type64='^Q' type='^I'/>
<arg type64='^Q' type='^I'/>
<retval type='i'/>
</function>
<function name='processor_set_statistics'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_set_tasks'>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_set_threads'>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_start'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='safe_gets'>
<arg type='*'/>
<arg type='*'/>
<arg type='i'/>
</function>
<function name='sandbox_free_error'>
<arg type='*'/>
</function>
<function name='sandbox_init'>
<arg type='*'/>
<arg type='Q'/>
<arg type='^*' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='semaphore_create'>
<arg type='I'/>
<arg type='^I'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='semaphore_destroy'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='semaphore_signal'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='semaphore_signal_all'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='semaphore_signal_thread'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='semaphore_timedwait'>
<arg type='I'/>
<arg type='{mach_timespec=Ii}'/>
<retval type='i'/>
</function>
<function name='semaphore_timedwait_signal'>
<arg type='I'/>
<arg type='I'/>
<arg type='{mach_timespec=Ii}'/>
<retval type='i'/>
</function>
<function name='semaphore_wait'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='semaphore_wait_signal'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='set_dp_control_port'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='shared_region_check_np'>
<arg type='^Q'/>
<retval type='i'/>
</function>
<function name='shared_region_make_private_np'>
<arg type='I'/>
<arg type='^{shared_region_range_np=QQ}'/>
<retval type='i'/>
</function>
<function name='shared_region_map_file_np'>
<arg type='i'/>
<arg type='I'/>
<arg type='^{shared_file_mapping_np=QQQii}'/>
<arg type='^q'/>
<retval type='i'/>
</function>
<function name='shared_region_map_np'>
<arg type='i'/>
<arg type='I'/>
<arg type='^{shared_file_mapping_np=QQQii}'/>
<retval type='i'/>
</function>
<function name='shared_region_slide_np'>
<retval type='i'/>
</function>
<function name='slot_name'>
<arg type='i'/>
<arg type='i'/>
<arg type='^*'/>
<arg type='^*'/>
</function>
<function name='swtch'>
<retval type64='I' type='i'/>
</function>
<function name='swtch_pri'>
<arg type='i'/>
<retval type64='I' type='i'/>
</function>
<function name='task_assign'>
<arg type='I'/>
<arg type='I'/>
<arg type64='I' type='i'/>
<retval type='i'/>
</function>
<function name='task_assign_default'>
<arg type='I'/>
<arg type64='I' type='i'/>
<retval type='i'/>
</function>
<function name='task_create'>
<arg type='I'/>
<arg type='^I'/>
<arg type='I'/>
<arg type64='I' type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_for_pid'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_get_assignment'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_get_emulation_vector'>
<arg type='I'/>
<arg type='^i'/>
<arg type='^^Q'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_get_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='task_get_special_port'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_get_state'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_info'>
<arg type='I'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_name_for_pid'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_policy'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<arg type64='I' type='i'/>
<arg type64='I' type='i'/>
<retval type='i'/>
</function>
<function name='task_policy_get'>
<arg type='I'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='^I'/>
<arg type64='^I' type='^i'/>
<retval type='i'/>
</function>
<function name='task_policy_set'>
<arg type='I'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_resume'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_sample'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_self_trap'>
<retval type='I'/>
</function>
<function name='task_set_emulation'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='task_set_emulation_vector'>
<arg type='I'/>
<arg type='i'/>
<arg type='^Q'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_set_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='task_set_info'>
<arg type='I'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_set_policy'>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='I'/>
<arg type64='I' type='i'/>
<retval type='i'/>
</function>
<function name='task_set_port_space'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='task_set_ras_pc'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<retval type='i'/>
</function>
<function name='task_set_special_port'>
<arg type='I'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_set_state'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_suspend'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_swap_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='task_terminate'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_threads'>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_wire'>
<arg type='I'/>
<arg type64='I' type='i'/>
<retval type='i'/>
</function>
<function name='task_zone_info'>
<arg type='I'/>
<arg type='^^{mach_zone_name}'/>
<arg type='^I'/>
<arg type='^^{task_zone_info_data}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='thread_abort'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_abort_safely'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_assign'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_assign_default'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_create'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='thread_create_running'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='thread_depress_abort'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_get_assignment'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='thread_get_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='thread_get_special_port'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='thread_get_state'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='thread_info'>
<arg type='I'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='thread_policy'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<arg type64='I' type='i'/>
<retval type='i'/>
</function>
<function name='thread_policy_get'>
<arg type='I'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='^I'/>
<arg type64='^I' type='^i'/>
<retval type='i'/>
</function>
<function name='thread_policy_set'>
<arg type='I'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_resume'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_sample'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_set_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='thread_set_policy'>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_set_special_port'>
<arg type='I'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_set_state'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_suspend'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_swap_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='thread_switch'>
<arg type='I'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_terminate'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_wire'>
<arg type='I'/>
<arg type='I'/>
<arg type64='I' type='i'/>
<retval type='i'/>
</function>
<function name='vm_allocate'>
<arg type='I'/>
<arg type64='^Q' type='^I'/>
<arg type64='Q' type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='vm_allocate_cpm'>
<arg type='I'/>
<arg type='I'/>
<arg type64='^Q' type='^I'/>
<arg type64='Q' type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='vm_behavior_set'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='vm_copy'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<retval type='i'/>
</function>
<function name='vm_deallocate'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<retval type='i'/>
</function>
<function name='vm_inherit'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='vm_machine_attribute'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<arg type='I'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='vm_map'>
<arg type='I'/>
<arg type64='^Q' type='^I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<arg type='i'/>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='I' type='i'/>
<arg type='i'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='vm_map_64'>
<arg type='I'/>
<arg type64='^Q' type='^I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<arg type='i'/>
<arg type='I'/>
<arg type='Q'/>
<arg type64='I' type='i'/>
<arg type='i'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='vm_map_page_query'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='vm_mapped_pages_info'>
<arg type='I'/>
<arg type64='^^Q' type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='vm_msync'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='vm_protect'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<arg type64='I' type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='vm_purgable_control'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type='i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='vm_read'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<arg type64='^Q' type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='vm_read_list'>
<arg type='I'/>
<arg type64='^{vm_read_entry=QQ}' type='^{vm_read_entry=II}'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='vm_read_overwrite'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<arg type64='^Q' type='^I'/>
<retval type='i'/>
</function>
<function name='vm_region'>
<arg type='I'/>
<arg type64='^Q' type='^I'/>
<arg type64='^Q' type='^I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='vm_region_64'>
<arg type='I'/>
<arg type64='^Q' type='^I'/>
<arg type64='^Q' type='^I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='vm_region_recurse'>
<arg type='I'/>
<arg type64='^Q' type='^I'/>
<arg type64='^Q' type='^I'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='vm_region_recurse_64'>
<arg type='I'/>
<arg type64='^Q' type='^I'/>
<arg type64='^Q' type='^I'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='vm_remap'>
<arg type='I'/>
<arg type64='^Q' type='^I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<arg type='i'/>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='I' type='i'/>
<arg type='^i'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='vm_wire'>
<arg type='I'/>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='vm_write'>
<arg type='I'/>
<arg type64='Q' type='I'/>
<arg type64='Q' type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
</signatures>
